{"version":3,"file":"nivo-scales.cjs.js","sources":["../src/linearScale.js","../src/logScale.js","../src/symlogScale.js","../src/pointScale.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../src/timeHelpers.js","../src/timeScale.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/compute.js","../src/index.js"],"sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scaleLinear } from 'd3-scale'\nimport PropTypes from 'prop-types'\n\nexport const linearScale = (\n    { axis, min = 0, max = 'auto', stacked = false, reverse = false },\n    xy,\n    width,\n    height\n) => {\n    const values = xy[axis]\n    const size = axis === 'x' ? width : height\n\n    let minValue = min\n    if (min === 'auto') {\n        minValue = stacked === true ? values.minStacked : values.min\n    }\n    let maxValue = max\n    if (max === 'auto') {\n        maxValue = stacked === true ? values.maxStacked : values.max\n    }\n\n    const scale = scaleLinear().rangeRound(axis === 'x' ? [0, size] : [size, 0])\n\n    if (reverse === true) scale.domain([maxValue, minValue])\n    else scale.domain([minValue, maxValue])\n\n    scale.type = 'linear'\n    scale.stacked = stacked\n\n    return scale\n}\n\nexport const linearScalePropTypes = {\n    type: PropTypes.oneOf(['linear']).isRequired,\n    min: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n    max: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n    stacked: PropTypes.bool,\n    reverse: PropTypes.bool,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scaleLog } from 'd3-scale'\nimport PropTypes from 'prop-types'\n\nexport const logScale = ({ axis, base = 10, min = 'auto', max = 'auto' }, xy, width, height) => {\n    const values = xy[axis]\n    const size = axis === 'x' ? width : height\n\n    const hasZero = values.all.some(v => v === 0)\n    let sign\n    let hasMixedSign = false\n    values.all.forEach(v => {\n        if (hasMixedSign === true) return\n        if (sign === undefined) {\n            sign = Math.sign(v)\n        } else if (Math.sign(v) !== sign) {\n            hasMixedSign = true\n        }\n    })\n\n    if (hasZero || hasMixedSign) {\n        throw new Error(\n            [\n                `a log scale domain must be strictly-positive or strictly-negative,`,\n                `and must not include or cross zero.`,\n            ].join('\\n')\n        )\n    }\n\n    let minValue = min\n    if (min === 'auto') {\n        minValue = values.min\n    }\n    let maxValue = max\n    if (max === 'auto') {\n        maxValue = values.max\n    }\n\n    const scale = scaleLog()\n        .domain([minValue, maxValue])\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .base(base)\n        .nice()\n\n    scale.type = 'log'\n\n    return scale\n}\n\nexport const logScalePropTypes = {\n    type: PropTypes.oneOf(['log']).isRequired,\n    base: PropTypes.number,\n    min: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n    max: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scaleSymlog } from 'd3-scale'\nimport PropTypes from 'prop-types'\n\nexport const symlogScale = (\n    { axis, constant = 1, min = 'auto', max = 'auto' },\n    xy,\n    width,\n    height\n) => {\n    const values = xy[axis]\n    const size = axis === 'x' ? width : height\n\n    let minValue = min\n    if (min === 'auto') {\n        minValue = values.min\n    }\n\n    let maxValue = max\n    if (max === 'auto') {\n        maxValue = values.max\n    }\n\n    const scale = scaleSymlog()\n        .domain([minValue, maxValue])\n        .constant(constant)\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .nice()\n\n    scale.type = 'symlog'\n\n    return scale\n}\n\nexport const symLogScalePropTypes = {\n    type: PropTypes.oneOf(['symlog']).isRequired,\n    constant: PropTypes.number,\n    min: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n    max: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scalePoint } from 'd3-scale'\nimport PropTypes from 'prop-types'\n\nexport const pointScale = ({ axis }, xy, width, height) => {\n    const values = xy[axis]\n    const size = axis === 'x' ? width : height\n\n    const scale = scalePoint().range([0, size]).domain(values.all)\n\n    scale.type = 'point'\n\n    return scale\n}\n\nexport const pointScalePropTypes = {\n    type: PropTypes.oneOf(['point']).isRequired,\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { timeParse, utcParse } from 'd3-time-format'\n\nexport const TIME_PRECISION_MILLISECOND = 'millisecond'\nexport const TIME_PRECISION_SECOND = 'second'\nexport const TIME_PRECISION_MINUTE = 'minute'\nexport const TIME_PRECISION_HOUR = 'hour'\nexport const TIME_PRECISION_DAY = 'day'\nexport const TIME_PRECISION_MONTH = 'month'\nexport const TIME_PRECISION_YEAR = 'year'\n\nexport const timePrecisions = [\n    TIME_PRECISION_MILLISECOND,\n    TIME_PRECISION_SECOND,\n    TIME_PRECISION_MINUTE,\n    TIME_PRECISION_HOUR,\n    TIME_PRECISION_DAY,\n    TIME_PRECISION_MONTH,\n    TIME_PRECISION_YEAR,\n]\n\nexport const precisionCutOffs = [\n    date => date.setMilliseconds(0),\n    date => date.setSeconds(0),\n    date => date.setMinutes(0),\n    date => date.setHours(0),\n    date => date.setDate(1),\n    date => date.setMonth(0),\n]\n\nexport const precisionCutOffsByType = {\n    [TIME_PRECISION_MILLISECOND]: [],\n    [TIME_PRECISION_SECOND]: precisionCutOffs.slice(0, 1),\n    [TIME_PRECISION_MINUTE]: precisionCutOffs.slice(0, 2),\n    [TIME_PRECISION_HOUR]: precisionCutOffs.slice(0, 3),\n    [TIME_PRECISION_DAY]: precisionCutOffs.slice(0, 4),\n    [TIME_PRECISION_MONTH]: precisionCutOffs.slice(0, 5),\n    [TIME_PRECISION_YEAR]: precisionCutOffs.slice(0, 6),\n}\n\nexport const createPrecisionMethod = precision => date => {\n    precisionCutOffsByType[precision].forEach(cutOff => {\n        cutOff(date)\n    })\n    return date\n}\n\nexport const createDateNormalizer = ({\n    format = 'native',\n    precision = 'millisecond',\n    useUTC = true,\n}) => {\n    const precisionFn = createPrecisionMethod(precision)\n    if (format === 'native') return v => precisionFn(v)\n\n    const parseTime = useUTC ? utcParse(format) : timeParse(format)\n    return v => precisionFn(parseTime(v))\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scaleTime, scaleUtc } from 'd3-scale'\nimport PropTypes from 'prop-types'\nimport { createDateNormalizer, timePrecisions, TIME_PRECISION_MILLISECOND } from './timeHelpers'\n\nexport const timeScale = (\n    {\n        axis,\n        format = 'native',\n        precision = TIME_PRECISION_MILLISECOND,\n        min = 'auto',\n        max = 'auto',\n        useUTC = true,\n    },\n    xy,\n    width,\n    height\n) => {\n    const values = xy[axis]\n    const size = axis === 'x' ? width : height\n\n    const normalize = createDateNormalizer({ format, precision, useUTC })\n\n    let minValue = min\n    if (min === 'auto') {\n        minValue = values.min\n    } else if (format !== 'native') {\n        minValue = normalize(min)\n    }\n\n    let maxValue = max\n    if (max === 'auto') {\n        maxValue = values.max\n    } else if (format !== 'native') {\n        maxValue = normalize(max)\n    }\n\n    const scale = useUTC ? scaleUtc() : scaleTime()\n    scale.domain([minValue, maxValue]).range([0, size])\n\n    scale.type = 'time'\n    scale.useUTC = useUTC\n\n    return scale\n}\n\nexport const timeScalePropTypes = {\n    type: PropTypes.oneOf(['time']).isRequired,\n    format: PropTypes.string,\n    precision: PropTypes.oneOf(timePrecisions),\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport uniq from 'lodash/uniq'\nimport uniqBy from 'lodash/uniqBy'\nimport sortBy from 'lodash/sortBy'\nimport last from 'lodash/last'\nimport isDate from 'lodash/isDate'\nimport { linearScale } from './linearScale'\nimport { logScale } from './logScale'\nimport { symlogScale } from './symlogScale'\nimport { pointScale } from './pointScale'\nimport { timeScale } from './timeScale'\nimport { createDateNormalizer } from './timeHelpers'\n\nexport const getOtherAxis = axis => (axis === 'x' ? 'y' : 'x')\n\nexport const compareValues = (a, b) => a === b\nexport const compareDateValues = (a, b) => a.getTime() === b.getTime()\n\nexport const computeXYScalesForSeries = (_series, xScaleSpec, yScaleSpec, width, height) => {\n    const series = _series.map(serie => ({\n        ...serie,\n        data: serie.data.map(d => ({ data: { ...d } })),\n    }))\n\n    let xy = generateSeriesXY(series, xScaleSpec, yScaleSpec)\n    if (xScaleSpec.stacked === true) {\n        stackX(yScaleSpec.type, xy, series)\n    }\n    if (yScaleSpec.stacked === true) {\n        stackY(xScaleSpec.type, xy, series)\n    }\n\n    const xScale = computeScale({ ...xScaleSpec, axis: 'x' }, xy, width, height)\n    const yScale = computeScale({ ...yScaleSpec, axis: 'y' }, xy, width, height)\n\n    series.forEach(serie => {\n        serie.data.forEach(d => {\n            d.position = {\n                x:\n                    xScale.stacked === true\n                        ? d.data.xStacked === null\n                            ? null\n                            : xScale(d.data.xStacked)\n                        : d.data.x === null\n                        ? null\n                        : xScale(d.data.x),\n                y:\n                    yScale.stacked === true\n                        ? d.data.yStacked === null\n                            ? null\n                            : yScale(d.data.yStacked)\n                        : d.data.y === null\n                        ? null\n                        : yScale(d.data.y),\n            }\n        })\n    })\n\n    return {\n        ...xy,\n        series,\n        xScale,\n        yScale,\n    }\n}\n\nexport const computeScale = (spec, xy, width, height) => {\n    if (spec.type === 'linear') return linearScale(spec, xy, width, height)\n    else if (spec.type === 'point') return pointScale(spec, xy, width, height)\n    else if (spec.type === 'time') return timeScale(spec, xy, width, height)\n    else if (spec.type === 'log') return logScale(spec, xy, width, height)\n    else if (spec.type === 'symlog') return symlogScale(spec, xy, width, height)\n}\n\nexport const generateSeriesXY = (series, xScaleSpec, yScaleSpec) => ({\n    x: generateSeriesAxis(series, 'x', xScaleSpec),\n    y: generateSeriesAxis(series, 'y', yScaleSpec),\n})\n\n/**\n * Normalize data according to scale type, (time => Date, linear => Number)\n * compute sorted unique values and min/max.\n */\nexport const generateSeriesAxis = (\n    series,\n    axis,\n    scaleSpec,\n    {\n        getValue = d => d.data[axis],\n        setValue = (d, v) => {\n            d.data[axis] = v\n        },\n    } = {}\n) => {\n    if (scaleSpec.type === 'linear') {\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                setValue(d, getValue(d) === null ? null : parseFloat(getValue(d)))\n            })\n        })\n    } else if (scaleSpec.type === 'time' && scaleSpec.format !== 'native') {\n        const parseTime = createDateNormalizer(scaleSpec)\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                setValue(d, getValue(d) === null ? null : parseTime(getValue(d)))\n            })\n        })\n    }\n\n    let all = []\n    series.forEach(serie => {\n        serie.data.forEach(d => {\n            all.push(getValue(d))\n        })\n    })\n\n    let min, max\n    if (scaleSpec.type === 'linear') {\n        all = uniq(all)\n        all = sortBy(all, v => v)\n        min = Math.min(...all)\n        max = Math.max(...all)\n    } else if (scaleSpec.type === 'time') {\n        all = uniqBy(all, v => v.getTime())\n        all = all\n            .slice(0)\n            .sort((a, b) => b - a)\n            .reverse()\n        min = all[0]\n        max = last(all)\n    } else {\n        all = uniq(all)\n        min = all[0]\n        max = last(all)\n    }\n\n    return { all, min, max }\n}\n\nexport const stackAxis = (axis, otherType, xy, series) => {\n    const otherAxis = getOtherAxis(axis)\n\n    let all = []\n    xy[otherAxis].all.forEach(v => {\n        const compare = isDate(v) ? compareDateValues : compareValues\n        const stack = []\n        series.forEach(serie => {\n            const datum = serie.data.find(d => compare(d.data[otherAxis], v))\n            let value = null\n            let stackValue = null\n            if (datum !== undefined) {\n                value = datum.data[axis]\n                if (value !== null) {\n                    const head = last(stack)\n                    if (head === undefined) {\n                        stackValue = value\n                    } else if (head !== null) {\n                        stackValue = head + value\n                    }\n                }\n                datum.data[`${axis}Stacked`] = stackValue\n            }\n            stack.push(stackValue)\n            all.push(stackValue)\n        })\n    })\n    all = all.filter(v => v !== null)\n\n    xy[axis].minStacked = Math.min(...all)\n    xy[axis].maxStacked = Math.max(...all)\n}\n\nexport const stackX = (xy, otherType, series) => stackAxis('x', xy, otherType, series)\nexport const stackY = (xy, otherType, series) => stackAxis('y', xy, otherType, series)\n\nexport const computeAxisSlices = (axis, data) => {\n    const otherAxis = getOtherAxis(axis)\n\n    return data[otherAxis].all.map(v => {\n        const slice = {\n            id: v,\n            [otherAxis]: data[`${otherAxis}Scale`](v),\n            data: [],\n        }\n        const compare = isDate(v) ? compareDateValues : compareValues\n        data.series.forEach(serie => {\n            const datum = serie.data.find(d => compare(d.data[otherAxis], v))\n            if (datum !== undefined) {\n                slice.data.push({\n                    ...datum,\n                    serie,\n                })\n            }\n        })\n        slice.data.reverse()\n\n        return slice\n    })\n}\n\nexport const computeXSlices = data => computeAxisSlices('x', data)\nexport const computeYSlices = data => computeAxisSlices('y', data)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { linearScalePropTypes } from './linearScale'\nimport { logScalePropTypes } from './logScale'\nimport { symLogScalePropTypes } from './symlogScale'\nimport { pointScalePropTypes } from './pointScale'\nimport { timeScalePropTypes } from './timeScale'\n\nexport * from './compute'\nexport * from './linearScale'\nexport * from './logScale'\nexport * from './pointScale'\nexport * from './timeScale'\nexport * from './timeHelpers'\n\nexport const scalePropType = PropTypes.oneOfType([\n    PropTypes.shape(linearScalePropTypes),\n    PropTypes.shape(pointScalePropTypes),\n    PropTypes.shape(timeScalePropTypes),\n    PropTypes.shape(logScalePropTypes),\n    PropTypes.shape(symLogScalePropTypes),\n])\n"],"names":["linearScale","xy","width","height","axis","min","max","stacked","reverse","values","size","minValue","minStacked","maxValue","maxStacked","scale","scaleLinear","rangeRound","domain","type","linearScalePropTypes","PropTypes","oneOf","isRequired","oneOfType","number","bool","logScale","base","hasZero","all","some","v","sign","hasMixedSign","forEach","undefined","Math","Error","join","scaleLog","nice","logScalePropTypes","symlogScale","constant","scaleSymlog","symLogScalePropTypes","pointScale","scalePoint","range","pointScalePropTypes","TIME_PRECISION_MILLISECOND","TIME_PRECISION_SECOND","TIME_PRECISION_MINUTE","TIME_PRECISION_HOUR","TIME_PRECISION_DAY","TIME_PRECISION_MONTH","TIME_PRECISION_YEAR","timePrecisions","precisionCutOffs","date","setMilliseconds","setSeconds","setMinutes","setHours","setDate","setMonth","precisionCutOffsByType","slice","createPrecisionMethod","precision","cutOff","createDateNormalizer","format","useUTC","precisionFn","parseTime","utcParse","timeParse","timeScale","normalize","scaleUtc","scaleTime","timeScalePropTypes","string","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","defineProperty","getOtherAxis","compareValues","a","b","compareDateValues","getTime","computeXYScalesForSeries","_series","xScaleSpec","yScaleSpec","series","map","serie","data","d","generateSeriesXY","stackX","stackY","xScale","computeScale","yScale","position","x","xStacked","y","yStacked","spec","generateSeriesAxis","scaleSpec","getValue","setValue","parseFloat","push","uniq","sortBy","uniqBy","sort","last","stackAxis","otherType","otherAxis","compare","isDate","stack","datum","find","value","stackValue","head","filter","computeAxisSlices","id","computeXSlices","computeYSlices","scalePropType","shape"],"mappings":"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"}