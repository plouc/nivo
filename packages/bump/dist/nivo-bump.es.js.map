{"version":3,"file":"nivo-bump.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/bump/compute.js","../src/bump/hooks.js","../src/bump/LineTooltip.js","../src/bump/Point.js","../src/bump/props.js","../src/bump/Line.js","../src/bump/LinesLabels.js","../src/bump/Points.js","../src/bump/Bump.js","../src/bump/ResponsiveBump.js","../src/area-bump/AreaTooltip.js","../src/area-bump/props.js","../src/area-bump/compute.js","../src/area-bump/hooks.js","../src/area-bump/Area.js","../src/area-bump/AreasLabels.js","../src/area-bump/AreaBump.js","../src/area-bump/ResponsiveAreaBump.js"],"sourcesContent":["export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scalePoint } from 'd3-scale'\n\nexport const computeSeries = ({ width, height, data, xPadding, xOuterPadding, yOuterPadding }) => {\n    let xValues = new Set()\n    data.forEach(serie => {\n        serie.data.forEach(datum => {\n            if (!xValues.has(datum.x)) {\n                xValues.add(datum.x)\n            }\n        })\n    })\n    xValues = Array.from(xValues)\n\n    const xScale = scalePoint().domain(xValues).range([0, width]).padding(xOuterPadding)\n\n    const yScale = scalePoint()\n        .domain(data.map((serie, i) => i + 1))\n        .range([0, height])\n        .padding(yOuterPadding)\n\n    const linePointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5)\n\n    const series = data.map(rawSerie => {\n        const serie = {\n            ...rawSerie,\n            points: [],\n            linePoints: [],\n        }\n\n        rawSerie.data.forEach((datum, i) => {\n            let x = null\n            let y = null\n            if (datum.y !== null && datum.y !== undefined) {\n                x = xScale(datum.x)\n                y = yScale(datum.y)\n            }\n            const point = {\n                id: `${rawSerie.id}.${i}`,\n                serie: rawSerie,\n                data: datum,\n                x,\n                y,\n            }\n            serie.points.push(point)\n\n            // only add pre transition point if the datum is not empty\n            if (x !== null) {\n                if (i === 0) {\n                    serie.linePoints.push([0, point.y])\n                } else {\n                    serie.linePoints.push([point.x - linePointPadding, point.y])\n                }\n            }\n\n            serie.linePoints.push([point.x, point.y])\n\n            // only add post transition point if the datum is not empty\n            if (x !== null) {\n                if (i === rawSerie.data.length - 1 && x) {\n                    serie.linePoints.push([width, point.y])\n                } else {\n                    serie.linePoints.push([point.x + linePointPadding, point.y])\n                }\n            }\n\n            // remove points having null coordinates\n            serie.points = serie.points.filter(point => point.x !== null)\n        })\n\n        return serie\n    })\n\n    return {\n        series,\n        xScale,\n        yScale,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo, useCallback } from 'react'\nimport { line as d3Line, curveBasis, curveLinear } from 'd3-shape'\nimport { useTheme } from '@bitbloom/nivo-core'\nimport { useOrdinalColorScale, useInheritedColor } from '@bitbloom/nivo-colors'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\nimport { computeSeries } from './compute'\n\nexport const useLineGenerator = interpolation =>\n    useMemo(\n        () =>\n            d3Line()\n                .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n                .defined(d => d[0] !== null && d[1] !== null),\n\n        [interpolation]\n    )\n\nexport const useSerieDerivedProp = instruction =>\n    useMemo(() => {\n        if (typeof instruction === 'function') return instruction\n        return () => instruction\n    }, [instruction])\n\nexport const useSerieStyle = ({\n    lineWidth,\n    activeLineWidth,\n    inactiveLineWidth,\n    opacity,\n    activeOpacity,\n    inactiveOpacity,\n    isInteractive,\n    currentSerie,\n}) => {\n    const getLineWidth = useSerieDerivedProp(lineWidth)\n    const getActiveLineWidth = useSerieDerivedProp(activeLineWidth)\n    const getInactiveLineWidth = useSerieDerivedProp(inactiveLineWidth)\n\n    const getOpacity = useSerieDerivedProp(opacity)\n    const getActiveOpacity = useSerieDerivedProp(activeOpacity)\n    const getInactiveOpacity = useSerieDerivedProp(inactiveOpacity)\n\n    const getNormalStyle = useMemo(\n        () => serie => ({\n            lineWidth: getLineWidth(serie),\n            opacity: getOpacity(serie),\n        }),\n        [getLineWidth, getOpacity]\n    )\n    const getActiveStyle = useMemo(\n        () => serie => ({\n            lineWidth: getActiveLineWidth(serie),\n            opacity: getActiveOpacity(serie),\n        }),\n        [getActiveLineWidth, getActiveOpacity]\n    )\n    const getInactiveStyle = useMemo(\n        () => serie => ({\n            lineWidth: getInactiveLineWidth(serie),\n            opacity: getInactiveOpacity(serie),\n        }),\n        [getInactiveLineWidth, getInactiveOpacity]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return serie => {\n            if (currentSerie === null) return getNormalStyle(serie)\n            if (serie.id === currentSerie) return getActiveStyle(serie)\n            return getInactiveStyle(serie)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, currentSerie])\n}\n\nexport const usePointStyle = ({\n    pointSize,\n    activePointSize,\n    inactivePointSize,\n    pointBorderWidth,\n    activePointBorderWidth,\n    inactivePointBorderWidth,\n    isInteractive,\n    currentSerie,\n}) => {\n    const getSize = useSerieDerivedProp(pointSize)\n    const getActiveSize = useSerieDerivedProp(activePointSize)\n    const getInactiveSize = useSerieDerivedProp(inactivePointSize)\n\n    const getBorderWidth = useSerieDerivedProp(pointBorderWidth)\n    const getActiveBorderWidth = useSerieDerivedProp(activePointBorderWidth)\n    const getInactiveBorderWidth = useSerieDerivedProp(inactivePointBorderWidth)\n\n    const getNormalStyle = useMemo(\n        () => point => ({\n            size: getSize(point),\n            borderWidth: getBorderWidth(point),\n        }),\n        [getSize, getBorderWidth]\n    )\n    const getActiveStyle = useMemo(\n        () => point => ({\n            size: getActiveSize(point),\n            borderWidth: getActiveBorderWidth(point),\n        }),\n        [getActiveSize, getActiveBorderWidth]\n    )\n    const getInactiveStyle = useMemo(\n        () => point => ({\n            size: getInactiveSize(point),\n            borderWidth: getInactiveBorderWidth(point),\n        }),\n        [getInactiveSize, getInactiveBorderWidth]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return point => {\n            if (currentSerie === null) return getNormalStyle(point)\n            if (point.serieId === currentSerie) return getActiveStyle(point)\n            return getInactiveStyle(point)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, currentSerie])\n}\n\nexport const useBump = ({\n    width,\n    height,\n    data,\n    interpolation,\n    xPadding,\n    xOuterPadding,\n    yOuterPadding,\n    lineWidth,\n    activeLineWidth,\n    inactiveLineWidth,\n    colors,\n    opacity,\n    activeOpacity,\n    inactiveOpacity,\n    pointSize,\n    activePointSize,\n    inactivePointSize,\n    pointColor,\n    pointBorderWidth,\n    activePointBorderWidth,\n    inactivePointBorderWidth,\n    pointBorderColor,\n    isInteractive,\n    currentSerie,\n}) => {\n    const { series: rawSeries, xScale, yScale } = useMemo(\n        () =>\n            computeSeries({\n                width,\n                height,\n                data,\n                xPadding,\n                xOuterPadding,\n                yOuterPadding,\n            }),\n        [width, height, data, xPadding, xOuterPadding, yOuterPadding]\n    )\n\n    const lineGenerator = useLineGenerator(interpolation)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getSerieStyle = useSerieStyle({\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        isInteractive,\n        currentSerie,\n    })\n\n    const series = useMemo(\n        () =>\n            rawSeries.map(serie => {\n                serie.color = getColor(serie)\n                serie.style = getSerieStyle(serie)\n\n                return serie\n            }),\n        [rawSeries, getColor, getSerieStyle]\n    )\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const getPointStyle = usePointStyle({\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        isInteractive,\n        currentSerie,\n    })\n    const points = useMemo(() => {\n        const pts = []\n        series.forEach(serie => {\n            serie.points.forEach(rawPoint => {\n                const point = {\n                    ...rawPoint,\n                    serie,\n                    serieId: serie.id,\n                    isActive: currentSerie === serie.id,\n                    isInactive: currentSerie !== null && currentSerie !== serie.id,\n                }\n                point.color = getPointColor(point)\n                point.borderColor = getPointBorderColor(point)\n                point.style = getPointStyle({ ...point, serie })\n                pts.push(point)\n            })\n        })\n\n        return pts\n    }, [series, getPointColor, getPointBorderColor, getPointStyle, currentSerie])\n\n    return {\n        xScale,\n        yScale,\n        series,\n        points,\n        lineGenerator,\n    }\n}\n\nexport const useSerieHandlers = ({\n    serie,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrent,\n    tooltip,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            setCurrent(serie.id)\n            onMouseEnter && onMouseEnter(serie, event)\n        },\n        [serie, onMouseEnter, showTooltipFromEvent, setCurrent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            onMouseMove && onMouseMove(serie, event)\n        },\n        [serie, onMouseMove, showTooltipFromEvent]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(serie, event)\n        },\n        [serie, onMouseLeave, hideTooltip, setCurrent]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(serie, event)\n        },\n        [serie, onClick]\n    )\n\n    const handlers = useMemo(\n        () => ({\n            onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n            onMouseMove: isInteractive ? handleMouseMove : undefined,\n            onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n            onClick: isInteractive ? handleClick : undefined,\n        }),\n        [isInteractive, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]\n    )\n\n    return handlers\n}\n\nexport const useSeriesLabels = ({ series, position, padding, color, getLabel }) => {\n    const theme = useTheme()\n    const getColor = useInheritedColor(color, theme)\n\n    return useMemo(() => {\n        let textAnchor\n        let signedPadding\n        if (position === 'start') {\n            textAnchor = 'end'\n            signedPadding = padding * -1\n        } else {\n            textAnchor = 'start'\n            signedPadding = padding\n        }\n\n        const labels = []\n        series.forEach(serie => {\n            let label = serie.id\n            if (typeof getLabel === 'function') {\n                label = getLabel(serie)\n            }\n\n            const point =\n                position === 'start'\n                    ? serie.linePoints[0]\n                    : serie.linePoints[serie.linePoints.length - 1]\n\n            // exclude labels for series having missing data at the beginning/end\n            if (point[0] === null || point[1] === null) {\n                return\n            }\n\n            labels.push({\n                id: serie.id,\n                label,\n                x: point[0] + signedPadding,\n                y: point[1],\n                color: getColor(serie),\n                opacity: serie.style.opacity,\n                serie,\n                textAnchor,\n            })\n        })\n\n        return labels\n    }, [series, position, padding, getColor])\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@bitbloom/nivo-tooltip'\n\nconst LineTooltip = ({ serie }) => {\n    return <BasicTooltip id={serie.id} enableChip={true} color={serie.color} />\n}\n\nLineTooltip.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n}\n\nexport default memo(LineTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig } from '@bitbloom/nivo-core'\n\nconst pointStyle = { pointerEvents: 'none' }\n\nconst Point = ({ x, y, size, color, borderColor, borderWidth }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        color,\n        borderWidth,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={animatedProps.radius.interpolate(v => Math.max(v, 0))}\n            fill={animatedProps.color}\n            strokeWidth={animatedProps.borderWidth}\n            stroke={borderColor}\n            style={pointStyle}\n        />\n    )\n}\n\nPoint.propTypes = {\n    data: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    isActive: PropTypes.bool.isRequired,\n    isInactive: PropTypes.bool.isRequired,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n}\n\nexport default memo(Point)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes } from '@bitbloom/nivo-core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@bitbloom/nivo-colors'\nimport { axisPropType } from '@bitbloom/nivo-axes'\nimport LineTooltip from './LineTooltip'\nimport Point from './Point'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['grid', 'axes', 'labels', 'lines', 'points']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    interpolation: PropTypes.oneOf(['linear', 'smooth']).isRequired,\n    xPadding: PropTypes.number.isRequired,\n    xOuterPadding: PropTypes.number.isRequired,\n    yOuterPadding: PropTypes.number.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    lineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activeLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactiveLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    opacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activeOpacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactiveOpacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n    startLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    startLabelPadding: PropTypes.number.isRequired,\n    startLabelTextColor: inheritedColorPropType.isRequired,\n    endLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    endLabelPadding: PropTypes.number.isRequired,\n    endLabelTextColor: inheritedColorPropType.isRequired,\n\n    pointComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    pointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activePointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactivePointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    pointColor: inheritedColorPropType.isRequired,\n    pointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activePointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactivePointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    pointBorderColor: inheritedColorPropType.isRequired,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport const BumpPropTypes = {\n    ...commonPropTypes,\n    ...motionPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nconst commonDefaultProps = {\n    layers: ['grid', 'axes', 'labels', 'lines', 'points'],\n\n    interpolation: 'smooth',\n    xPadding: 0.6,\n    xOuterPadding: 0.5,\n    yOuterPadding: 0.5,\n\n    colors: { scheme: 'nivo' },\n    lineWidth: 2,\n    activeLineWidth: 4,\n    inactiveLineWidth: 1,\n    opacity: 1,\n    activeOpacity: 1,\n    inactiveOpacity: 0.3,\n\n    startLabel: false,\n    startLabelPadding: 16,\n    startLabelTextColor: { from: 'color' },\n    endLabel: 'id',\n    endLabelPadding: 16,\n    endLabelTextColor: { from: 'color' },\n\n    pointSize: 6,\n    activePointSize: 8,\n    inactivePointSize: 4,\n    pointColor: { from: 'serie.color' },\n    pointBorderWidth: 0,\n    activePointBorderWidth: 0,\n    inactivePointBorderWidth: 0,\n    pointBorderColor: { from: 'serie.color', modifiers: [['darker', 1.4]] },\n\n    enableGridX: true,\n    enableGridY: true,\n    axisTop: {},\n    axisBottom: {},\n    axisLeft: {},\n\n    isInteractive: true,\n    tooltip: LineTooltip,\n}\n\nexport const BumpDefaultProps = {\n    ...commonDefaultProps,\n    pointComponent: Point,\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig } from '@bitbloom/nivo-core'\nimport { useSerieHandlers } from './hooks'\n\nconst Line = ({\n    serie,\n    lineGenerator,\n    yStep,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentSerie,\n    tooltip,\n}) => {\n    const handlers = useSerieHandlers({\n        serie,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrent: setCurrentSerie,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const linePath = lineGenerator(serie.linePoints)\n\n    const animatedProps = useSpring({\n        path: linePath,\n        color: serie.color,\n        opacity: serie.style.opacity,\n        lineWidth: serie.style.lineWidth,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            <animated.path\n                fill=\"none\"\n                d={animatedProps.path}\n                stroke={animatedProps.color}\n                strokeWidth={animatedProps.lineWidth}\n                strokeLinecap=\"round\"\n                strokeOpacity={animatedProps.opacity}\n                style={{ pointerEvents: 'none' }}\n            />\n            {isInteractive && (\n                <path\n                    fill=\"none\"\n                    stroke=\"red\"\n                    strokeOpacity={0}\n                    strokeWidth={yStep}\n                    d={linePath}\n                    strokeLinecap=\"butt\"\n                    onMouseEnter={handlers.onMouseEnter}\n                    onMouseMove={handlers.onMouseMove}\n                    onMouseLeave={handlers.onMouseLeave}\n                    onClick={handlers.onClick}\n                />\n            )}\n        </>\n    )\n}\n\nLine.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        linePoints: PropTypes.array.isRequired,\n        style: PropTypes.shape({\n            lineWidth: PropTypes.number.isRequired,\n            opacity: PropTypes.number.isRequired,\n        }).isRequired,\n    }).isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n    yStep: PropTypes.number.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    setCurrentSerie: PropTypes.func.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default memo(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@bitbloom/nivo-core'\nimport { inheritedColorPropType } from '@bitbloom/nivo-colors'\nimport { useSeriesLabels } from './hooks'\n\nconst LinesLabels = ({ series, getLabel, position, padding, color }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useSeriesLabels({\n        series,\n        getLabel,\n        position,\n        padding,\n        color,\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            x: label.x,\n            y: label.y,\n            opacity: label.opacity,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                x={animatedProps.x}\n                y={animatedProps.y}\n                textAnchor={label.textAnchor}\n                dominantBaseline=\"central\"\n                opacity={animatedProps.opacity}\n                style={{\n                    ...theme.labels.text,\n                    fill: label.color,\n                }}\n            >\n                {label.label}\n            </animated.text>\n        )\n    })\n}\n\nLinesLabels.propTypes = {\n    series: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    getLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    position: PropTypes.oneOf(['start', 'end']).isRequired,\n    padding: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n}\n\nexport default memo(LinesLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Points = ({ pointComponent, points }) => {\n    return points.map(point => {\n        return React.createElement(pointComponent, {\n            key: point.id,\n            data: point.data,\n            x: point.x,\n            y: point.y,\n            isActive: point.isActive,\n            isInactive: point.isInactive,\n            size: point.style.size,\n            color: point.color,\n            borderColor: point.borderColor,\n            borderWidth: point.style.borderWidth,\n        })\n    })\n}\n\nPoints.propTypes = {\n    pointComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.object.isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            isActive: PropTypes.bool.isRequired,\n            isInactive: PropTypes.bool.isRequired,\n            color: PropTypes.string.isRequired,\n            borderColor: PropTypes.string.isRequired,\n            style: PropTypes.shape({\n                size: PropTypes.number.isRequired,\n                borderWidth: PropTypes.number.isRequired,\n            }).isRequired,\n        })\n    ).isRequired,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useState, Fragment } from 'react'\nimport { withContainer, useDimensions, SvgWrapper } from '@bitbloom/nivo-core'\nimport { Grid, Axes } from '@bitbloom/nivo-axes'\nimport { useBump } from './hooks'\nimport { BumpPropTypes, BumpDefaultProps } from './props'\nimport Line from './Line'\nimport LinesLabels from './LinesLabels'\nimport Points from './Points'\n\nconst Bump = props => {\n    const {\n        data,\n\n        width,\n        height,\n        margin: partialMargin,\n\n        layers,\n\n        interpolation,\n        xPadding,\n        xOuterPadding,\n        yOuterPadding,\n\n        colors,\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n\n        startLabel,\n        startLabelPadding,\n        startLabelTextColor,\n        endLabel,\n        endLabelPadding,\n        endLabelTextColor,\n\n        pointComponent,\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointColor,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        pointBorderColor,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const [currentSerie, setCurrentSerie] = useState(null)\n\n    const { series, points, xScale, yScale, lineGenerator } = useBump({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        interpolation,\n        xPadding,\n        xOuterPadding,\n        yOuterPadding,\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        colors,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointColor,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        pointBorderColor,\n        startLabel,\n        endLabel,\n        isInteractive,\n        currentSerie,\n    })\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        labels: [],\n        lines: (\n            <Fragment key=\"lines\">\n                {series.map(serie => (\n                    <Line\n                        key={serie.id}\n                        serie={serie}\n                        currentSerie={currentSerie}\n                        setCurrentSerie={setCurrentSerie}\n                        lineGenerator={lineGenerator}\n                        yStep={yScale.step()}\n                        margin={margin}\n                        isInteractive={isInteractive}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </Fragment>\n        ),\n        points: <Points key=\"points\" pointComponent={pointComponent} points={points} />,\n    }\n\n    if (startLabel !== false) {\n        layerById.labels.push(\n            <LinesLabels\n                key=\"start\"\n                series={series}\n                getLabel={startLabel}\n                position=\"start\"\n                padding={startLabelPadding}\n                color={startLabelTextColor}\n            />\n        )\n    }\n    if (endLabel !== false) {\n        layerById.labels.push(\n            <LinesLabels\n                key=\"end\"\n                series={series}\n                getLabel={endLabel}\n                position=\"end\"\n                padding={endLabelPadding}\n                color={endLabelTextColor}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                innerWidth,\n                                innerHeight,\n                                xScale,\n                                yScale,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nBump.propTypes = BumpPropTypes\nBump.defaultProps = BumpDefaultProps\n\nexport default memo(withContainer(Bump))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport Bump from './Bump'\n\nconst ResponsiveBump = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bump width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveBump\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@bitbloom/nivo-tooltip'\n\nconst AreaTooltip = ({ serie }) => {\n    return <BasicTooltip id={serie.id} enableChip={true} color={serie.color} />\n}\n\nAreaTooltip.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n}\n\nexport default memo(AreaTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes, blendModePropType } from '@bitbloom/nivo-core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@bitbloom/nivo-colors'\nimport { axisPropType } from '@bitbloom/nivo-axes'\nimport AreaTooltip from './AreaTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.number.isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    align: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['grid', 'axes', 'labels', 'areas']), PropTypes.func])\n    ).isRequired,\n\n    interpolation: PropTypes.oneOf(['linear', 'smooth']).isRequired,\n    spacing: PropTypes.number.isRequired,\n    xPadding: PropTypes.number.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    blendMode: blendModePropType.isRequired,\n    fillOpacity: PropTypes.number.isRequired,\n    activeFillOpacity: PropTypes.number.isRequired,\n    inactiveFillOpacity: PropTypes.number.isRequired,\n    defs: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    fill: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            match: PropTypes.oneOfType([PropTypes.oneOf(['*']), PropTypes.object, PropTypes.func])\n                .isRequired,\n        })\n    ).isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    activeBorderWidth: PropTypes.number.isRequired,\n    inactiveBorderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n    borderOpacity: PropTypes.number.isRequired,\n    activeBorderOpacity: PropTypes.number.isRequired,\n    inactiveBorderOpacity: PropTypes.number.isRequired,\n\n    startLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    startLabelPadding: PropTypes.number.isRequired,\n    startLabelTextColor: inheritedColorPropType.isRequired,\n    endLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    endLabelPadding: PropTypes.number.isRequired,\n    endLabelTextColor: inheritedColorPropType.isRequired,\n\n    enableGridX: PropTypes.bool.isRequired,\n    axisTop: axisPropType,\n    axisBottom: axisPropType,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport const AreaBumpPropTypes = {\n    ...commonPropTypes,\n    ...motionPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nconst commonDefaultProps = {\n    align: 'middle',\n\n    layers: ['grid', 'axes', 'labels', 'areas'],\n\n    interpolation: 'smooth',\n    spacing: 0,\n    xPadding: 0.6,\n\n    colors: { scheme: 'nivo' },\n    blendMode: 'normal',\n    fillOpacity: 0.8,\n    activeFillOpacity: 1,\n    inactiveFillOpacity: 0.15,\n    defs: [],\n    fill: [],\n    borderWidth: 1,\n    activeBorderWidth: 1,\n    inactiveBorderWidth: 0,\n    borderColor: { from: 'color', modifiers: [['darker', 0.4]] },\n    borderOpacity: 1,\n    activeBorderOpacity: 1,\n    inactiveBorderOpacity: 0,\n\n    startLabel: false,\n    startLabelPadding: 12,\n    startLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n    endLabel: 'id',\n    endLabelPadding: 12,\n    endLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    enableGridX: true,\n    axisTop: {},\n    axisBottom: {},\n\n    isInteractive: true,\n    tooltip: AreaTooltip,\n}\n\nexport const AreaBumpDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scalePoint, scaleLinear } from 'd3-scale'\n\nexport const computeSeries = ({ data, width, height, align, spacing, xPadding }) => {\n    const slices = new Map()\n\n    let maxSum = null\n    let maxValues = null\n\n    data.forEach(serie => {\n        serie.data.forEach(datum => {\n            if (!slices.has(datum.x)) {\n                slices.set(datum.x, {\n                    id: datum.x,\n                    total: 0,\n                    values: new Map(),\n                })\n            }\n\n            const slice = slices.get(datum.x)\n\n            const total = slice.total + datum.y\n            slice.total = total\n\n            slice.values.set(serie.id, {\n                serieId: serie.id,\n                value: datum.y,\n            })\n\n            if (total === null || total > maxSum) {\n                maxSum = total\n                maxValues = slice.values.size\n            }\n        })\n    })\n\n    const xScale = scalePoint().domain(Array.from(slices.keys())).range([0, width])\n\n    const heightScale = scaleLinear()\n        .domain([0, maxSum])\n        .range([0, height - maxValues * spacing])\n\n    slices.forEach((slice, x) => {\n        slice.x = xScale(x)\n        const sliceHeight = heightScale(slice.total) + slice.values.size * spacing\n\n        let offset = 0\n        if (align === 'middle') {\n            offset = (height - sliceHeight) / 2\n        } else if (align === 'end') {\n            offset = height - sliceHeight\n        }\n\n        Array.from(slice.values.values())\n            .sort((a, b) => b.value - a.value)\n            .forEach((value, position, all) => {\n                const previousValues = all.filter((i, pos) => pos < position)\n                const beforeValue = previousValues.reduce((t, v) => t + v.value, 0)\n\n                const sliceValue = slice.values.get(value.serieId)\n                sliceValue.position = position\n                sliceValue.height = heightScale(value.value)\n                sliceValue.beforeHeight =\n                    heightScale(beforeValue) + offset + spacing * (previousValues.length + 0.5)\n            })\n    })\n\n    const areaPointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5)\n\n    const series = data.map(serie => {\n        const serieCopy = { ...serie }\n        serieCopy.points = []\n        serieCopy.areaPoints = []\n        serie.data.forEach((datum, i) => {\n            const slice = slices.get(datum.x)\n            const position = slice.values.get(serie.id)\n\n            const x = slice.x\n            const { beforeHeight, height } = position\n            const y = beforeHeight + height / 2\n            const y0 = beforeHeight\n            const y1 = beforeHeight + height\n\n            serieCopy.points.push({\n                x,\n                y,\n                height,\n                data: { ...datum },\n            })\n            if (i > 0) {\n                serieCopy.areaPoints.push({ x: x - areaPointPadding, y0, y1 })\n            }\n            serieCopy.areaPoints.push({ x, y0, y1 })\n            if (i < serie.data.length - 1) {\n                serieCopy.areaPoints.push({ x: x + areaPointPadding, y0, y1 })\n            }\n        })\n\n        return serieCopy\n    })\n\n    return {\n        xScale,\n        heightScale,\n        series,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo, useCallback } from 'react'\nimport { area as d3Area, curveBasis, curveLinear } from 'd3-shape'\nimport { useTheme } from '@bitbloom/nivo-core'\nimport { useOrdinalColorScale, useInheritedColor } from '@bitbloom/nivo-colors'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\nimport { computeSeries } from './compute'\n\nexport const useAreaBumpSeries = ({ data, width, height, align, spacing, xPadding }) =>\n    useMemo(() => computeSeries({ data, width, height, align, spacing, xPadding }), [\n        data,\n        width,\n        height,\n        align,\n        spacing,\n        xPadding,\n    ])\n\nexport const useAreaGenerator = interpolation =>\n    useMemo(\n        () =>\n            d3Area()\n                .x(d => d.x)\n                .y0(d => d.y0)\n                .y1(d => d.y1)\n                .curve(interpolation === 'smooth' ? curveBasis : curveLinear),\n        [interpolation]\n    )\n\nexport const useSerieDerivedProp = instruction =>\n    useMemo(() => {\n        if (typeof instruction === 'function') return instruction\n        return () => instruction\n    }, [instruction])\n\nexport const useSerieStyle = ({\n    fillOpacity,\n    activeFillOpacity,\n    inactiveFillOpacity,\n    borderWidth,\n    activeBorderWidth,\n    inactiveBorderWidth,\n    borderColor,\n    borderOpacity,\n    activeBorderOpacity,\n    inactiveBorderOpacity,\n    isInteractive,\n    current,\n}) => {\n    const getFillOpacity = useSerieDerivedProp(fillOpacity)\n    const getActiveFillOpacity = useSerieDerivedProp(activeFillOpacity)\n    const getInactiveFillOpacity = useSerieDerivedProp(inactiveFillOpacity)\n\n    const getBorderWidth = useSerieDerivedProp(borderWidth)\n    const getActiveBorderWidth = useSerieDerivedProp(activeBorderWidth)\n    const getInactiveBorderWidth = useSerieDerivedProp(inactiveBorderWidth)\n\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const getBorderOpacity = useSerieDerivedProp(borderOpacity)\n    const getActiveBorderOpacity = useSerieDerivedProp(activeBorderOpacity)\n    const getInactiveBorderOpacity = useSerieDerivedProp(inactiveBorderOpacity)\n\n    const getNormalStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getFillOpacity(serie),\n            borderWidth: getBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getBorderOpacity(serie),\n        }),\n        [getFillOpacity, getBorderWidth, getBorderColor, getBorderOpacity]\n    )\n    const getActiveStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getActiveFillOpacity(serie),\n            borderWidth: getActiveBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getActiveBorderOpacity(serie),\n        }),\n        [getActiveFillOpacity, getActiveBorderWidth, getBorderColor, getActiveBorderOpacity]\n    )\n    const getInactiveStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getInactiveFillOpacity(serie),\n            borderWidth: getInactiveBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getInactiveBorderOpacity(serie),\n        }),\n        [getInactiveFillOpacity, getInactiveBorderWidth, getBorderColor, getInactiveBorderOpacity]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return serie => {\n            if (current === null) return getNormalStyle(serie)\n            if (serie.id === current) return getActiveStyle(serie)\n            return getInactiveStyle(serie)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, current])\n}\n\nexport const useAreaBump = ({\n    data,\n    width,\n    height,\n    align,\n    spacing,\n    xPadding,\n    interpolation,\n    colors,\n    fillOpacity,\n    activeFillOpacity,\n    inactiveFillOpacity,\n    borderWidth,\n    activeBorderWidth,\n    inactiveBorderWidth,\n    borderColor,\n    borderOpacity,\n    activeBorderOpacity,\n    inactiveBorderOpacity,\n    isInteractive,\n    current,\n}) => {\n    const { series: rawSeries, xScale, heightScale } = useAreaBumpSeries({\n        data,\n        width,\n        height,\n        align,\n        spacing,\n        xPadding,\n    })\n\n    const areaGenerator = useAreaGenerator(interpolation)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getSerieStyle = useSerieStyle({\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n        isInteractive,\n        current,\n    })\n\n    const series = useMemo(\n        () =>\n            rawSeries.map(serie => {\n                serie.color = getColor(serie)\n                serie.style = getSerieStyle(serie)\n\n                return serie\n            }),\n        [rawSeries, getColor, getSerieStyle]\n    )\n\n    return {\n        series,\n        xScale,\n        heightScale,\n        areaGenerator,\n    }\n}\n\nexport const useSerieHandlers = ({\n    serie,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrent,\n    tooltip,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            setCurrent(serie.id)\n            onMouseEnter && onMouseEnter(serie, event)\n        },\n        [serie, onMouseEnter, showTooltipFromEvent, setCurrent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            onMouseMove && onMouseMove(serie, event)\n        },\n        [serie, onMouseMove, showTooltipFromEvent]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(serie, event)\n        },\n        [serie, onMouseLeave, hideTooltip, setCurrent]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(serie, event)\n        },\n        [serie, onClick]\n    )\n\n    const handlers = useMemo(\n        () => ({\n            onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n            onMouseMove: isInteractive ? handleMouseMove : undefined,\n            onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n            onClick: isInteractive ? handleClick : undefined,\n        }),\n        [isInteractive, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]\n    )\n\n    return handlers\n}\n\nexport const useSeriesLabels = ({ series, position, padding, color }) => {\n    const theme = useTheme()\n    const getColor = useInheritedColor(color, theme)\n\n    return useMemo(() => {\n        let textAnchor\n        let signedPadding\n        if (position === 'start') {\n            textAnchor = 'end'\n            signedPadding = padding * -1\n        } else {\n            textAnchor = 'start'\n            signedPadding = padding\n        }\n\n        return series.map(serie => {\n            const point =\n                position === 'start' ? serie.points[0] : serie.points[serie.points.length - 1]\n\n            return {\n                id: serie.id,\n                x: point.x + signedPadding,\n                y: point.y,\n                color: getColor(serie),\n                opacity: serie.style.fillOpacity,\n                serie,\n                textAnchor,\n            }\n        })\n    }, [series, position, padding, getColor])\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig, blendModePropType } from '@bitbloom/nivo-core'\nimport { useSerieHandlers } from './hooks'\n\nconst Area = ({\n    serie,\n    areaGenerator,\n    blendMode,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentSerie,\n    tooltip,\n}) => {\n    const handlers = useSerieHandlers({\n        serie,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrent: setCurrentSerie,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        path: areaGenerator(serie.areaPoints),\n        color: serie.color,\n        fillOpacity: serie.style.fillOpacity,\n        stroke: serie.style.borderColor,\n        strokeOpacity: serie.style.borderOpacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedProps.path}\n            fill={serie.fill ? serie.fill : animatedProps.color}\n            fillOpacity={animatedProps.fillOpacity}\n            stroke={animatedProps.stroke}\n            strokeWidth={serie.style.borderWidth}\n            strokeOpacity={animatedProps.strokeOpacity}\n            style={{ mixBlendMode: blendMode }}\n            onMouseEnter={handlers.onMouseEnter}\n            onMouseMove={handlers.onMouseMove}\n            onMouseLeave={handlers.onMouseLeave}\n            onClick={handlers.onClick}\n        />\n    )\n}\n\nArea.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        fill: PropTypes.string,\n        areaPoints: PropTypes.array.isRequired,\n        style: PropTypes.shape({\n            fillOpacity: PropTypes.number.isRequired,\n            borderWidth: PropTypes.number.isRequired,\n            borderColor: PropTypes.string.isRequired,\n            borderOpacity: PropTypes.number.isRequired,\n        }).isRequired,\n    }).isRequired,\n    areaGenerator: PropTypes.func.isRequired,\n    blendMode: blendModePropType.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    setCurrentSerie: PropTypes.func.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default memo(Area)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@bitbloom/nivo-core'\nimport { inheritedColorPropType } from '@bitbloom/nivo-colors'\nimport { useSeriesLabels } from './hooks'\n\nconst AreasLabels = ({ series, position, padding, color }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useSeriesLabels({\n        series,\n        position,\n        padding,\n        color,\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            x: label.x,\n            y: label.y,\n            opacity: label.opacity,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                x={animatedProps.x}\n                y={animatedProps.y}\n                textAnchor={label.textAnchor}\n                dominantBaseline=\"central\"\n                opacity={animatedProps.opacity}\n                style={{\n                    ...theme.labels.text,\n                    fill: label.color,\n                }}\n            >\n                {label.id}\n            </animated.text>\n        )\n    })\n}\n\nAreasLabels.propTypes = {\n    series: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    position: PropTypes.oneOf(['start', 'end']).isRequired,\n    padding: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n}\n\nexport default memo(AreasLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useState, Fragment, useMemo } from 'react'\nimport { bindDefs, withContainer, useDimensions, SvgWrapper } from '@bitbloom/nivo-core'\nimport { Grid, Axes } from '@bitbloom/nivo-axes'\nimport { AreaBumpPropTypes, AreaBumpDefaultProps } from './props'\nimport { useAreaBump } from './hooks'\nimport Area from './Area'\nimport AreasLabels from './AreasLabels'\n\nconst AreaBump = props => {\n    const {\n        data,\n        align,\n\n        width,\n        height,\n        margin: partialMargin,\n\n        layers,\n\n        interpolation,\n        spacing,\n        xPadding,\n\n        colors,\n        blendMode,\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        defs,\n        fill,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n\n        startLabel,\n        startLabelPadding,\n        startLabelTextColor,\n        endLabel,\n        endLabelPadding,\n        endLabelTextColor,\n\n        enableGridX,\n        axisTop,\n        axisBottom,\n\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        role,\n    } = props\n\n    const [currentSerie, setCurrentSerie] = useState(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { series, xScale, areaGenerator } = useAreaBump({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        align,\n        spacing,\n        xPadding,\n        interpolation,\n        colors,\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n        isInteractive,\n        current: currentSerie,\n    })\n\n    const boundDefs = useMemo(() => bindDefs(defs, series, fill, { targetKey: 'fill' }), [\n        defs,\n        series,\n        fill,\n    ])\n\n    const layerById = {\n        grid: enableGridX && (\n            <Grid key=\"grid\" width={innerWidth} height={innerHeight} xScale={xScale} />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                bottom={axisBottom}\n            />\n        ),\n        labels: [],\n        areas: (\n            <Fragment key=\"areas\">\n                {series.map(serie => (\n                    <Area\n                        key={serie.id}\n                        areaGenerator={areaGenerator}\n                        serie={serie}\n                        blendMode={blendMode}\n                        isInteractive={isInteractive}\n                        setCurrentSerie={setCurrentSerie}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </Fragment>\n        ),\n    }\n\n    if (startLabel !== false) {\n        layerById.labels.push(\n            <AreasLabels\n                key=\"start\"\n                series={series}\n                position=\"start\"\n                padding={startLabelPadding}\n                color={startLabelTextColor}\n            />\n        )\n    }\n    if (endLabel !== false) {\n        layerById.labels.push(\n            <AreasLabels\n                key=\"end\"\n                series={series}\n                position=\"end\"\n                padding={endLabelPadding}\n                color={endLabelTextColor}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                outerWidth,\n                                outerHeight,\n                                series,\n                                xScale,\n                                areaGenerator,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nAreaBump.propTypes = AreaBumpPropTypes\nAreaBump.defaultProps = AreaBumpDefaultProps\n\nexport default memo(withContainer(AreaBump))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport AreaBump from './AreaBump'\n\nconst ResponsiveAreaBump = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <AreaBump width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveAreaBump\n"],"names":["arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","defineProperty","computeSeries","width","height","data","xPadding","xOuterPadding","yOuterPadding","xValues","Set","forEach","serie","datum","has","x","add","Array","from","xScale","scalePoint","domain","range","padding","yScale","map","i","linePointPadding","step","Math","min","series","rawSerie","points","linePoints","y","undefined","point","id","push","length","filter","useLineGenerator","interpolation","useMemo","d3Line","curve","curveBasis","curveLinear","defined","d","useSerieDerivedProp","instruction","useSerieStyle","lineWidth","activeLineWidth","inactiveLineWidth","opacity","activeOpacity","inactiveOpacity","isInteractive","currentSerie","getLineWidth","getActiveLineWidth","getInactiveLineWidth","getOpacity","getActiveOpacity","getInactiveOpacity","getNormalStyle","getActiveStyle","getInactiveStyle","usePointStyle","pointSize","activePointSize","inactivePointSize","pointBorderWidth","activePointBorderWidth","inactivePointBorderWidth","getSize","getActiveSize","getInactiveSize","getBorderWidth","getActiveBorderWidth","getInactiveBorderWidth","size","borderWidth","serieId","useBump","colors","pointColor","pointBorderColor","rawSeries","lineGenerator","getColor","useOrdinalColorScale","getSerieStyle","color","style","theme","useTheme","getPointColor","useInheritedColor","getPointBorderColor","getPointStyle","pts","rawPoint","isActive","isInactive","borderColor","useSerieHandlers","onMouseEnter","onMouseMove","onMouseLeave","onClick","setCurrent","tooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","useCallback","event","React","createElement","handleMouseMove","handleMouseLeave","handleClick","handlers","useSeriesLabels","position","getLabel","textAnchor","signedPadding","labels","label","LineTooltip","memo","pointStyle","pointerEvents","Point","useMotionConfig","animate","springConfig","config","animatedProps","useSpring","radius","immediate","interpolate","v","max","commonPropTypes","PropTypes","arrayOf","shape","string","isRequired","oneOfType","number","layers","oneOf","func","ordinalColorsPropType","startLabel","startLabelPadding","startLabelTextColor","inheritedColorPropType","endLabel","endLabelPadding","endLabelTextColor","pointComponent","object","enableGridX","bool","enableGridY","axisTop","axisPropType","axisRight","axisBottom","axisLeft","BumpPropTypes","motionPropTypes","role","commonDefaultProps","scheme","modifiers","BumpDefaultProps","motionConfig","Line","yStep","setCurrentSerie","linePath","path","LinesLabels","springs","useSprings","index","text","fill","Points","key","Bump","props","partialMargin","margin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","useState","layerById","grid","axes","lines","layer","defaultProps","withContainer","ResponsiveBump","AreaTooltip","align","spacing","blendMode","blendModePropType","fillOpacity","activeFillOpacity","inactiveFillOpacity","defs","match","activeBorderWidth","inactiveBorderWidth","borderOpacity","activeBorderOpacity","inactiveBorderOpacity","AreaBumpPropTypes","AreaBumpDefaultProps","slices","Map","maxSum","maxValues","set","total","values","slice","get","value","keys","heightScale","scaleLinear","sliceHeight","offset","sort","a","b","all","previousValues","pos","beforeValue","reduce","t","sliceValue","beforeHeight","areaPointPadding","serieCopy","areaPoints","y0","y1","useAreaBumpSeries","useAreaGenerator","d3Area","current","getFillOpacity","getActiveFillOpacity","getInactiveFillOpacity","getBorderColor","getBorderOpacity","getActiveBorderOpacity","getInactiveBorderOpacity","useAreaBump","areaGenerator","Area","stroke","strokeOpacity","mixBlendMode","AreasLabels","AreaBump","boundDefs","bindDefs","targetKey","areas","ResponsiveAreaBump"],"mappings":"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"}