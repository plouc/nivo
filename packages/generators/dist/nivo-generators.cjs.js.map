{"version":3,"file":"nivo-generators.cjs.js","sources":["../src/color.js","../src/sets/countryCodes.js","../src/sets/names.js","../src/sets/programmingLanguages.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/bullet.js","../src/chord.js","../src/network.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/parallelCoordinates.js","../src/sankey.js","../src/swarmplot.js","../src/index.js"],"sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nexport const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export default [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export default [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export default [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport range from 'lodash/range'\nimport random from 'lodash/random'\n\nexport const generateBulletData = (\n    id,\n    max,\n    { title, subtitle, rangeCount = 5, measureCount = 1, markerCount = 1, float = false } = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport random from 'lodash/random'\n\nexport const generateNetworkData = ({\n    rootNodeRadius = 12,\n    minMidNodes = 6,\n    maxMidNodes = 16,\n    midNodeRadius = 8,\n    minLeaves = 4,\n    maxLeaves = 16,\n    leafRadius = 4,\n} = {}) => {\n    const rootNode = {\n        id: '0',\n        radius: rootNodeRadius,\n        depth: 0,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (v, k) => ({\n        id: `${k + 1}`,\n        radius: midNodeRadius,\n        depth: 1,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links = []\n    const extraNodes = []\n    nodes.forEach(source => {\n        links.push({\n            source: '0',\n            target: source.id,\n            distance: 50,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 70,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (v, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                radius: leafRadius,\n                depth: 2,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 30,\n            })\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n} = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id, links, currentPath) => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath && currentPath.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = links =>\n    links.reduce((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({ nodeCount, maxIterations = 3 } = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            color: randColor(),\n        })\n    )\n\n    const links = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (groups, { min = 60, max = 100, categoryCount = 0 }) => ({\n    groups,\n    data: groups.reduce(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = previousData => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = generator => {\n    const used = []\n\n    return (...args) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id).data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids, xKeys) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = size => {\n    const countryCode = uniqRand(randCountryCode())\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateDayCounts = (from, to, maxSize = 0.9) => {\n    const days = timeDays(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return shuffle(days)\n        .slice(0, size)\n        .map(day => {\n            return {\n                day: dayFormat(day),\n                value: Math.round(Math.random() * 400),\n            }\n        })\n}\n\nexport const generateCountriesData = (\n    keys,\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['chart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'pie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\nexport const generateLibTree = (name = 'nivo', limit, children = libTreeItems) => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree = {\n        name,\n        color: randColor(),\n    }\n    if (children && children.length > 0) {\n        tree.children = range(limit).map((o, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0], null, leaf[1] || [])\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\n"],"names":["randColor","Math","round","random","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","generateBulletData","id","max","title","subtitle","rangeCount","measureCount","markerCount","float","ranges","range","reduce","acc","remaining","measures","length","markers","map","generateChordData","keys","names","size","minValue","maxValue","maxSize","min","selectedKeys","slice","matrix","generateNetworkData","rootNodeRadius","minMidNodes","maxMidNodes","midNodeRadius","minLeaves","maxLeaves","leafRadius","rootNode","radius","depth","color","nodes","Array","from","v","k","links","extraNodes","forEach","source","push","target","distance","concat","defineProperty","generateParallelCoordinatesData","key","shuffle","datumGenerator","value","undefined","availableNodes","name","getNodeTargets","currentPath","targets","filter","Error","includes","join","targetId","getNodesTargets","targetsById","link","generateSankeyData","nodeCount","maxIterations","node","Object","assign","randId","n","randomPrice","randomVolume","randomCategory","generateSwarmPlotData","groups","categoryCount","data","group","groupIndex","price","index","datum","volume","categories","randomizeSwarmPlotData","previousData","d","generateProgrammingLanguageStats","shouldShuffle","limit","langs","sets","language","label","uniqRand","generator","used","randCountryCode","generateDrinkStats","xSize","rand","types","country","x","find","y","generateSerie","generateSeries","ids","xKeys","generateStackData","i","generateCountriesPopulation","countryCode","population","generateDayCounts","to","days","timeDays","dayFormat","timeFormat","day","generateCountriesData","withColors","libTreeItems","generateLibTree","children","tree","o","leaf","loc","wines","wineTastes","generateWinesTastes","randMin","randMax","taste","wine"],"mappings":"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"}