{"version":3,"file":"nivo-treemap.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/TreeMapNode.js","../src/TreeMapHtmlNode.js","../src/props.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/TreeMapNodeTooltip.js","../src/hooks.js","../src/TreeMapNodes.js","../src/TreeMap.js","../src/ResponsiveTreeMap.js","../src/TreeMapHtml.js","../src/ResponsiveTreeMapHtml.js","../src/TreeMapCanvas.js","../src/ResponsiveTreeMapCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useTheme } from '@bitbloom/nivo-core'\n\nconst TreeMapNode = ({\n    node,\n    animatedProps,\n    borderWidth,\n    enableLabel,\n    enableParentLabel,\n    labelSkipSize,\n}) => {\n    const theme = useTheme()\n\n    const showLabel =\n        enableLabel &&\n        node.isLeaf &&\n        (labelSkipSize === 0 || Math.min(node.width, node.height) > labelSkipSize)\n\n    const showParentLabel = enableParentLabel && node.isParent\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            <animated.rect\n                width={animatedProps.width.interpolate(v => Math.max(v, 0))}\n                height={animatedProps.height.interpolate(v => Math.max(v, 0))}\n                fill={node.fill ? node.fill : animatedProps.color}\n                strokeWidth={borderWidth}\n                stroke={node.borderColor}\n                fillOpacity={node.opacity}\n                onMouseEnter={node.onMouseEnter}\n                onMouseMove={node.onMouseMove}\n                onMouseLeave={node.onMouseLeave}\n                onClick={node.onClick}\n            />\n            {showLabel && (\n                <animated.text\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: node.labelTextColor,\n                        pointerEvents: 'none',\n                    }}\n                    fillOpacity={animatedProps.labelOpacity}\n                    transform={animatedProps.labelTransform}\n                >\n                    {node.label}\n                </animated.text>\n            )}\n            {showParentLabel && (\n                <animated.text\n                    dominantBaseline=\"central\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: node.parentLabelTextColor,\n                        pointerEvents: 'none',\n                    }}\n                    fillOpacity={animatedProps.parentLabelOpacity}\n                    transform={animatedProps.parentLabelTransform}\n                >\n                    {node.parentLabel}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n\nTreeMapNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    animatedProps: PropTypes.object.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    enableParentLabel: PropTypes.bool.isRequired,\n    labelSkipSize: PropTypes.number.isRequired,\n}\n\nexport default memo(TreeMapNode)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useTheme } from '@bitbloom/nivo-core'\n\nconst TreeMapHtmlNode = ({\n    node,\n    animatedProps,\n    borderWidth,\n    enableLabel,\n    enableParentLabel,\n    labelSkipSize,\n}) => {\n    const theme = useTheme()\n\n    const showLabel =\n        enableLabel &&\n        node.isLeaf &&\n        (labelSkipSize === 0 || Math.min(node.width, node.height) > labelSkipSize)\n\n    const showParentLabel = enableParentLabel && node.isParent\n\n    return (\n        <animated.div\n            id={node.path.replace(/[^\\w]/gi, '-')}\n            style={{\n                boxSizing: 'border-box',\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                transform: animatedProps.htmlTransform,\n                width: animatedProps.width,\n                height: animatedProps.height,\n                borderWidth,\n                borderStyle: 'solid',\n                borderColor: node.borderColor,\n                overflow: 'hidden',\n            }}\n        >\n            <animated.div\n                style={{\n                    boxSizing: 'border-box',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    opacity: node.opacity,\n                    width: animatedProps.width,\n                    height: animatedProps.height,\n                    background: animatedProps.color,\n                }}\n                onMouseEnter={node.onMouseEnter}\n                onMouseMove={node.onMouseMove}\n                onMouseLeave={node.onMouseLeave}\n                onClick={node.onClick}\n            />\n            {showLabel && (\n                <animated.span\n                    style={{\n                        ...theme.labels.text,\n                        position: 'absolute',\n                        display: 'flex',\n                        top: -5,\n                        left: -5,\n                        width: 10,\n                        height: 10,\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        whiteSpace: 'nowrap',\n                        color: node.labelTextColor,\n                        transformOrigin: 'center center',\n                        transform: animatedProps.labelHtmlTransform,\n                        opacity: animatedProps.labelOpacity,\n                        pointerEvents: 'none',\n                    }}\n                >\n                    {node.label}\n                </animated.span>\n            )}\n            {showParentLabel && (\n                <animated.span\n                    style={{\n                        ...theme.labels.text,\n                        position: 'absolute',\n                        display: 'flex',\n                        justifyContent: 'flex-start',\n                        alignItems: 'center',\n                        whiteSpace: 'nowrap',\n                        width: 10,\n                        height: 10,\n                        color: node.parentLabelTextColor,\n                        transformOrigin: 'top left',\n                        transform: animatedProps.parentLabelHtmlTransform,\n                        opacity: animatedProps.parentLabelOpacity,\n                        pointerEvents: 'none',\n                    }}\n                >\n                    {node.parentLabel}\n                </animated.span>\n            )}\n        </animated.div>\n    )\n}\n\nTreeMapHtmlNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    animatedProps: PropTypes.object.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    enableParentLabel: PropTypes.bool.isRequired,\n    labelSkipSize: PropTypes.number.isRequired,\n}\n\nexport default memo(TreeMapHtmlNode)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { treeMapTilePropType, defsPropTypes } from '@bitbloom/nivo-core'\nimport {\n    ordinalColorsPropType,\n    colorPropertyAccessorPropType,\n    inheritedColorPropType,\n} from '@bitbloom/nivo-colors'\nimport TreeMapNode from './TreeMapNode'\nimport TreeMapHtmlNode from './TreeMapHtmlNode'\n\nconst commonPropTypes = {\n    identity: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n    colors: ordinalColorsPropType.isRequired,\n    colorBy: colorPropertyAccessorPropType.isRequired,\n    nodeOpacity: PropTypes.number.isRequired,\n\n    leavesOnly: PropTypes.bool.isRequired,\n    tile: treeMapTilePropType.isRequired,\n    innerPadding: PropTypes.number.isRequired,\n    outerPadding: PropTypes.number.isRequired,\n\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelFormat: PropTypes.string,\n    labelSkipSize: PropTypes.number.isRequired,\n    labelTextColor: inheritedColorPropType.isRequired,\n    orientLabel: PropTypes.bool.isRequired,\n\n    enableParentLabel: PropTypes.bool.isRequired,\n    parentLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    parentLabelSize: PropTypes.number.isRequired,\n    parentLabelPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']).isRequired,\n    parentLabelPadding: PropTypes.number.isRequired,\n    parentLabelTextColor: inheritedColorPropType.isRequired,\n\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.func,\n}\n\nexport const TreeMapPropTypes = {\n    ...commonPropTypes,\n    nodeComponent: PropTypes.elementType.isRequired,\n    role: PropTypes.string.isRequired,\n    ...defsPropTypes,\n}\n\nexport const TreeMapHtmlPropTypes = {\n    ...commonPropTypes,\n    nodeComponent: PropTypes.elementType.isRequired,\n}\n\nexport const TreeMapCanvasPropTypes = {\n    ...commonPropTypes,\n    pixelRatio: PropTypes.number.isRequired,\n}\n\nconst commonDefaultProps = {\n    identity: 'id',\n    value: 'value',\n\n    tile: 'squarify',\n    leavesOnly: false,\n    innerPadding: 0,\n    outerPadding: 0,\n\n    colors: { scheme: 'nivo' },\n    colorBy: 'pathComponents.1',\n    nodeOpacity: 0.33,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipSize: 0,\n    labelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n    orientLabel: true,\n\n    enableParentLabel: true,\n    parentLabel: 'id',\n    parentLabelSize: 20,\n    parentLabelPosition: 'top',\n    parentLabelPadding: 6,\n    parentLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    borderWidth: 1,\n    borderColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n}\n\nexport const TreeMapDefaultProps = {\n    ...commonDefaultProps,\n    nodeComponent: TreeMapNode,\n    role: 'img',\n    defs: [],\n    fill: [],\n}\n\nexport const TreeMapHtmlDefaultProps = {\n    ...commonDefaultProps,\n    nodeComponent: TreeMapHtmlNode,\n}\n\nexport const TreeMapCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@bitbloom/nivo-tooltip'\n\nconst TreeMapNodeTooltip = ({ node, tooltip }) => {\n    return (\n        <BasicTooltip\n            id={node.id}\n            value={node.formattedValue}\n            enableChip={true}\n            color={node.color}\n            renderContent={typeof tooltip === 'function' ? tooltip.bind(null, { node }) : null}\n        />\n    )\n}\n\nTreeMapNodeTooltip.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        formattedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n    tooltip: PropTypes.elementType,\n}\n\nexport default memo(TreeMapNodeTooltip)\n","import React, { useCallback, useMemo } from 'react'\nimport get from 'lodash/get'\nimport omit from 'lodash/omit'\nimport cloneDeep from 'lodash/cloneDeep'\nimport startCase from 'lodash/startCase'\nimport { treemap as d3Treemap, hierarchy } from 'd3-hierarchy'\nimport { treeMapTileFromProp, useTheme, useValueFormatter } from '@bitbloom/nivo-core'\nimport { useOrdinalColorScale, useInheritedColor } from '@bitbloom/nivo-colors'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\nimport { TreeMapDefaultProps } from './props'\nimport TreeMapNodeTooltip from './TreeMapNodeTooltip'\n\nexport const useTreeMapLayout = ({\n    width,\n    height,\n    tile,\n    innerPadding,\n    outerPadding,\n    enableParentLabel,\n    parentLabelSize,\n    parentLabelPosition,\n    leavesOnly,\n}) =>\n    useMemo(() => {\n        const treemap = d3Treemap()\n            .size([width, height])\n            .tile(treeMapTileFromProp(tile))\n            .round(true)\n            .paddingInner(innerPadding)\n            .paddingOuter(outerPadding)\n\n        if (enableParentLabel && !leavesOnly) {\n            const parentLabelPadding = parentLabelSize + outerPadding * 2\n            treemap[`padding${startCase(parentLabelPosition)}`](parentLabelPadding)\n        }\n\n        return treemap\n    }, [\n        width,\n        height,\n        tile,\n        innerPadding,\n        outerPadding,\n        enableParentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        leavesOnly,\n    ])\n\nexport const useHierarchy = ({ root, getValue }) =>\n    useMemo(() => hierarchy(root).sum(getValue), [root, getValue])\n\nexport const useAccessor = accessor =>\n    useMemo(() => {\n        if (typeof accessor === 'function') return accessor\n        return d => get(d, accessor)\n    }, [accessor])\n\nconst computeNodeIdAndPath = (node, getIdentity) => {\n    const path = node\n        .ancestors()\n        .map(ancestor => getIdentity(ancestor.data))\n        .reverse()\n\n    return [path.join('.'), path]\n}\n\nexport const useTreeMap = ({\n    data,\n    identity = TreeMapDefaultProps.identity,\n    value = TreeMapDefaultProps.value,\n    valueFormat,\n    leavesOnly = TreeMapDefaultProps.leavesOnly,\n    width,\n    height,\n    tile = TreeMapDefaultProps.tile,\n    innerPadding = TreeMapDefaultProps.innerPadding,\n    outerPadding = TreeMapDefaultProps.outerPadding,\n    label = TreeMapDefaultProps.label,\n    orientLabel = TreeMapDefaultProps.orientLabel,\n    enableParentLabel = TreeMapDefaultProps.enableParentLabel,\n    parentLabel = TreeMapDefaultProps.parentLabel,\n    parentLabelSize = TreeMapDefaultProps.parentLabelSize,\n    parentLabelPosition = TreeMapDefaultProps.parentLabelPosition,\n    parentLabelPadding = TreeMapDefaultProps.parentLabelPadding,\n    colors = TreeMapDefaultProps.colors,\n    colorBy = TreeMapDefaultProps.colorBy,\n    nodeOpacity = TreeMapDefaultProps.nodeOpacity,\n    borderColor = TreeMapDefaultProps.borderColor,\n    labelTextColor = TreeMapDefaultProps.labelTextColor,\n    parentLabelTextColor = TreeMapDefaultProps.parentLabelTextColor,\n}) => {\n    const getIdentity = useAccessor(identity)\n    const getValue = useAccessor(value)\n    const formatValue = useValueFormatter(valueFormat)\n    const getLabel = useAccessor(label)\n    const getParentLabel = useAccessor(parentLabel)\n\n    const layout = useTreeMapLayout({\n        width,\n        height,\n        tile,\n        innerPadding,\n        outerPadding,\n        enableParentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        leavesOnly,\n    })\n\n    const hierarchy = useHierarchy({ root: data, getValue })\n\n    const rawNodes = useMemo(() => {\n        // d3 treemap mutates the data, so we need to copy it\n        // to have proper behavior for subsequents useMemo()\n        const root = cloneDeep(hierarchy)\n        layout(root)\n\n        return leavesOnly ? root.leaves() : root.descendants()\n    }, [hierarchy, layout, leavesOnly])\n\n    const nodes = useMemo(\n        () =>\n            rawNodes.map(rawNode => {\n                const [path, pathComponents] = computeNodeIdAndPath(rawNode, getIdentity)\n\n                const node = {\n                    id: getIdentity(rawNode.data),\n                    path,\n                    pathComponents,\n                    data: omit(rawNode.data, 'children'),\n                    x: rawNode.x0,\n                    y: rawNode.y0,\n                    width: rawNode.x1 - rawNode.x0,\n                    height: rawNode.y1 - rawNode.y0,\n                    value: rawNode.value,\n                    formattedValue: formatValue(rawNode.value),\n                    treeDepth: rawNode.depth,\n                    treeHeight: rawNode.height,\n                    isParent: rawNode.height > 0,\n                    isLeaf: rawNode.height === 0,\n                }\n\n                node.label = getLabel(node)\n                node.parentLabel = getParentLabel(node)\n                node.parentLabelRotation = 0\n\n                if (parentLabelPosition === 'top') {\n                    node.parentLabelX = outerPadding + parentLabelPadding\n                    node.parentLabelY = outerPadding + parentLabelSize / 2\n                }\n                if (parentLabelPosition === 'right') {\n                    node.parentLabelX = node.width - outerPadding - parentLabelSize / 2\n                    node.parentLabelY = node.height - outerPadding - parentLabelPadding\n                    node.parentLabelRotation = -90\n                }\n                if (parentLabelPosition === 'bottom') {\n                    node.parentLabelX = outerPadding + parentLabelPadding\n                    node.parentLabelY = node.height - outerPadding - parentLabelSize / 2\n                }\n                if (parentLabelPosition === 'left') {\n                    node.parentLabelX = outerPadding + parentLabelSize / 2\n                    node.parentLabelY = node.height - outerPadding - parentLabelPadding\n                    node.parentLabelRotation = -90\n                }\n\n                return node\n            }),\n        [\n            rawNodes,\n            leavesOnly,\n            getIdentity,\n            formatValue,\n            getLabel,\n            getParentLabel,\n            parentLabelSize,\n            parentLabelPosition,\n            parentLabelPadding,\n            outerPadding,\n        ]\n    )\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n    const getParentLabelTextColor = useInheritedColor(parentLabelTextColor, theme)\n\n    const enhancedNodes = useMemo(\n        () =>\n            nodes.map(node => {\n                node.opacity = nodeOpacity\n                node.labelRotation = orientLabel && node.height > node.width ? -90 : 0\n                node.color = getColor(node)\n                node.borderColor = getBorderColor(node)\n                node.labelTextColor = getLabelTextColor(node)\n                node.parentLabelTextColor = getParentLabelTextColor(node)\n\n                return node\n            }),\n        [\n            nodes,\n            getColor,\n            nodeOpacity,\n            getBorderColor,\n            getLabelTextColor,\n            getParentLabelTextColor,\n            orientLabel,\n        ]\n    )\n\n    return {\n        hierarchy,\n        nodes: enhancedNodes,\n        layout,\n    }\n}\n\nexport const useInteractiveTreeMapNodes = (\n    nodes,\n    { isInteractive, onMouseEnter, onMouseMove, onMouseLeave, onClick, tooltip }\n) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const showTooltip = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(\n                <TreeMapNodeTooltip node={node} tooltip={tooltip} />,\n                event,\n                'left'\n            )\n        },\n        [showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseEnter = useCallback(\n        (node, event) => {\n            showTooltip(node, event)\n            onMouseEnter && onMouseEnter(node, event)\n        },\n        [onMouseEnter, showTooltip]\n    )\n\n    const handleMouseMove = useCallback(\n        (node, event) => {\n            showTooltip(node, event)\n            onMouseMove && onMouseMove(node, event)\n        },\n        [onMouseMove, showTooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (node, event) => {\n            hideTooltip()\n            onMouseLeave && onMouseLeave(node, event)\n        },\n        [onMouseLeave, hideTooltip]\n    )\n\n    const handleClick = useCallback(\n        (node, event) => {\n            onClick && onClick(node, event)\n        },\n        [onClick]\n    )\n\n    return useMemo(() => {\n        return nodes.map(node => {\n            if (!isInteractive) return node\n\n            return {\n                ...node,\n                onMouseEnter: event => handleMouseEnter(node, event),\n                onMouseMove: event => handleMouseMove(node, event),\n                onMouseLeave: event => handleMouseLeave(node, event),\n                onClick: event => handleClick(node, event),\n            }\n        })\n    }, [nodes, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick])\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@bitbloom/nivo-core'\nimport { useInteractiveTreeMapNodes } from './hooks'\n\nconst getAnimatedNodeProps = node => {\n    return {\n        transform: `translate(${node.x},${node.y})`,\n        htmlTransform: `translate(${node.x}px,${node.y}px)`,\n        labelOpacity: 1,\n        labelTransform: `translate(${node.width / 2},${node.height / 2}) rotate(${\n            node.labelRotation\n        })`,\n        labelHtmlTransform: `translate(${node.width / 2}px,${node.height / 2}px) rotate(${\n            node.labelRotation\n        }deg)`,\n        parentLabelOpacity: 1,\n        parentLabelTransform: `translate(${node.parentLabelX},${node.parentLabelY}) rotate(${node.parentLabelRotation})`,\n        parentLabelHtmlTransform: `translate(${\n            node.parentLabelX - (node.parentLabelRotation === 0 ? 0 : 5)\n        }px,${node.parentLabelY - (node.parentLabelRotation === 0 ? 5 : 0)}px) rotate(${\n            node.parentLabelRotation\n        }deg)`,\n        width: node.width,\n        height: node.height,\n        color: node.color,\n    }\n}\n\nconst getEndingAnimatedNodeProps = node => {\n    const x = node.x + node.width / 2\n    const y = node.y + node.height / 2\n\n    return {\n        transform: `translate(${x},${y})`,\n        transformPixels: `translate(${x}px,${y}px)`,\n        labelOpacity: 0,\n        labelTransform: `translate(0,0) rotate(${node.labelRotation})`,\n        parentLabelOpacity: 0,\n        parentLabelTransform: `translate(0,0) rotate(${node.parentLabelRotation})`,\n        parentLabelHtmlTransform: `translate(0px,0px) rotate(${node.parentLabelRotation}deg)`,\n        width: 0,\n        height: 0,\n        color: node.color,\n    }\n}\n\nconst TreeMapNodes = ({\n    nodes,\n    nodeComponent,\n    borderWidth,\n    enableLabel,\n    labelSkipSize,\n    enableParentLabel,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}) => {\n    const interactiveNodes = useInteractiveTreeMapNodes(nodes, {\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const transitions = useTransition(interactiveNodes, node => node.path, {\n        initial: node => getAnimatedNodeProps(node),\n        from: node => getEndingAnimatedNodeProps(node),\n        enter: node => getAnimatedNodeProps(node),\n        update: node => getAnimatedNodeProps(node),\n        leave: node => getEndingAnimatedNodeProps(node),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return transitions.map(({ item: node, props: animatedProps, key }) => {\n        return React.createElement(nodeComponent, {\n            key,\n            node,\n            animatedProps,\n            borderWidth,\n            enableLabel,\n            labelSkipSize,\n            enableParentLabel,\n        })\n    })\n}\n\nTreeMapNodes.propTypes = {\n    nodes: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    nodeComponent: PropTypes.elementType.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    labelSkipSize: PropTypes.number.isRequired,\n    enableParentLabel: PropTypes.bool.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.elementType,\n}\n\nexport default memo(TreeMapNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { SvgWrapper, withContainer, useDimensions, bindDefs } from '@bitbloom/nivo-core'\nimport { TreeMapDefaultProps, TreeMapPropTypes } from './props'\nimport { useTreeMap } from './hooks'\nimport TreeMapNodes from './TreeMapNodes'\n\nconst TreeMap = ({\n    data,\n    identity,\n    value,\n    tile,\n    nodeComponent,\n    valueFormat,\n    innerPadding,\n    outerPadding,\n    leavesOnly,\n    width,\n    height,\n    margin: partialMargin,\n    colors,\n    colorBy,\n    nodeOpacity,\n    borderWidth,\n    borderColor,\n    defs,\n    fill,\n    enableLabel,\n    label,\n    labelTextColor,\n    orientLabel,\n    labelSkipSize,\n    enableParentLabel,\n    parentLabel,\n    parentLabelSize,\n    parentLabelPosition,\n    parentLabelPadding,\n    parentLabelTextColor,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes } = useTreeMap({\n        data,\n        identity,\n        value,\n        valueFormat,\n        leavesOnly,\n        width: innerWidth,\n        height: innerHeight,\n        tile,\n        innerPadding,\n        outerPadding,\n        colors,\n        colorBy,\n        nodeOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        orientLabel,\n        enableParentLabel,\n        parentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        parentLabelPadding,\n        parentLabelTextColor,\n    })\n\n    const boundDefs = bindDefs(defs, nodes, fill)\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            <TreeMapNodes\n                nodes={nodes}\n                nodeComponent={nodeComponent}\n                borderWidth={borderWidth}\n                enableLabel={enableLabel}\n                labelSkipSize={labelSkipSize}\n                enableParentLabel={enableParentLabel}\n                isInteractive={isInteractive}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n            />\n        </SvgWrapper>\n    )\n}\n\nTreeMap.propTypes = TreeMapPropTypes\n\nconst WrappedTreeMap = withContainer(TreeMap)\nWrappedTreeMap.defaultProps = TreeMapDefaultProps\n\nexport default WrappedTreeMap\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport TreeMap from './TreeMap'\n\nconst ResponsiveTreeMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TreeMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveTreeMap\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { withContainer, useDimensions } from '@bitbloom/nivo-core'\nimport { TreeMapHtmlPropTypes, TreeMapHtmlDefaultProps } from './props'\nimport { useTreeMap } from './hooks'\nimport TreeMapNodes from './TreeMapNodes'\n\nconst TreeMapHtml = ({\n    data,\n    identity,\n    value,\n    tile,\n    nodeComponent,\n    valueFormat,\n    innerPadding,\n    outerPadding,\n    leavesOnly,\n    width,\n    height,\n    margin: partialMargin,\n    colors,\n    colorBy,\n    nodeOpacity,\n    borderWidth,\n    borderColor,\n    enableLabel,\n    label,\n    labelTextColor,\n    orientLabel,\n    labelSkipSize,\n    enableParentLabel,\n    parentLabel,\n    parentLabelSize,\n    parentLabelPosition,\n    parentLabelPadding,\n    parentLabelTextColor,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes } = useTreeMap({\n        data,\n        identity,\n        value,\n        valueFormat,\n        leavesOnly,\n        width: innerWidth,\n        height: innerHeight,\n        tile,\n        innerPadding,\n        outerPadding,\n        colors,\n        colorBy,\n        nodeOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        orientLabel,\n        enableParentLabel,\n        parentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        parentLabelPadding,\n        parentLabelTextColor,\n    })\n\n    return (\n        <div\n            style={{\n                position: 'relative',\n                width: outerWidth,\n                height: outerHeight,\n            }}\n        >\n            <div style={{ position: 'absolute', top: margin.top, left: margin.left }}>\n                <TreeMapNodes\n                    nodes={nodes}\n                    nodeComponent={nodeComponent}\n                    borderWidth={borderWidth}\n                    enableLabel={enableLabel}\n                    labelSkipSize={labelSkipSize}\n                    enableParentLabel={enableParentLabel}\n                    isInteractive={isInteractive}\n                    onMouseEnter={onMouseEnter}\n                    onMouseMove={onMouseMove}\n                    onMouseLeave={onMouseLeave}\n                    onClick={onClick}\n                    tooltip={tooltip}\n                />\n            </div>\n        </div>\n    )\n}\n\nTreeMapHtml.propTypes = TreeMapHtmlPropTypes\n\nconst WrappedTreeMapHtml = withContainer(TreeMapHtml)\nWrappedTreeMapHtml.defaultProps = TreeMapHtmlDefaultProps\n\nexport default WrappedTreeMapHtml\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport TreeMapHtml from './TreeMapHtml'\n\nconst ResponsiveTreeMapHtml = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TreeMapHtml width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveTreeMapHtml\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useCallback, useEffect, useRef } from 'react'\nimport {\n    degreesToRadians,\n    getRelativeCursor,\n    isCursorInRect,\n    withContainer,\n    useDimensions,\n    useTheme,\n} from '@bitbloom/nivo-core'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\nimport { TreeMapCanvasPropTypes, TreeMapCanvasDefaultProps } from './props'\nimport { useTreeMap } from './hooks'\nimport TreeMapNodeTooltip from './TreeMapNodeTooltip'\n\nconst findNodeUnderCursor = (nodes, margin, x, y) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst TreeMapCanvas = ({\n    data,\n    identity,\n    value,\n    tile,\n    valueFormat,\n    innerPadding,\n    outerPadding,\n    leavesOnly,\n    width,\n    height,\n    margin: partialMargin,\n    colors,\n    colorBy,\n    nodeOpacity,\n    borderWidth,\n    borderColor,\n    enableLabel,\n    label,\n    labelTextColor,\n    orientLabel,\n    labelSkipSize,\n    isInteractive,\n    onMouseMove,\n    onClick,\n    tooltip,\n    pixelRatio,\n}) => {\n    const canvasEl = useRef(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes } = useTreeMap({\n        data,\n        identity,\n        value,\n        valueFormat,\n        leavesOnly,\n        width: innerWidth,\n        height: innerHeight,\n        tile,\n        innerPadding,\n        outerPadding,\n        colors,\n        colorBy,\n        nodeOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        orientLabel,\n        enableParentLabel: false,\n    })\n\n    const theme = useTheme()\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        nodes.forEach(node => {\n            ctx.fillStyle = node.color\n            ctx.fillRect(node.x, node.y, node.width, node.height)\n\n            if (borderWidth > 0) {\n                ctx.strokeStyle = node.borderColor\n                ctx.lineWidth = borderWidth\n                ctx.strokeRect(node.x, node.y, node.width, node.height)\n            }\n        })\n\n        if (enableLabel) {\n            ctx.textAlign = 'center'\n            ctx.textBaseline = 'middle'\n            ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n            nodes.forEach(node => {\n                const showLabel =\n                    node.isLeaf &&\n                    (labelSkipSize === 0 || Math.min(node.width, node.height) > labelSkipSize)\n\n                if (!showLabel) return\n\n                const rotate = orientLabel && node.height > node.width\n\n                ctx.save()\n                ctx.translate(node.x + node.width / 2, node.y + node.height / 2)\n                ctx.rotate(degreesToRadians(rotate ? -90 : 0))\n\n                ctx.fillStyle = node.labelTextColor\n                ctx.fillText(node.label, 0, 0)\n\n                ctx.restore()\n            })\n        }\n    }, [\n        canvasEl,\n        nodes,\n        outerWidth,\n        outerHeight,\n        innerWidth,\n        innerHeight,\n        margin,\n        borderWidth,\n        enableLabel,\n        orientLabel,\n        labelSkipSize,\n        theme,\n        pixelRatio,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const node = findNodeUnderCursor(nodes, margin, x, y)\n\n            if (node !== undefined) {\n                showTooltipFromEvent(\n                    <TreeMapNodeTooltip node={node} tooltip={tooltip} />,\n                    event,\n                    'left'\n                )\n                onMouseMove && onMouseMove(node, event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [canvasEl, nodes, margin, showTooltipFromEvent, hideTooltip, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const node = findNodeUnderCursor(nodes, margin, x, y)\n\n            if (node === undefined) return\n\n            onClick && onClick(node, event)\n        },\n        [canvasEl, nodes, margin, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nTreeMapCanvas.propTypes = TreeMapCanvasPropTypes\n\nconst WrappedTreeMapCanvas = withContainer(TreeMapCanvas)\nWrappedTreeMapCanvas.defaultProps = TreeMapCanvasDefaultProps\n\nexport default WrappedTreeMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport TreeMapCanvas from './TreeMapCanvas'\n\nconst ResponsiveTreeMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TreeMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveTreeMapCanvas\n"],"names":["defineProperty","TreeMapNode","node","animatedProps","borderWidth","enableLabel","enableParentLabel","labelSkipSize","theme","useTheme","showLabel","isLeaf","Math","min","width","height","showParentLabel","isParent","React","animated","transform","interpolate","v","max","fill","color","borderColor","opacity","onMouseEnter","onMouseMove","onMouseLeave","onClick","labels","text","labelTextColor","pointerEvents","labelOpacity","labelTransform","label","parentLabelTextColor","parentLabelOpacity","parentLabelTransform","parentLabel","memo","TreeMapHtmlNode","path","replace","boxSizing","position","top","left","htmlTransform","borderStyle","overflow","background","display","justifyContent","alignItems","whiteSpace","transformOrigin","labelHtmlTransform","parentLabelHtmlTransform","commonPropTypes","identity","PropTypes","oneOfType","string","func","isRequired","value","valueFormat","colors","ordinalColorsPropType","colorBy","colorPropertyAccessorPropType","nodeOpacity","number","leavesOnly","bool","tile","treeMapTilePropType","innerPadding","outerPadding","labelFormat","inheritedColorPropType","orientLabel","parentLabelSize","parentLabelPosition","oneOf","parentLabelPadding","isInteractive","tooltip","TreeMapPropTypes","nodeComponent","elementType","role","defsPropTypes","TreeMapHtmlPropTypes","TreeMapCanvasPropTypes","pixelRatio","commonDefaultProps","scheme","from","modifiers","animate","motionConfig","TreeMapDefaultProps","defs","TreeMapHtmlDefaultProps","TreeMapCanvasDefaultProps","global","window","devicePixelRatio","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","TreeMapNodeTooltip","BasicTooltip","id","formattedValue","bind","useTreeMapLayout","useMemo","treemap","d3Treemap","size","treeMapTileFromProp","round","paddingInner","paddingOuter","startCase","useHierarchy","root","getValue","hierarchy","sum","useAccessor","accessor","d","get","computeNodeIdAndPath","getIdentity","ancestors","map","ancestor","data","reverse","join","useTreeMap","formatValue","useValueFormatter","getLabel","getParentLabel","layout","rawNodes","cloneDeep","leaves","descendants","nodes","rawNode","pathComponents","omit","x","x0","y","y0","x1","y1","treeDepth","depth","treeHeight","parentLabelRotation","parentLabelX","parentLabelY","getColor","useOrdinalColorScale","getBorderColor","useInheritedColor","getLabelTextColor","getParentLabelTextColor","enhancedNodes","labelRotation","useInteractiveTreeMapNodes","useTooltip","showTooltipFromEvent","hideTooltip","showTooltip","useCallback","event","handleMouseEnter","handleMouseMove","handleMouseLeave","handleClick","getAnimatedNodeProps","getEndingAnimatedNodeProps","transformPixels","TreeMapNodes","interactiveNodes","useMotionConfig","springConfig","config","transitions","useTransition","initial","enter","update","leave","immediate","item","props","key","createElement","TreeMap","partialMargin","margin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","boundDefs","bindDefs","SvgWrapper","WrappedTreeMap","withContainer","defaultProps","ResponsiveTreeMap","ResponsiveWrapper","TreeMapHtml","WrappedTreeMapHtml","ResponsiveTreeMapHtml","findNodeUnderCursor","find","isCursorInRect","TreeMapCanvas","canvasEl","useRef","useEffect","current","ctx","getContext","scale","fillStyle","fillRect","translate","forEach","strokeStyle","lineWidth","strokeRect","textAlign","textBaseline","font","fontSize","fontFamily","rotate","save","degreesToRadians","fillText","restore","handleMouseHover","getRelativeCursor","undefined","WrappedTreeMapCanvas","ResponsiveTreeMapCanvas"],"mappings":";;;;;;;;;;;;;EAAe,SAAS,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;EACzD,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE;EAClB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;EACpC,MAAM,KAAK,EAAE,KAAK;EAClB,MAAM,UAAU,EAAE,IAAI;EACtB,MAAM,YAAY,EAAE,IAAI;EACxB,MAAM,QAAQ,EAAE,IAAI;EACpB,KAAK,CAAC,CAAC;EACP,GAAG,MAAM;EACT,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;EACrB,GAAG;EAEH,EAAE,OAAO,GAAG,CAAC;EACb;;ECXA,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE;EACzC,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAEjC,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;EACpC,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;EACvD,IAAI,IAAI,cAAc,EAAE,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE;EAChE,MAAM,OAAO,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC;EACrE,KAAK,CAAC,CAAC;EACP,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;EACnC,GAAG;EAEH,EAAE,OAAO,IAAI,CAAC;EACd,CAAC;EAEc,SAAS,cAAc,CAAC,MAAM,EAAE;EAC/C,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC7C,IAAI,IAAI,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EAE1D,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;EACf,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;EAC3D,QAAQA,eAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;EACjD,OAAO,CAAC,CAAC;EACT,KAAK,MAAM,IAAI,MAAM,CAAC,yBAAyB,EAAE;EACjD,MAAM,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC;EAChF,KAAK,MAAM;EACX,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;EACrD,QAAQ,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;EACzF,OAAO,CAAC,CAAC;EACT,KAAK;EACL,GAAG;EAEH,EAAE,OAAO,MAAM,CAAC;EAChB;;ECrBA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAOd;EAAA,MANFC,IAME,QANFA,IAME;EAAA,MALFC,aAKE,QALFA,aAKE;EAAA,MAJFC,WAIE,QAJFA,WAIE;EAAA,MAHFC,WAGE,QAHFA,WAGE;EAAA,MAFFC,iBAEE,QAFFA,iBAEE;EAAA,MADFC,aACE,QADFA,aACE;EACF,MAAMC,KAAK,GAAGC,iBAAQ,EAAtB;EAEA,MAAMC,SAAS,GACXL,WAAW,IACXH,IAAI,CAACS,MADL,KAECJ,aAAa,KAAK,CAAlB,IAAuBK,IAAI,CAACC,GAAL,CAASX,IAAI,CAACY,KAAd,EAAqBZ,IAAI,CAACa,MAA1B,IAAoCR,aAF5D,CADJ;EAKA,MAAMS,eAAe,GAAGV,iBAAiB,IAAIJ,IAAI,CAACe,QAAlD;EAEA,SACIC,6BAACC,oBAAD,CAAU,CAAV;EAAY,IAAA,SAAS,EAAEhB,aAAa,CAACiB;EAArC,kCACKD,oBAAD,CAAU,IAAV;EACI,IAAA,KAAK,EAAEhB,aAAa,CAACW,KAAd,CAAoBO,WAApB,CAAgC,UAAAC,CAAC;EAAA,aAAIV,IAAI,CAACW,GAAL,CAASD,CAAT,EAAY,CAAZ,CAAJ;EAAA,KAAjC,CADX;EAEI,IAAA,MAAM,EAAEnB,aAAa,CAACY,MAAd,CAAqBM,WAArB,CAAiC,UAAAC,CAAC;EAAA,aAAIV,IAAI,CAACW,GAAL,CAASD,CAAT,EAAY,CAAZ,CAAJ;EAAA,KAAlC,CAFZ;EAGI,IAAA,IAAI,EAAEpB,IAAI,CAACsB,IAAL,GAAYtB,IAAI,CAACsB,IAAjB,GAAwBrB,aAAa,CAACsB,KAHhD;EAII,IAAA,WAAW,EAAErB,WAJjB;EAKI,IAAA,MAAM,EAAEF,IAAI,CAACwB,WALjB;EAMI,IAAA,WAAW,EAAExB,IAAI,CAACyB,OANtB;EAOI,IAAA,YAAY,EAAEzB,IAAI,CAAC0B,YAPvB;EAQI,IAAA,WAAW,EAAE1B,IAAI,CAAC2B,WARtB;EASI,IAAA,YAAY,EAAE3B,IAAI,CAAC4B,YATvB;EAUI,IAAA,OAAO,EAAE5B,IAAI,CAAC6B;EAVlB,IADJ,EAaKrB,SAAS,IACNQ,6BAACC,oBAAD,CAAU,IAAV;EACI,IAAA,UAAU,EAAC,QADf;EAEI,IAAA,gBAAgB,EAAC,SAFrB;EAGI,IAAA,KAAK,oCACEX,KAAK,CAACwB,MAAN,CAAaC,IADf;EAEDT,MAAAA,IAAI,EAAEtB,IAAI,CAACgC,cAFV;EAGDC,MAAAA,aAAa,EAAE;EAHd,MAHT;EAQI,IAAA,WAAW,EAAEhC,aAAa,CAACiC,YAR/B;EASI,IAAA,SAAS,EAAEjC,aAAa,CAACkC;EAT7B,KAWKnC,IAAI,CAACoC,KAXV,CAdR,EA4BKtB,eAAe,iCACXG,oBAAD,CAAU,IAAV;EACI,IAAA,gBAAgB,EAAC,SADrB;EAEI,IAAA,KAAK,oCACEX,KAAK,CAACwB,MAAN,CAAaC,IADf;EAEDT,MAAAA,IAAI,EAAEtB,IAAI,CAACqC,oBAFV;EAGDJ,MAAAA,aAAa,EAAE;EAHd,MAFT;EAOI,IAAA,WAAW,EAAEhC,aAAa,CAACqC,kBAP/B;EAQI,IAAA,SAAS,EAAErC,aAAa,CAACsC;EAR7B,KAUKvC,IAAI,CAACwC,WAVV,CA7BR,CADJ;EA6CH,CA9DD;AAyEA,sBAAeC,UAAI,CAAC1C,WAAD,CAAnB;;ECzEA,IAAM2C,eAAe,GAAG,SAAlBA,eAAkB,OAOlB;EAAA,MANF1C,IAME,QANFA,IAME;EAAA,MALFC,aAKE,QALFA,aAKE;EAAA,MAJFC,WAIE,QAJFA,WAIE;EAAA,MAHFC,WAGE,QAHFA,WAGE;EAAA,MAFFC,iBAEE,QAFFA,iBAEE;EAAA,MADFC,aACE,QADFA,aACE;EACF,MAAMC,KAAK,GAAGC,iBAAQ,EAAtB;EAEA,MAAMC,SAAS,GACXL,WAAW,IACXH,IAAI,CAACS,MADL,KAECJ,aAAa,KAAK,CAAlB,IAAuBK,IAAI,CAACC,GAAL,CAASX,IAAI,CAACY,KAAd,EAAqBZ,IAAI,CAACa,MAA1B,IAAoCR,aAF5D,CADJ;EAKA,MAAMS,eAAe,GAAGV,iBAAiB,IAAIJ,IAAI,CAACe,QAAlD;EAEA,SACIC,6BAACC,oBAAD,CAAU,GAAV;EACI,IAAA,EAAE,EAAEjB,IAAI,CAAC2C,IAAL,CAAUC,OAAV,CAAkB,SAAlB,EAA6B,GAA7B,CADR;EAEI,IAAA,KAAK,EAAE;EACHC,MAAAA,SAAS,EAAE,YADR;EAEHC,MAAAA,QAAQ,EAAE,UAFP;EAGHC,MAAAA,GAAG,EAAE,CAHF;EAIHC,MAAAA,IAAI,EAAE,CAJH;EAKH9B,MAAAA,SAAS,EAAEjB,aAAa,CAACgD,aALtB;EAMHrC,MAAAA,KAAK,EAAEX,aAAa,CAACW,KANlB;EAOHC,MAAAA,MAAM,EAAEZ,aAAa,CAACY,MAPnB;EAQHX,MAAAA,WAAW,EAAXA,WARG;EASHgD,MAAAA,WAAW,EAAE,OATV;EAUH1B,MAAAA,WAAW,EAAExB,IAAI,CAACwB,WAVf;EAWH2B,MAAAA,QAAQ,EAAE;EAXP;EAFX,KAgBInC,6BAACC,oBAAD,CAAU,GAAV;EACI,IAAA,KAAK,EAAE;EACH4B,MAAAA,SAAS,EAAE,YADR;EAEHC,MAAAA,QAAQ,EAAE,UAFP;EAGHC,MAAAA,GAAG,EAAE,CAHF;EAIHC,MAAAA,IAAI,EAAE,CAJH;EAKHvB,MAAAA,OAAO,EAAEzB,IAAI,CAACyB,OALX;EAMHb,MAAAA,KAAK,EAAEX,aAAa,CAACW,KANlB;EAOHC,MAAAA,MAAM,EAAEZ,aAAa,CAACY,MAPnB;EAQHuC,MAAAA,UAAU,EAAEnD,aAAa,CAACsB;EARvB,KADX;EAWI,IAAA,YAAY,EAAEvB,IAAI,CAAC0B,YAXvB;EAYI,IAAA,WAAW,EAAE1B,IAAI,CAAC2B,WAZtB;EAaI,IAAA,YAAY,EAAE3B,IAAI,CAAC4B,YAbvB;EAcI,IAAA,OAAO,EAAE5B,IAAI,CAAC6B;EAdlB,IAhBJ,EAgCKrB,SAAS,IACNQ,6BAACC,oBAAD,CAAU,IAAV;EACI,IAAA,KAAK,oCACEX,KAAK,CAACwB,MAAN,CAAaC,IADf;EAEDe,MAAAA,QAAQ,EAAE,UAFT;EAGDO,MAAAA,OAAO,EAAE,MAHR;EAIDN,MAAAA,GAAG,EAAE,CAAC,CAJL;EAKDC,MAAAA,IAAI,EAAE,CAAC,CALN;EAMDpC,MAAAA,KAAK,EAAE,EANN;EAODC,MAAAA,MAAM,EAAE,EAPP;EAQDyC,MAAAA,cAAc,EAAE,QARf;EASDC,MAAAA,UAAU,EAAE,QATX;EAUDC,MAAAA,UAAU,EAAE,QAVX;EAWDjC,MAAAA,KAAK,EAAEvB,IAAI,CAACgC,cAXX;EAYDyB,MAAAA,eAAe,EAAE,eAZhB;EAaDvC,MAAAA,SAAS,EAAEjB,aAAa,CAACyD,kBAbxB;EAcDjC,MAAAA,OAAO,EAAExB,aAAa,CAACiC,YAdtB;EAeDD,MAAAA,aAAa,EAAE;EAfd;EADT,KAmBKjC,IAAI,CAACoC,KAnBV,CAjCR,EAuDKtB,eAAe,iCACXG,oBAAD,CAAU,IAAV;EACI,IAAA,KAAK,oCACEX,KAAK,CAACwB,MAAN,CAAaC,IADf;EAEDe,MAAAA,QAAQ,EAAE,UAFT;EAGDO,MAAAA,OAAO,EAAE,MAHR;EAIDC,MAAAA,cAAc,EAAE,YAJf;EAKDC,MAAAA,UAAU,EAAE,QALX;EAMDC,MAAAA,UAAU,EAAE,QANX;EAOD5C,MAAAA,KAAK,EAAE,EAPN;EAQDC,MAAAA,MAAM,EAAE,EARP;EASDU,MAAAA,KAAK,EAAEvB,IAAI,CAACqC,oBATX;EAUDoB,MAAAA,eAAe,EAAE,UAVhB;EAWDvC,MAAAA,SAAS,EAAEjB,aAAa,CAAC0D,wBAXxB;EAYDlC,MAAAA,OAAO,EAAExB,aAAa,CAACqC,kBAZtB;EAaDL,MAAAA,aAAa,EAAE;EAbd;EADT,KAiBKjC,IAAI,CAACwC,WAjBV,CAxDR,CADJ;EA+EH,CAhGD;AA2GA,0BAAeC,UAAI,CAACC,eAAD,CAAnB;;ECtGA,IAAMkB,eAAe,GAAG;EACpBC,EAAAA,QAAQ,EAAEC,SAAS,CAACC,SAAV,CAAoB,CAACD,SAAS,CAACE,MAAX,EAAmBF,SAAS,CAACG,IAA7B,CAApB,EAAwDC,UAD9C;EAEpBC,EAAAA,KAAK,EAAEL,SAAS,CAACC,SAAV,CAAoB,CAACD,SAAS,CAACE,MAAX,EAAmBF,SAAS,CAACG,IAA7B,CAApB,EAAwDC,UAF3C;EAGpBE,EAAAA,WAAW,EAAEN,SAAS,CAACC,SAAV,CAAoB,CAACD,SAAS,CAACE,MAAX,EAAmBF,SAAS,CAACG,IAA7B,CAApB,CAHO;EAKpBI,EAAAA,MAAM,EAAEC,gCAAqB,CAACJ,UALV;EAMpBK,EAAAA,OAAO,EAAEC,wCAA6B,CAACN,UANnB;EAOpBO,EAAAA,WAAW,EAAEX,SAAS,CAACY,MAAV,CAAiBR,UAPV;EASpBS,EAAAA,UAAU,EAAEb,SAAS,CAACc,IAAV,CAAeV,UATP;EAUpBW,EAAAA,IAAI,EAAEC,4BAAmB,CAACZ,UAVN;EAWpBa,EAAAA,YAAY,EAAEjB,SAAS,CAACY,MAAV,CAAiBR,UAXX;EAYpBc,EAAAA,YAAY,EAAElB,SAAS,CAACY,MAAV,CAAiBR,UAZX;EAcpB/D,EAAAA,WAAW,EAAE2D,SAAS,CAACc,IAAV,CAAeV,UAdR;EAepB9B,EAAAA,KAAK,EAAE0B,SAAS,CAACC,SAAV,CAAoB,CAACD,SAAS,CAACE,MAAX,EAAmBF,SAAS,CAACG,IAA7B,CAApB,EAAwDC,UAf3C;EAgBpBe,EAAAA,WAAW,EAAEnB,SAAS,CAACE,MAhBH;EAiBpB3D,EAAAA,aAAa,EAAEyD,SAAS,CAACY,MAAV,CAAiBR,UAjBZ;EAkBpBlC,EAAAA,cAAc,EAAEkD,iCAAsB,CAAChB,UAlBnB;EAmBpBiB,EAAAA,WAAW,EAAErB,SAAS,CAACc,IAAV,CAAeV,UAnBR;EAqBpB9D,EAAAA,iBAAiB,EAAE0D,SAAS,CAACc,IAAV,CAAeV,UArBd;EAsBpB1B,EAAAA,WAAW,EAAEsB,SAAS,CAACC,SAAV,CAAoB,CAACD,SAAS,CAACE,MAAX,EAAmBF,SAAS,CAACG,IAA7B,CAApB,EAAwDC,UAtBjD;EAuBpBkB,EAAAA,eAAe,EAAEtB,SAAS,CAACY,MAAV,CAAiBR,UAvBd;EAwBpBmB,EAAAA,mBAAmB,EAAEvB,SAAS,CAACwB,KAAV,CAAgB,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,CAAhB,EAAoDpB,UAxBrD;EAyBpBqB,EAAAA,kBAAkB,EAAEzB,SAAS,CAACY,MAAV,CAAiBR,UAzBjB;EA0BpB7B,EAAAA,oBAAoB,EAAE6C,iCAAsB,CAAChB,UA1BzB;EA4BpBhE,EAAAA,WAAW,EAAE4D,SAAS,CAACY,MAAV,CAAiBR,UA5BV;EA6BpB1C,EAAAA,WAAW,EAAE0D,iCAAsB,CAAChB,UA7BhB;EA+BpBsB,EAAAA,aAAa,EAAE1B,SAAS,CAACc,IAAV,CAAeV,UA/BV;EAgCpBxC,EAAAA,YAAY,EAAEoC,SAAS,CAACG,IAhCJ;EAiCpBtC,EAAAA,WAAW,EAAEmC,SAAS,CAACG,IAjCH;EAkCpBrC,EAAAA,YAAY,EAAEkC,SAAS,CAACG,IAlCJ;EAmCpBpC,EAAAA,OAAO,EAAEiC,SAAS,CAACG,IAnCC;EAoCpBwB,EAAAA,OAAO,EAAE3B,SAAS,CAACG;EApCC,CAAxB;MAuCayB,gBAAgB,qCACtB9B,eADsB;EAEzB+B,EAAAA,aAAa,EAAE7B,SAAS,CAAC8B,WAAV,CAAsB1B,UAFZ;EAGzB2B,EAAAA,IAAI,EAAE/B,SAAS,CAACE,MAAV,CAAiBE;EAHE,GAItB4B,sBAJsB;MAOhBC,oBAAoB,qCAC1BnC,eAD0B;EAE7B+B,EAAAA,aAAa,EAAE7B,SAAS,CAAC8B,WAAV,CAAsB1B;EAFR;MAKpB8B,sBAAsB,qCAC5BpC,eAD4B;EAE/BqC,EAAAA,UAAU,EAAEnC,SAAS,CAACY,MAAV,CAAiBR;EAFE;EAKnC,IAAMgC,kBAAkB,GAAG;EACvBrC,EAAAA,QAAQ,EAAE,IADa;EAEvBM,EAAAA,KAAK,EAAE,OAFgB;EAIvBU,EAAAA,IAAI,EAAE,UAJiB;EAKvBF,EAAAA,UAAU,EAAE,KALW;EAMvBI,EAAAA,YAAY,EAAE,CANS;EAOvBC,EAAAA,YAAY,EAAE,CAPS;EASvBX,EAAAA,MAAM,EAAE;EAAE8B,IAAAA,MAAM,EAAE;EAAV,GATe;EAUvB5B,EAAAA,OAAO,EAAE,kBAVc;EAWvBE,EAAAA,WAAW,EAAE,IAXU;EAavBtE,EAAAA,WAAW,EAAE,IAbU;EAcvBiC,EAAAA,KAAK,EAAE,gBAdgB;EAevB/B,EAAAA,aAAa,EAAE,CAfQ;EAgBvB2B,EAAAA,cAAc,EAAE;EAAEoE,IAAAA,IAAI,EAAE,OAAR;EAAiBC,IAAAA,SAAS,EAAE,CAAC,CAAC,QAAD,EAAW,CAAX,CAAD;EAA5B,GAhBO;EAiBvBlB,EAAAA,WAAW,EAAE,IAjBU;EAmBvB/E,EAAAA,iBAAiB,EAAE,IAnBI;EAoBvBoC,EAAAA,WAAW,EAAE,IApBU;EAqBvB4C,EAAAA,eAAe,EAAE,EArBM;EAsBvBC,EAAAA,mBAAmB,EAAE,KAtBE;EAuBvBE,EAAAA,kBAAkB,EAAE,CAvBG;EAwBvBlD,EAAAA,oBAAoB,EAAE;EAAE+D,IAAAA,IAAI,EAAE,OAAR;EAAiBC,IAAAA,SAAS,EAAE,CAAC,CAAC,QAAD,EAAW,CAAX,CAAD;EAA5B,GAxBC;EA0BvBnG,EAAAA,WAAW,EAAE,CA1BU;EA2BvBsB,EAAAA,WAAW,EAAE;EAAE4E,IAAAA,IAAI,EAAE,OAAR;EAAiBC,IAAAA,SAAS,EAAE,CAAC,CAAC,QAAD,EAAW,CAAX,CAAD;EAA5B,GA3BU;EA6BvBb,EAAAA,aAAa,EAAE,IA7BQ;EA+BvBc,EAAAA,OAAO,EAAE,IA/Bc;EAgCvBC,EAAAA,YAAY,EAAE;EAhCS,CAA3B;MAmCaC,mBAAmB,qCACzBN,kBADyB;EAE5BP,EAAAA,aAAa,EAAE5F,aAFa;EAG5B8F,EAAAA,IAAI,EAAE,KAHsB;EAI5BY,EAAAA,IAAI,EAAE,EAJsB;EAK5BnF,EAAAA,IAAI,EAAE;EALsB;MAQnBoF,uBAAuB,qCAC7BR,kBAD6B;EAEhCP,EAAAA,aAAa,EAAEjD;EAFiB;MAKvBiE,yBAAyB,qCAC/BT,kBAD+B;EAElCD,EAAAA,UAAU,EACNW,MAAM,CAACC,MAAP,IAAiBD,MAAM,CAACC,MAAP,CAAcC,gBAA/B,GAAkDF,MAAM,CAACC,MAAP,CAAcC,gBAAhE,GAAmF;EAHrD;;EC1HvB,SAAS,eAAe,CAAC,GAAG,EAAE;EAC7C,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC;EACrC;;ECFe,SAAS,qBAAqB,CAAC,GAAG,EAAE,CAAC,EAAE;EACtD,EAAE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,EAAE,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO;EACjF,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC;EAChB,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;EAChB,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;EACjB,EAAE,IAAI,EAAE,GAAG,SAAS,CAAC;EAErB,EAAE,IAAI;EACN,IAAI,KAAK,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE;EACxF,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;EAE1B,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM;EACxC,KAAK;EACL,GAAG,CAAC,OAAO,GAAG,EAAE;EAChB,IAAI,EAAE,GAAG,IAAI,CAAC;EACd,IAAI,EAAE,GAAG,GAAG,CAAC;EACb,GAAG,SAAS;EACZ,IAAI,IAAI;EACR,MAAM,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC;EACtD,KAAK,SAAS;EACd,MAAM,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC;EACvB,KAAK;EACL,GAAG;EAEH,EAAE,OAAO,IAAI,CAAC;EACd;;ECzBe,SAAS,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE;EACpD,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;EAExD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EACvD,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACrB,GAAG;EAEH,EAAE,OAAO,IAAI,CAAC;EACd;;ECPe,SAAS,2BAA2B,CAAC,CAAC,EAAE,MAAM,EAAE;EAC/D,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO;EACjB,EAAE,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,OAAOC,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;EAChE,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACzD,EAAE,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC;EAC9D,EAAE,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvD,EAAE,IAAI,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAOA,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;EAClH;;ECRe,SAAS,gBAAgB,GAAG;EAC3C,EAAE,MAAM,IAAI,SAAS,CAAC,2IAA2I,CAAC,CAAC;EACnK;;ECEe,SAAS,cAAc,CAAC,GAAG,EAAE,CAAC,EAAE;EAC/C,EAAE,OAAOC,eAAc,CAAC,GAAG,CAAC,IAAIC,qBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,IAAIC,2BAA0B,CAAC,GAAG,EAAE,CAAC,CAAC,IAAIC,gBAAe,EAAE,CAAC;EACxH;;ECMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAuB;EAAA,MAApBpH,IAAoB,QAApBA,IAAoB;EAAA,MAAdyF,OAAc,QAAdA,OAAc;EAC9C,SACIzE,6BAACqG,wBAAD;EACI,IAAA,EAAE,EAAErH,IAAI,CAACsH,EADb;EAEI,IAAA,KAAK,EAAEtH,IAAI,CAACuH,cAFhB;EAGI,IAAA,UAAU,EAAE,IAHhB;EAII,IAAA,KAAK,EAAEvH,IAAI,CAACuB,KAJhB;EAKI,IAAA,aAAa,EAAE,OAAOkE,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAAC+B,IAAR,CAAa,IAAb,EAAmB;EAAExH,MAAAA,IAAI,EAAJA;EAAF,KAAnB,CAAhC,GAA+D;EALlF,IADJ;EASH,CAVD;AAqBA,6BAAeyC,UAAI,CAAC2E,kBAAD,CAAnB;;ECrBO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB;EAAA,MAC5B7G,KAD4B,QAC5BA,KAD4B;EAAA,MAE5BC,MAF4B,QAE5BA,MAF4B;EAAA,MAG5BgE,IAH4B,QAG5BA,IAH4B;EAAA,MAI5BE,YAJ4B,QAI5BA,YAJ4B;EAAA,MAK5BC,YAL4B,QAK5BA,YAL4B;EAAA,MAM5B5E,iBAN4B,QAM5BA,iBAN4B;EAAA,MAO5BgF,eAP4B,QAO5BA,eAP4B;EAAA,MAQ5BC,mBAR4B,QAQ5BA,mBAR4B;EAAA,MAS5BV,UAT4B,QAS5BA,UAT4B;EAAA,SAW5B+C,aAAO,CAAC,YAAM;EACV,QAAMC,OAAO,GAAGC,mBAAS,GACpBC,IADW,CACN,CAACjH,KAAD,EAAQC,MAAR,CADM,EAEXgE,IAFW,CAENiD,4BAAmB,CAACjD,IAAD,CAFb,EAGXkD,KAHW,CAGL,IAHK,EAIXC,YAJW,CAIEjD,YAJF,EAKXkD,YALW,CAKEjD,YALF,CAAhB;EAOA,QAAI5E,iBAAiB,IAAI,CAACuE,UAA1B,EAAsC;EAClC,UAAMY,kBAAkB,GAAGH,eAAe,GAAGJ,YAAY,GAAG,CAA5D;EACA2C,MAAAA,OAAO,kBAAWO,SAAS,CAAC7C,mBAAD,CAApB,EAAP,CAAoDE,kBAApD;EACH;EAED,WAAOoC,OAAP;EACH,GAdM,EAcJ,CACC/G,KADD,EAECC,MAFD,EAGCgE,IAHD,EAICE,YAJD,EAKCC,YALD,EAMC5E,iBAND,EAOCgF,eAPD,EAQCC,mBARD,EASCV,UATD,CAdI,CAXqB;EAAA,CAAzB;EAqCA,IAAMwD,YAAY,GAAG,SAAfA,YAAe;EAAA,MAAGC,IAAH,SAAGA,IAAH;EAAA,MAASC,QAAT,SAASA,QAAT;EAAA,SACxBX,aAAO,CAAC;EAAA,WAAMY,qBAAS,CAACF,IAAD,CAAT,CAAgBG,GAAhB,CAAoBF,QAApB,CAAN;EAAA,GAAD,EAAsC,CAACD,IAAD,EAAOC,QAAP,CAAtC,CADiB;EAAA,CAArB;EAGA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ;EAAA,SAC/Bf,aAAO,CAAC,YAAM;EACV,QAAI,OAAOe,QAAP,KAAoB,UAAxB,EAAoC,OAAOA,QAAP;EACpC,WAAO,UAAAC,CAAC;EAAA,aAAIC,GAAG,CAACD,CAAD,EAAID,QAAJ,CAAP;EAAA,KAAR;EACH,GAHM,EAGJ,CAACA,QAAD,CAHI,CADwB;EAAA,CAA5B;EAMP,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAC5I,IAAD,EAAO6I,WAAP,EAAuB;EAChD,MAAMlG,IAAI,GAAG3C,IAAI,CACZ8I,SADQ,GAERC,GAFQ,CAEJ,UAAAC,QAAQ;EAAA,WAAIH,WAAW,CAACG,QAAQ,CAACC,IAAV,CAAf;EAAA,GAFJ,EAGRC,OAHQ,EAAb;EAKA,SAAO,CAACvG,IAAI,CAACwG,IAAL,CAAU,GAAV,CAAD,EAAiBxG,IAAjB,CAAP;EACH,CAPD;EASO,IAAMyG,UAAU,GAAG,SAAbA,UAAa,QAwBpB;EAAA,MAvBFH,IAuBE,SAvBFA,IAuBE;EAAA,6BAtBFpF,QAsBE;EAAA,MAtBFA,QAsBE,+BAtBS2C,mBAAmB,CAAC3C,QAsB7B;EAAA,0BArBFM,KAqBE;EAAA,MArBFA,KAqBE,4BArBMqC,mBAAmB,CAACrC,KAqB1B;EAAA,MApBFC,WAoBE,SApBFA,WAoBE;EAAA,+BAnBFO,UAmBE;EAAA,MAnBFA,UAmBE,iCAnBW6B,mBAAmB,CAAC7B,UAmB/B;EAAA,MAlBF/D,KAkBE,SAlBFA,KAkBE;EAAA,MAjBFC,MAiBE,SAjBFA,MAiBE;EAAA,yBAhBFgE,IAgBE;EAAA,MAhBFA,IAgBE,2BAhBK2B,mBAAmB,CAAC3B,IAgBzB;EAAA,iCAfFE,YAeE;EAAA,MAfFA,YAeE,mCAfayB,mBAAmB,CAACzB,YAejC;EAAA,iCAdFC,YAcE;EAAA,MAdFA,YAcE,mCAdawB,mBAAmB,CAACxB,YAcjC;EAAA,0BAbF5C,KAaE;EAAA,MAbFA,KAaE,4BAbMoE,mBAAmB,CAACpE,KAa1B;EAAA,gCAZF+C,WAYE;EAAA,MAZFA,WAYE,kCAZYqB,mBAAmB,CAACrB,WAYhC;EAAA,oCAXF/E,iBAWE;EAAA,MAXFA,iBAWE,sCAXkBoG,mBAAmB,CAACpG,iBAWtC;EAAA,gCAVFoC,WAUE;EAAA,MAVFA,WAUE,kCAVYgE,mBAAmB,CAAChE,WAUhC;EAAA,oCATF4C,eASE;EAAA,MATFA,eASE,sCATgBoB,mBAAmB,CAACpB,eASpC;EAAA,oCARFC,mBAQE;EAAA,MARFA,mBAQE,sCARoBmB,mBAAmB,CAACnB,mBAQxC;EAAA,oCAPFE,kBAOE;EAAA,MAPFA,kBAOE,sCAPmBiB,mBAAmB,CAACjB,kBAOvC;EAAA,2BANFlB,MAME;EAAA,MANFA,MAME,6BANOmC,mBAAmB,CAACnC,MAM3B;EAAA,4BALFE,OAKE;EAAA,MALFA,OAKE,8BALQiC,mBAAmB,CAACjC,OAK5B;EAAA,gCAJFE,WAIE;EAAA,MAJFA,WAIE,kCAJY+B,mBAAmB,CAAC/B,WAIhC;EAAA,gCAHFjD,WAGE;EAAA,MAHFA,WAGE,kCAHYgF,mBAAmB,CAAChF,WAGhC;EAAA,mCAFFQ,cAEE;EAAA,MAFFA,cAEE,qCAFewE,mBAAmB,CAACxE,cAEnC;EAAA,oCADFK,oBACE;EAAA,MADFA,oBACE,sCADqBmE,mBAAmB,CAACnE,oBACzC;EACF,MAAMwG,WAAW,GAAGL,WAAW,CAAC3E,QAAD,CAA/B;EACA,MAAMwE,QAAQ,GAAGG,WAAW,CAACrE,KAAD,CAA5B;EACA,MAAMkF,WAAW,GAAGC,0BAAiB,CAAClF,WAAD,CAArC;EACA,MAAMmF,QAAQ,GAAGf,WAAW,CAACpG,KAAD,CAA5B;EACA,MAAMoH,cAAc,GAAGhB,WAAW,CAAChG,WAAD,CAAlC;EAEA,MAAMiH,MAAM,GAAGhC,gBAAgB,CAAC;EAC5B7G,IAAAA,KAAK,EAALA,KAD4B;EAE5BC,IAAAA,MAAM,EAANA,MAF4B;EAG5BgE,IAAAA,IAAI,EAAJA,IAH4B;EAI5BE,IAAAA,YAAY,EAAZA,YAJ4B;EAK5BC,IAAAA,YAAY,EAAZA,YAL4B;EAM5B5E,IAAAA,iBAAiB,EAAjBA,iBAN4B;EAO5BgF,IAAAA,eAAe,EAAfA,eAP4B;EAQ5BC,IAAAA,mBAAmB,EAAnBA,mBAR4B;EAS5BV,IAAAA,UAAU,EAAVA;EAT4B,GAAD,CAA/B;EAYA,MAAM2D,SAAS,GAAGH,YAAY,CAAC;EAAEC,IAAAA,IAAI,EAAEa,IAAR;EAAcZ,IAAAA,QAAQ,EAARA;EAAd,GAAD,CAA9B;EAEA,MAAMqB,QAAQ,GAAGhC,aAAO,CAAC,YAAM;EAG3B,QAAMU,IAAI,GAAGuB,SAAS,CAACrB,SAAD,CAAtB;EACAmB,IAAAA,MAAM,CAACrB,IAAD,CAAN;EAEA,WAAOzD,UAAU,GAAGyD,IAAI,CAACwB,MAAL,EAAH,GAAmBxB,IAAI,CAACyB,WAAL,EAApC;EACH,GAPuB,EAOrB,CAACvB,SAAD,EAAYmB,MAAZ,EAAoB9E,UAApB,CAPqB,CAAxB;EASA,MAAMmF,KAAK,GAAGpC,aAAO,CACjB;EAAA,WACIgC,QAAQ,CAACX,GAAT,CAAa,UAAAgB,OAAO,EAAI;EAAA,kCACWnB,oBAAoB,CAACmB,OAAD,EAAUlB,WAAV,CAD/B;EAAA;EAAA,UACblG,IADa;EAAA,UACPqH,cADO;EAGpB,UAAMhK,IAAI,GAAG;EACTsH,QAAAA,EAAE,EAAEuB,WAAW,CAACkB,OAAO,CAACd,IAAT,CADN;EAETtG,QAAAA,IAAI,EAAJA,IAFS;EAGTqH,QAAAA,cAAc,EAAdA,cAHS;EAITf,QAAAA,IAAI,EAAEgB,IAAI,CAACF,OAAO,CAACd,IAAT,EAAe,UAAf,CAJD;EAKTiB,QAAAA,CAAC,EAAEH,OAAO,CAACI,EALF;EAMTC,QAAAA,CAAC,EAAEL,OAAO,CAACM,EANF;EAOTzJ,QAAAA,KAAK,EAAEmJ,OAAO,CAACO,EAAR,GAAaP,OAAO,CAACI,EAPnB;EAQTtJ,QAAAA,MAAM,EAAEkJ,OAAO,CAACQ,EAAR,GAAaR,OAAO,CAACM,EARpB;EASTlG,QAAAA,KAAK,EAAE4F,OAAO,CAAC5F,KATN;EAUToD,QAAAA,cAAc,EAAE8B,WAAW,CAACU,OAAO,CAAC5F,KAAT,CAVlB;EAWTqG,QAAAA,SAAS,EAAET,OAAO,CAACU,KAXV;EAYTC,QAAAA,UAAU,EAAEX,OAAO,CAAClJ,MAZX;EAaTE,QAAAA,QAAQ,EAAEgJ,OAAO,CAAClJ,MAAR,GAAiB,CAblB;EAcTJ,QAAAA,MAAM,EAAEsJ,OAAO,CAAClJ,MAAR,KAAmB;EAdlB,OAAb;EAiBAb,MAAAA,IAAI,CAACoC,KAAL,GAAamH,QAAQ,CAACvJ,IAAD,CAArB;EACAA,MAAAA,IAAI,CAACwC,WAAL,GAAmBgH,cAAc,CAACxJ,IAAD,CAAjC;EACAA,MAAAA,IAAI,CAAC2K,mBAAL,GAA2B,CAA3B;EAEA,UAAItF,mBAAmB,KAAK,KAA5B,EAAmC;EAC/BrF,QAAAA,IAAI,CAAC4K,YAAL,GAAoB5F,YAAY,GAAGO,kBAAnC;EACAvF,QAAAA,IAAI,CAAC6K,YAAL,GAAoB7F,YAAY,GAAGI,eAAe,GAAG,CAArD;EACH;EACD,UAAIC,mBAAmB,KAAK,OAA5B,EAAqC;EACjCrF,QAAAA,IAAI,CAAC4K,YAAL,GAAoB5K,IAAI,CAACY,KAAL,GAAaoE,YAAb,GAA4BI,eAAe,GAAG,CAAlE;EACApF,QAAAA,IAAI,CAAC6K,YAAL,GAAoB7K,IAAI,CAACa,MAAL,GAAcmE,YAAd,GAA6BO,kBAAjD;EACAvF,QAAAA,IAAI,CAAC2K,mBAAL,GAA2B,CAAC,EAA5B;EACH;EACD,UAAItF,mBAAmB,KAAK,QAA5B,EAAsC;EAClCrF,QAAAA,IAAI,CAAC4K,YAAL,GAAoB5F,YAAY,GAAGO,kBAAnC;EACAvF,QAAAA,IAAI,CAAC6K,YAAL,GAAoB7K,IAAI,CAACa,MAAL,GAAcmE,YAAd,GAA6BI,eAAe,GAAG,CAAnE;EACH;EACD,UAAIC,mBAAmB,KAAK,MAA5B,EAAoC;EAChCrF,QAAAA,IAAI,CAAC4K,YAAL,GAAoB5F,YAAY,GAAGI,eAAe,GAAG,CAArD;EACApF,QAAAA,IAAI,CAAC6K,YAAL,GAAoB7K,IAAI,CAACa,MAAL,GAAcmE,YAAd,GAA6BO,kBAAjD;EACAvF,QAAAA,IAAI,CAAC2K,mBAAL,GAA2B,CAAC,EAA5B;EACH;EAED,aAAO3K,IAAP;EACH,KA5CD,CADJ;EAAA,GADiB,EA+CjB,CACI0J,QADJ,EAEI/E,UAFJ,EAGIkE,WAHJ,EAIIQ,WAJJ,EAKIE,QALJ,EAMIC,cANJ,EAOIpE,eAPJ,EAQIC,mBARJ,EASIE,kBATJ,EAUIP,YAVJ,CA/CiB,CAArB;EA6DA,MAAM1E,KAAK,GAAGC,iBAAQ,EAAtB;EACA,MAAMuK,QAAQ,GAAGC,+BAAoB,CAAC1G,MAAD,EAASE,OAAT,CAArC;EACA,MAAMyG,cAAc,GAAGC,4BAAiB,CAACzJ,WAAD,EAAclB,KAAd,CAAxC;EACA,MAAM4K,iBAAiB,GAAGD,4BAAiB,CAACjJ,cAAD,EAAiB1B,KAAjB,CAA3C;EACA,MAAM6K,uBAAuB,GAAGF,4BAAiB,CAAC5I,oBAAD,EAAuB/B,KAAvB,CAAjD;EAEA,MAAM8K,aAAa,GAAG1D,aAAO,CACzB;EAAA,WACIoC,KAAK,CAACf,GAAN,CAAU,UAAA/I,IAAI,EAAI;EACdA,MAAAA,IAAI,CAACyB,OAAL,GAAegD,WAAf;EACAzE,MAAAA,IAAI,CAACqL,aAAL,GAAqBlG,WAAW,IAAInF,IAAI,CAACa,MAAL,GAAcb,IAAI,CAACY,KAAlC,GAA0C,CAAC,EAA3C,GAAgD,CAArE;EACAZ,MAAAA,IAAI,CAACuB,KAAL,GAAauJ,QAAQ,CAAC9K,IAAD,CAArB;EACAA,MAAAA,IAAI,CAACwB,WAAL,GAAmBwJ,cAAc,CAAChL,IAAD,CAAjC;EACAA,MAAAA,IAAI,CAACgC,cAAL,GAAsBkJ,iBAAiB,CAAClL,IAAD,CAAvC;EACAA,MAAAA,IAAI,CAACqC,oBAAL,GAA4B8I,uBAAuB,CAACnL,IAAD,CAAnD;EAEA,aAAOA,IAAP;EACH,KATD,CADJ;EAAA,GADyB,EAYzB,CACI8J,KADJ,EAEIgB,QAFJ,EAGIrG,WAHJ,EAIIuG,cAJJ,EAKIE,iBALJ,EAMIC,uBANJ,EAOIhG,WAPJ,CAZyB,CAA7B;EAuBA,SAAO;EACHmD,IAAAA,SAAS,EAATA,SADG;EAEHwB,IAAAA,KAAK,EAAEsB,aAFJ;EAGH3B,IAAAA,MAAM,EAANA;EAHG,GAAP;EAKH,CArJM;EAuJA,IAAM6B,0BAA0B,GAAG,SAA7BA,0BAA6B,CACtCxB,KADsC,SAGrC;EAAA,MADCtE,aACD,SADCA,aACD;EAAA,MADgB9D,YAChB,SADgBA,YAChB;EAAA,MAD8BC,WAC9B,SAD8BA,WAC9B;EAAA,MAD2CC,YAC3C,SAD2CA,YAC3C;EAAA,MADyDC,OACzD,SADyDA,OACzD;EAAA,MADkE4D,OAClE,SADkEA,OAClE;EAAA,oBAC6C8F,sBAAU,EADvD;EAAA,MACOC,oBADP,eACOA,oBADP;EAAA,MAC6BC,WAD7B,eAC6BA,WAD7B;EAGD,MAAMC,WAAW,GAAGC,iBAAW,CAC3B,UAAC3L,IAAD,EAAO4L,KAAP,EAAiB;EACbJ,IAAAA,oBAAoB,EAChBxK,6BAACoG,oBAAD;EAAoB,MAAA,IAAI,EAAEpH,IAA1B;EAAgC,MAAA,OAAO,EAAEyF;EAAzC,MADgB,EAEhBmG,KAFgB,EAGhB,MAHgB,CAApB;EAKH,GAP0B,EAQ3B,CAACJ,oBAAD,EAAuB/F,OAAvB,CAR2B,CAA/B;EAWA,MAAMoG,gBAAgB,GAAGF,iBAAW,CAChC,UAAC3L,IAAD,EAAO4L,KAAP,EAAiB;EACbF,IAAAA,WAAW,CAAC1L,IAAD,EAAO4L,KAAP,CAAX;EACAlK,IAAAA,YAAY,IAAIA,YAAY,CAAC1B,IAAD,EAAO4L,KAAP,CAA5B;EACH,GAJ+B,EAKhC,CAAClK,YAAD,EAAegK,WAAf,CALgC,CAApC;EAQA,MAAMI,eAAe,GAAGH,iBAAW,CAC/B,UAAC3L,IAAD,EAAO4L,KAAP,EAAiB;EACbF,IAAAA,WAAW,CAAC1L,IAAD,EAAO4L,KAAP,CAAX;EACAjK,IAAAA,WAAW,IAAIA,WAAW,CAAC3B,IAAD,EAAO4L,KAAP,CAA1B;EACH,GAJ8B,EAK/B,CAACjK,WAAD,EAAc+J,WAAd,CAL+B,CAAnC;EAQA,MAAMK,gBAAgB,GAAGJ,iBAAW,CAChC,UAAC3L,IAAD,EAAO4L,KAAP,EAAiB;EACbH,IAAAA,WAAW;EACX7J,IAAAA,YAAY,IAAIA,YAAY,CAAC5B,IAAD,EAAO4L,KAAP,CAA5B;EACH,GAJ+B,EAKhC,CAAChK,YAAD,EAAe6J,WAAf,CALgC,CAApC;EAQA,MAAMO,WAAW,GAAGL,iBAAW,CAC3B,UAAC3L,IAAD,EAAO4L,KAAP,EAAiB;EACb/J,IAAAA,OAAO,IAAIA,OAAO,CAAC7B,IAAD,EAAO4L,KAAP,CAAlB;EACH,GAH0B,EAI3B,CAAC/J,OAAD,CAJ2B,CAA/B;EAOA,SAAO6F,aAAO,CAAC,YAAM;EACjB,WAAOoC,KAAK,CAACf,GAAN,CAAU,UAAA/I,IAAI,EAAI;EACrB,UAAI,CAACwF,aAAL,EAAoB,OAAOxF,IAAP;EAEpB,+CACOA,IADP;EAEI0B,QAAAA,YAAY,EAAE,sBAAAkK,KAAK;EAAA,iBAAIC,gBAAgB,CAAC7L,IAAD,EAAO4L,KAAP,CAApB;EAAA,SAFvB;EAGIjK,QAAAA,WAAW,EAAE,qBAAAiK,KAAK;EAAA,iBAAIE,eAAe,CAAC9L,IAAD,EAAO4L,KAAP,CAAnB;EAAA,SAHtB;EAIIhK,QAAAA,YAAY,EAAE,sBAAAgK,KAAK;EAAA,iBAAIG,gBAAgB,CAAC/L,IAAD,EAAO4L,KAAP,CAApB;EAAA,SAJvB;EAKI/J,QAAAA,OAAO,EAAE,iBAAA+J,KAAK;EAAA,iBAAII,WAAW,CAAChM,IAAD,EAAO4L,KAAP,CAAf;EAAA;EALlB;EAOH,KAVM,CAAP;EAWH,GAZa,EAYX,CAAC9B,KAAD,EAAQ+B,gBAAR,EAA0BC,eAA1B,EAA2CC,gBAA3C,EAA6DC,WAA7D,CAZW,CAAd;EAaH,CA7DM;;EC5MP,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAjM,IAAI,EAAI;EACjC,SAAO;EACHkB,IAAAA,SAAS,sBAAelB,IAAI,CAACkK,CAApB,cAAyBlK,IAAI,CAACoK,CAA9B,MADN;EAEHnH,IAAAA,aAAa,sBAAejD,IAAI,CAACkK,CAApB,gBAA2BlK,IAAI,CAACoK,CAAhC,QAFV;EAGHlI,IAAAA,YAAY,EAAE,CAHX;EAIHC,IAAAA,cAAc,sBAAenC,IAAI,CAACY,KAAL,GAAa,CAA5B,cAAiCZ,IAAI,CAACa,MAAL,GAAc,CAA/C,sBACVb,IAAI,CAACqL,aADK,MAJX;EAOH3H,IAAAA,kBAAkB,sBAAe1D,IAAI,CAACY,KAAL,GAAa,CAA5B,gBAAmCZ,IAAI,CAACa,MAAL,GAAc,CAAjD,wBACdb,IAAI,CAACqL,aADS,SAPf;EAUH/I,IAAAA,kBAAkB,EAAE,CAVjB;EAWHC,IAAAA,oBAAoB,sBAAevC,IAAI,CAAC4K,YAApB,cAAoC5K,IAAI,CAAC6K,YAAzC,sBAAiE7K,IAAI,CAAC2K,mBAAtE,MAXjB;EAYHhH,IAAAA,wBAAwB,sBACpB3D,IAAI,CAAC4K,YAAL,IAAqB5K,IAAI,CAAC2K,mBAAL,KAA6B,CAA7B,GAAiC,CAAjC,GAAqC,CAA1D,CADoB,gBAElB3K,IAAI,CAAC6K,YAAL,IAAqB7K,IAAI,CAAC2K,mBAAL,KAA6B,CAA7B,GAAiC,CAAjC,GAAqC,CAA1D,CAFkB,wBAGpB3K,IAAI,CAAC2K,mBAHe,SAZrB;EAiBH/J,IAAAA,KAAK,EAAEZ,IAAI,CAACY,KAjBT;EAkBHC,IAAAA,MAAM,EAAEb,IAAI,CAACa,MAlBV;EAmBHU,IAAAA,KAAK,EAAEvB,IAAI,CAACuB;EAnBT,GAAP;EAqBH,CAtBD;EAwBA,IAAM2K,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAAlM,IAAI,EAAI;EACvC,MAAMkK,CAAC,GAAGlK,IAAI,CAACkK,CAAL,GAASlK,IAAI,CAACY,KAAL,GAAa,CAAhC;EACA,MAAMwJ,CAAC,GAAGpK,IAAI,CAACoK,CAAL,GAASpK,IAAI,CAACa,MAAL,GAAc,CAAjC;EAEA,SAAO;EACHK,IAAAA,SAAS,sBAAegJ,CAAf,cAAoBE,CAApB,MADN;EAEH+B,IAAAA,eAAe,sBAAejC,CAAf,gBAAsBE,CAAtB,QAFZ;EAGHlI,IAAAA,YAAY,EAAE,CAHX;EAIHC,IAAAA,cAAc,kCAA2BnC,IAAI,CAACqL,aAAhC,MAJX;EAKH/I,IAAAA,kBAAkB,EAAE,CALjB;EAMHC,IAAAA,oBAAoB,kCAA2BvC,IAAI,CAAC2K,mBAAhC,MANjB;EAOHhH,IAAAA,wBAAwB,sCAA+B3D,IAAI,CAAC2K,mBAApC,SAPrB;EAQH/J,IAAAA,KAAK,EAAE,CARJ;EASHC,IAAAA,MAAM,EAAE,CATL;EAUHU,IAAAA,KAAK,EAAEvB,IAAI,CAACuB;EAVT,GAAP;EAYH,CAhBD;EAkBA,IAAM6K,YAAY,GAAG,SAAfA,YAAe,OAaf;EAAA,MAZFtC,KAYE,QAZFA,KAYE;EAAA,MAXFnE,aAWE,QAXFA,aAWE;EAAA,MAVFzF,WAUE,QAVFA,WAUE;EAAA,MATFC,WASE,QATFA,WASE;EAAA,MARFE,aAQE,QARFA,aAQE;EAAA,MAPFD,iBAOE,QAPFA,iBAOE;EAAA,MANFoF,aAME,QANFA,aAME;EAAA,MALF9D,YAKE,QALFA,YAKE;EAAA,MAJFC,WAIE,QAJFA,WAIE;EAAA,MAHFC,YAGE,QAHFA,YAGE;EAAA,MAFFC,OAEE,QAFFA,OAEE;EAAA,MADF4D,OACE,QADFA,OACE;EACF,MAAM4G,gBAAgB,GAAGf,0BAA0B,CAACxB,KAAD,EAAQ;EACvDtE,IAAAA,aAAa,EAAbA,aADuD;EAEvD9D,IAAAA,YAAY,EAAZA,YAFuD;EAGvDC,IAAAA,WAAW,EAAXA,WAHuD;EAIvDC,IAAAA,YAAY,EAAZA,YAJuD;EAKvDC,IAAAA,OAAO,EAAPA,OALuD;EAMvD4D,IAAAA,OAAO,EAAPA;EANuD,GAAR,CAAnD;EADE,yBAUwC6G,wBAAe,EAVvD;EAAA,MAUMhG,OAVN,oBAUMA,OAVN;EAAA,MAUuBiG,YAVvB,oBAUeC,MAVf;EAWF,MAAMC,WAAW,GAAGC,yBAAa,CAACL,gBAAD,EAAmB,UAAArM,IAAI;EAAA,WAAIA,IAAI,CAAC2C,IAAT;EAAA,GAAvB,EAAsC;EACnEgK,IAAAA,OAAO,EAAE,iBAAA3M,IAAI;EAAA,aAAIiM,oBAAoB,CAACjM,IAAD,CAAxB;EAAA,KADsD;EAEnEoG,IAAAA,IAAI,EAAE,cAAApG,IAAI;EAAA,aAAIkM,0BAA0B,CAAClM,IAAD,CAA9B;EAAA,KAFyD;EAGnE4M,IAAAA,KAAK,EAAE,eAAA5M,IAAI;EAAA,aAAIiM,oBAAoB,CAACjM,IAAD,CAAxB;EAAA,KAHwD;EAInE6M,IAAAA,MAAM,EAAE,gBAAA7M,IAAI;EAAA,aAAIiM,oBAAoB,CAACjM,IAAD,CAAxB;EAAA,KAJuD;EAKnE8M,IAAAA,KAAK,EAAE,eAAA9M,IAAI;EAAA,aAAIkM,0BAA0B,CAAClM,IAAD,CAA9B;EAAA,KALwD;EAMnEwM,IAAAA,MAAM,EAAED,YAN2D;EAOnEQ,IAAAA,SAAS,EAAE,CAACzG;EAPuD,GAAtC,CAAjC;EAUA,SAAOmG,WAAW,CAAC1D,GAAZ,CAAgB,iBAA+C;EAAA,QAAtC/I,IAAsC,SAA5CgN,IAA4C;EAAA,QAAzB/M,aAAyB,SAAhCgN,KAAgC;EAAA,QAAVC,GAAU,SAAVA,GAAU;EAClE,WAAOlM,cAAK,CAACmM,aAAN,CAAoBxH,aAApB,EAAmC;EACtCuH,MAAAA,GAAG,EAAHA,GADsC;EAEtClN,MAAAA,IAAI,EAAJA,IAFsC;EAGtCC,MAAAA,aAAa,EAAbA,aAHsC;EAItCC,MAAAA,WAAW,EAAXA,WAJsC;EAKtCC,MAAAA,WAAW,EAAXA,WALsC;EAMtCE,MAAAA,aAAa,EAAbA,aANsC;EAOtCD,MAAAA,iBAAiB,EAAjBA;EAPsC,KAAnC,CAAP;EASH,GAVM,CAAP;EAWH,CA7CD;AA8DA,uBAAeqC,UAAI,CAAC2J,YAAD,CAAnB;;ECxGA,IAAMgB,OAAO,GAAG,SAAVA,OAAU,OAsCV;EAAA,MArCFnE,IAqCE,QArCFA,IAqCE;EAAA,MApCFpF,QAoCE,QApCFA,QAoCE;EAAA,MAnCFM,KAmCE,QAnCFA,KAmCE;EAAA,MAlCFU,IAkCE,QAlCFA,IAkCE;EAAA,MAjCFc,aAiCE,QAjCFA,aAiCE;EAAA,MAhCFvB,WAgCE,QAhCFA,WAgCE;EAAA,MA/BFW,YA+BE,QA/BFA,YA+BE;EAAA,MA9BFC,YA8BE,QA9BFA,YA8BE;EAAA,MA7BFL,UA6BE,QA7BFA,UA6BE;EAAA,MA5BF/D,KA4BE,QA5BFA,KA4BE;EAAA,MA3BFC,MA2BE,QA3BFA,MA2BE;EAAA,MA1BMwM,aA0BN,QA1BFC,MA0BE;EAAA,MAzBFjJ,MAyBE,QAzBFA,MAyBE;EAAA,MAxBFE,OAwBE,QAxBFA,OAwBE;EAAA,MAvBFE,WAuBE,QAvBFA,WAuBE;EAAA,MAtBFvE,WAsBE,QAtBFA,WAsBE;EAAA,MArBFsB,WAqBE,QArBFA,WAqBE;EAAA,MApBFiF,IAoBE,QApBFA,IAoBE;EAAA,MAnBFnF,IAmBE,QAnBFA,IAmBE;EAAA,MAlBFnB,WAkBE,QAlBFA,WAkBE;EAAA,MAjBFiC,KAiBE,QAjBFA,KAiBE;EAAA,MAhBFJ,cAgBE,QAhBFA,cAgBE;EAAA,MAfFmD,WAeE,QAfFA,WAeE;EAAA,MAdF9E,aAcE,QAdFA,aAcE;EAAA,MAbFD,iBAaE,QAbFA,iBAaE;EAAA,MAZFoC,WAYE,QAZFA,WAYE;EAAA,MAXF4C,eAWE,QAXFA,eAWE;EAAA,MAVFC,mBAUE,QAVFA,mBAUE;EAAA,MATFE,kBASE,QATFA,kBASE;EAAA,MARFlD,oBAQE,QARFA,oBAQE;EAAA,MAPFmD,aAOE,QAPFA,aAOE;EAAA,MANF9D,YAME,QANFA,YAME;EAAA,MALFC,WAKE,QALFA,WAKE;EAAA,MAJFC,YAIE,QAJFA,YAIE;EAAA,MAHFC,OAGE,QAHFA,OAGE;EAAA,MAFF4D,OAEE,QAFFA,OAEE;EAAA,MADFI,IACE,QADFA,IACE;EAAA,uBACmE0H,sBAAa,CAC9E3M,KAD8E,EAE9EC,MAF8E,EAG9EwM,aAH8E,CADhF;EAAA,MACMC,MADN,kBACMA,MADN;EAAA,MACcE,UADd,kBACcA,UADd;EAAA,MAC0BC,WAD1B,kBAC0BA,WAD1B;EAAA,MACuCC,UADvC,kBACuCA,UADvC;EAAA,MACmDC,WADnD,kBACmDA,WADnD;EAAA,oBAOgBvE,UAAU,CAAC;EACzBH,IAAAA,IAAI,EAAJA,IADyB;EAEzBpF,IAAAA,QAAQ,EAARA,QAFyB;EAGzBM,IAAAA,KAAK,EAALA,KAHyB;EAIzBC,IAAAA,WAAW,EAAXA,WAJyB;EAKzBO,IAAAA,UAAU,EAAVA,UALyB;EAMzB/D,IAAAA,KAAK,EAAE4M,UANkB;EAOzB3M,IAAAA,MAAM,EAAE4M,WAPiB;EAQzB5I,IAAAA,IAAI,EAAJA,IARyB;EASzBE,IAAAA,YAAY,EAAZA,YATyB;EAUzBC,IAAAA,YAAY,EAAZA,YAVyB;EAWzBX,IAAAA,MAAM,EAANA,MAXyB;EAYzBE,IAAAA,OAAO,EAAPA,OAZyB;EAazBE,IAAAA,WAAW,EAAXA,WAbyB;EAczBjD,IAAAA,WAAW,EAAXA,WAdyB;EAezBY,IAAAA,KAAK,EAALA,KAfyB;EAgBzBJ,IAAAA,cAAc,EAAdA,cAhByB;EAiBzBmD,IAAAA,WAAW,EAAXA,WAjByB;EAkBzB/E,IAAAA,iBAAiB,EAAjBA,iBAlByB;EAmBzBoC,IAAAA,WAAW,EAAXA,WAnByB;EAoBzB4C,IAAAA,eAAe,EAAfA,eApByB;EAqBzBC,IAAAA,mBAAmB,EAAnBA,mBArByB;EAsBzBE,IAAAA,kBAAkB,EAAlBA,kBAtByB;EAuBzBlD,IAAAA,oBAAoB,EAApBA;EAvByB,GAAD,CAP1B;EAAA,MAOMyH,KAPN,eAOMA,KAPN;EAiCF,MAAM8D,SAAS,GAAGC,iBAAQ,CAACpH,IAAD,EAAOqD,KAAP,EAAcxI,IAAd,CAA1B;EAEA,SACIN,6BAAC8M,mBAAD;EACI,IAAA,KAAK,EAAEJ,UADX;EAEI,IAAA,MAAM,EAAEC,WAFZ;EAGI,IAAA,MAAM,EAAEL,MAHZ;EAII,IAAA,IAAI,EAAEM,SAJV;EAKI,IAAA,IAAI,EAAE/H;EALV,KAOI7E,6BAACoL,cAAD;EACI,IAAA,KAAK,EAAEtC,KADX;EAEI,IAAA,aAAa,EAAEnE,aAFnB;EAGI,IAAA,WAAW,EAAEzF,WAHjB;EAII,IAAA,WAAW,EAAEC,WAJjB;EAKI,IAAA,aAAa,EAAEE,aALnB;EAMI,IAAA,iBAAiB,EAAED,iBANvB;EAOI,IAAA,aAAa,EAAEoF,aAPnB;EAQI,IAAA,YAAY,EAAE9D,YARlB;EASI,IAAA,WAAW,EAAEC,WATjB;EAUI,IAAA,YAAY,EAAEC,YAVlB;EAWI,IAAA,OAAO,EAAEC,OAXb;EAYI,IAAA,OAAO,EAAE4D;EAZb,IAPJ,CADJ;EAwBH,CAjGD;MAqGMsI,cAAc,GAAGC,sBAAa,CAACZ,OAAD;EACpCW,cAAc,CAACE,YAAf,GAA8BzH,mBAA9B;;MCxGM0H,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAjB,KAAK;EAAA,SAC3BjM,6BAACmN,0BAAD,QACK;EAAA,QAAGvN,KAAH,QAAGA,KAAH;EAAA,QAAUC,MAAV,QAAUA,MAAV;EAAA,wCAAwBuM,cAAD;EAAS,MAAA,KAAK,EAAExM,KAAhB;EAAuB,MAAA,MAAM,EAAEC;EAA/B,OAA2CoM,KAA3C,EAAvB;EAAA,GADL,CAD2B;EAAA;;ECE/B,IAAMmB,WAAW,GAAG,SAAdA,WAAc,OAmCd;EAAA,MAlCFnF,IAkCE,QAlCFA,IAkCE;EAAA,MAjCFpF,QAiCE,QAjCFA,QAiCE;EAAA,MAhCFM,KAgCE,QAhCFA,KAgCE;EAAA,MA/BFU,IA+BE,QA/BFA,IA+BE;EAAA,MA9BFc,aA8BE,QA9BFA,aA8BE;EAAA,MA7BFvB,WA6BE,QA7BFA,WA6BE;EAAA,MA5BFW,YA4BE,QA5BFA,YA4BE;EAAA,MA3BFC,YA2BE,QA3BFA,YA2BE;EAAA,MA1BFL,UA0BE,QA1BFA,UA0BE;EAAA,MAzBF/D,KAyBE,QAzBFA,KAyBE;EAAA,MAxBFC,MAwBE,QAxBFA,MAwBE;EAAA,MAvBMwM,aAuBN,QAvBFC,MAuBE;EAAA,MAtBFjJ,MAsBE,QAtBFA,MAsBE;EAAA,MArBFE,OAqBE,QArBFA,OAqBE;EAAA,MApBFE,WAoBE,QApBFA,WAoBE;EAAA,MAnBFvE,WAmBE,QAnBFA,WAmBE;EAAA,MAlBFsB,WAkBE,QAlBFA,WAkBE;EAAA,MAjBFrB,WAiBE,QAjBFA,WAiBE;EAAA,MAhBFiC,KAgBE,QAhBFA,KAgBE;EAAA,MAfFJ,cAeE,QAfFA,cAeE;EAAA,MAdFmD,WAcE,QAdFA,WAcE;EAAA,MAbF9E,aAaE,QAbFA,aAaE;EAAA,MAZFD,iBAYE,QAZFA,iBAYE;EAAA,MAXFoC,WAWE,QAXFA,WAWE;EAAA,MAVF4C,eAUE,QAVFA,eAUE;EAAA,MATFC,mBASE,QATFA,mBASE;EAAA,MARFE,kBAQE,QARFA,kBAQE;EAAA,MAPFlD,oBAOE,QAPFA,oBAOE;EAAA,MANFmD,aAME,QANFA,aAME;EAAA,MALF9D,YAKE,QALFA,YAKE;EAAA,MAJFC,WAIE,QAJFA,WAIE;EAAA,MAHFC,YAGE,QAHFA,YAGE;EAAA,MAFFC,OAEE,QAFFA,OAEE;EAAA,MADF4D,OACE,QADFA,OACE;EAAA,uBACmE8H,sBAAa,CAC9E3M,KAD8E,EAE9EC,MAF8E,EAG9EwM,aAH8E,CADhF;EAAA,MACMC,MADN,kBACMA,MADN;EAAA,MACcE,UADd,kBACcA,UADd;EAAA,MAC0BC,WAD1B,kBAC0BA,WAD1B;EAAA,MACuCC,UADvC,kBACuCA,UADvC;EAAA,MACmDC,WADnD,kBACmDA,WADnD;EAAA,oBAOgBvE,UAAU,CAAC;EACzBH,IAAAA,IAAI,EAAJA,IADyB;EAEzBpF,IAAAA,QAAQ,EAARA,QAFyB;EAGzBM,IAAAA,KAAK,EAALA,KAHyB;EAIzBC,IAAAA,WAAW,EAAXA,WAJyB;EAKzBO,IAAAA,UAAU,EAAVA,UALyB;EAMzB/D,IAAAA,KAAK,EAAE4M,UANkB;EAOzB3M,IAAAA,MAAM,EAAE4M,WAPiB;EAQzB5I,IAAAA,IAAI,EAAJA,IARyB;EASzBE,IAAAA,YAAY,EAAZA,YATyB;EAUzBC,IAAAA,YAAY,EAAZA,YAVyB;EAWzBX,IAAAA,MAAM,EAANA,MAXyB;EAYzBE,IAAAA,OAAO,EAAPA,OAZyB;EAazBE,IAAAA,WAAW,EAAXA,WAbyB;EAczBjD,IAAAA,WAAW,EAAXA,WAdyB;EAezBY,IAAAA,KAAK,EAALA,KAfyB;EAgBzBJ,IAAAA,cAAc,EAAdA,cAhByB;EAiBzBmD,IAAAA,WAAW,EAAXA,WAjByB;EAkBzB/E,IAAAA,iBAAiB,EAAjBA,iBAlByB;EAmBzBoC,IAAAA,WAAW,EAAXA,WAnByB;EAoBzB4C,IAAAA,eAAe,EAAfA,eApByB;EAqBzBC,IAAAA,mBAAmB,EAAnBA,mBArByB;EAsBzBE,IAAAA,kBAAkB,EAAlBA,kBAtByB;EAuBzBlD,IAAAA,oBAAoB,EAApBA;EAvByB,GAAD,CAP1B;EAAA,MAOMyH,KAPN,eAOMA,KAPN;EAiCF;EAEQ,IAAA,KAAK,EAAE;EACHhH,MAAAA,QAAQ,EAAE,UADP;EAEHlC,MAAAA,KAAK,EAAE8M,UAFJ;EAGH7M,MAAAA,MAAM,EAAE8M;EAHL;EADX;EAOS,IAAA,KAAK,EAAE;EAAE7K,MAAAA,QAAQ,EAAE,UAAZ;EAAwBC,MAAAA,GAAG,EAAEuK,MAAM,CAACvK,GAApC;EAAyCC,MAAAA,IAAI,EAAEsK,MAAM,CAACtK;EAAtD;EAAZ,KACIhC,6BAACoL,cAAD;EACI,IAAA,KAAK,EAAEtC,KADX;EAEI,IAAA,aAAa,EAAEnE,aAFnB;EAGI,IAAA,WAAW,EAAEzF,WAHjB;EAII,IAAA,WAAW,EAAEC,WAJjB;EAKI,IAAA,aAAa,EAAEE,aALnB;EAMI,IAAA,iBAAiB,EAAED,iBANvB;EAOI,IAAA,aAAa,EAAEoF,aAPnB;EAQI,IAAA,YAAY,EAAE9D,YARlB;EASI,IAAA,WAAW,EAAEC,WATjB;EAUI,IAAA,YAAY,EAAEC,YAVlB;EAWI,IAAA,OAAO,EAAEC,OAXb;EAYI,IAAA,OAAO,EAAE4D;EAZb,IADJ,CAPJ,CADJ;EA0BH,CA9FD;MAkGM4I,kBAAkB,GAAGL,sBAAa,CAACI,WAAD;EACxCC,kBAAkB,CAACJ,YAAnB,GAAkCvH,uBAAlC;;MCrGM4H,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAArB,KAAK;EAAA,SAC/BjM,6BAACmN,0BAAD,QACK;EAAA,QAAGvN,KAAH,QAAGA,KAAH;EAAA,QAAUC,MAAV,QAAUA,MAAV;EAAA,WAAuBG,6BAACoN,kBAAD;EAAa,MAAA,KAAK,EAAExN,KAApB;EAA2B,MAAA,MAAM,EAAEC;EAAnC,OAA+CoM,KAA/C,EAAvB;EAAA,GADL,CAD+B;EAAA;;ECUnC,IAAMsB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACzE,KAAD,EAAQwD,MAAR,EAAgBpD,CAAhB,EAAmBE,CAAnB;EAAA,SACxBN,KAAK,CAAC0E,IAAN,CAAW,UAAAxO,IAAI;EAAA,WACXyO,uBAAc,CAACzO,IAAI,CAACkK,CAAL,GAASoD,MAAM,CAACtK,IAAjB,EAAuBhD,IAAI,CAACoK,CAAL,GAASkD,MAAM,CAACvK,GAAvC,EAA4C/C,IAAI,CAACY,KAAjD,EAAwDZ,IAAI,CAACa,MAA7D,EAAqEqJ,CAArE,EAAwEE,CAAxE,CADH;EAAA,GAAf,CADwB;EAAA,CAA5B;EAKA,IAAMsE,aAAa,GAAG,SAAhBA,aAAgB,OA2BhB;EAAA,MA1BFzF,IA0BE,QA1BFA,IA0BE;EAAA,MAzBFpF,QAyBE,QAzBFA,QAyBE;EAAA,MAxBFM,KAwBE,QAxBFA,KAwBE;EAAA,MAvBFU,IAuBE,QAvBFA,IAuBE;EAAA,MAtBFT,WAsBE,QAtBFA,WAsBE;EAAA,MArBFW,YAqBE,QArBFA,YAqBE;EAAA,MApBFC,YAoBE,QApBFA,YAoBE;EAAA,MAnBFL,UAmBE,QAnBFA,UAmBE;EAAA,MAlBF/D,KAkBE,QAlBFA,KAkBE;EAAA,MAjBFC,MAiBE,QAjBFA,MAiBE;EAAA,MAhBMwM,aAgBN,QAhBFC,MAgBE;EAAA,MAfFjJ,MAeE,QAfFA,MAeE;EAAA,MAdFE,OAcE,QAdFA,OAcE;EAAA,MAbFE,WAaE,QAbFA,WAaE;EAAA,MAZFvE,WAYE,QAZFA,WAYE;EAAA,MAXFsB,WAWE,QAXFA,WAWE;EAAA,MAVFrB,WAUE,QAVFA,WAUE;EAAA,MATFiC,KASE,QATFA,KASE;EAAA,MARFJ,cAQE,QARFA,cAQE;EAAA,MAPFmD,WAOE,QAPFA,WAOE;EAAA,MANF9E,aAME,QANFA,aAME;EAAA,MALFmF,aAKE,QALFA,aAKE;EAAA,MAJF7D,WAIE,QAJFA,WAIE;EAAA,MAHFE,OAGE,QAHFA,OAGE;EAAA,MAFF4D,OAEE,QAFFA,OAEE;EAAA,MADFQ,UACE,QADFA,UACE;EACF,MAAM0I,QAAQ,GAAGC,YAAM,CAAC,IAAD,CAAvB;EADE,uBAGmErB,sBAAa,CAC9E3M,KAD8E,EAE9EC,MAF8E,EAG9EwM,aAH8E,CAHhF;EAAA,MAGMC,MAHN,kBAGMA,MAHN;EAAA,MAGcE,UAHd,kBAGcA,UAHd;EAAA,MAG0BC,WAH1B,kBAG0BA,WAH1B;EAAA,MAGuCC,UAHvC,kBAGuCA,UAHvC;EAAA,MAGmDC,WAHnD,kBAGmDA,WAHnD;EAAA,oBASgBvE,UAAU,CAAC;EACzBH,IAAAA,IAAI,EAAJA,IADyB;EAEzBpF,IAAAA,QAAQ,EAARA,QAFyB;EAGzBM,IAAAA,KAAK,EAALA,KAHyB;EAIzBC,IAAAA,WAAW,EAAXA,WAJyB;EAKzBO,IAAAA,UAAU,EAAVA,UALyB;EAMzB/D,IAAAA,KAAK,EAAE4M,UANkB;EAOzB3M,IAAAA,MAAM,EAAE4M,WAPiB;EAQzB5I,IAAAA,IAAI,EAAJA,IARyB;EASzBE,IAAAA,YAAY,EAAZA,YATyB;EAUzBC,IAAAA,YAAY,EAAZA,YAVyB;EAWzBX,IAAAA,MAAM,EAANA,MAXyB;EAYzBE,IAAAA,OAAO,EAAPA,OAZyB;EAazBE,IAAAA,WAAW,EAAXA,WAbyB;EAczBjD,IAAAA,WAAW,EAAXA,WAdyB;EAezBY,IAAAA,KAAK,EAALA,KAfyB;EAgBzBJ,IAAAA,cAAc,EAAdA,cAhByB;EAiBzBmD,IAAAA,WAAW,EAAXA,WAjByB;EAkBzB/E,IAAAA,iBAAiB,EAAE;EAlBM,GAAD,CAT1B;EAAA,MASM0J,KATN,eASMA,KATN;EA8BF,MAAMxJ,KAAK,GAAGC,iBAAQ,EAAtB;EAEAsO,EAAAA,eAAS,CAAC,YAAM;EACZF,IAAAA,QAAQ,CAACG,OAAT,CAAiBlO,KAAjB,GAAyB8M,UAAU,GAAGzH,UAAtC;EACA0I,IAAAA,QAAQ,CAACG,OAAT,CAAiBjO,MAAjB,GAA0B8M,WAAW,GAAG1H,UAAxC;EAEA,QAAM8I,GAAG,GAAGJ,QAAQ,CAACG,OAAT,CAAiBE,UAAjB,CAA4B,IAA5B,CAAZ;EAEAD,IAAAA,GAAG,CAACE,KAAJ,CAAUhJ,UAAV,EAAsBA,UAAtB;EAEA8I,IAAAA,GAAG,CAACG,SAAJ,GAAgB5O,KAAK,CAAC8C,UAAtB;EACA2L,IAAAA,GAAG,CAACI,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBzB,UAAnB,EAA+BC,WAA/B;EACAoB,IAAAA,GAAG,CAACK,SAAJ,CAAc9B,MAAM,CAACtK,IAArB,EAA2BsK,MAAM,CAACvK,GAAlC;EAEA+G,IAAAA,KAAK,CAACuF,OAAN,CAAc,UAAArP,IAAI,EAAI;EAClB+O,MAAAA,GAAG,CAACG,SAAJ,GAAgBlP,IAAI,CAACuB,KAArB;EACAwN,MAAAA,GAAG,CAACI,QAAJ,CAAanP,IAAI,CAACkK,CAAlB,EAAqBlK,IAAI,CAACoK,CAA1B,EAA6BpK,IAAI,CAACY,KAAlC,EAAyCZ,IAAI,CAACa,MAA9C;EAEA,UAAIX,WAAW,GAAG,CAAlB,EAAqB;EACjB6O,QAAAA,GAAG,CAACO,WAAJ,GAAkBtP,IAAI,CAACwB,WAAvB;EACAuN,QAAAA,GAAG,CAACQ,SAAJ,GAAgBrP,WAAhB;EACA6O,QAAAA,GAAG,CAACS,UAAJ,CAAexP,IAAI,CAACkK,CAApB,EAAuBlK,IAAI,CAACoK,CAA5B,EAA+BpK,IAAI,CAACY,KAApC,EAA2CZ,IAAI,CAACa,MAAhD;EACH;EACJ,KATD;EAWA,QAAIV,WAAJ,EAAiB;EACb4O,MAAAA,GAAG,CAACU,SAAJ,GAAgB,QAAhB;EACAV,MAAAA,GAAG,CAACW,YAAJ,GAAmB,QAAnB;EACAX,MAAAA,GAAG,CAACY,IAAJ,aAAcrP,KAAK,CAACwB,MAAN,CAAaC,IAAb,CAAkB6N,QAAhC,gBAA8CtP,KAAK,CAACwB,MAAN,CAAaC,IAAb,CAAkB8N,UAAhE;EAEA/F,MAAAA,KAAK,CAACuF,OAAN,CAAc,UAAArP,IAAI,EAAI;EAClB,YAAMQ,SAAS,GACXR,IAAI,CAACS,MAAL,KACCJ,aAAa,KAAK,CAAlB,IAAuBK,IAAI,CAACC,GAAL,CAASX,IAAI,CAACY,KAAd,EAAqBZ,IAAI,CAACa,MAA1B,IAAoCR,aAD5D,CADJ;EAIA,YAAI,CAACG,SAAL,EAAgB;EAEhB,YAAMsP,MAAM,GAAG3K,WAAW,IAAInF,IAAI,CAACa,MAAL,GAAcb,IAAI,CAACY,KAAjD;EAEAmO,QAAAA,GAAG,CAACgB,IAAJ;EACAhB,QAAAA,GAAG,CAACK,SAAJ,CAAcpP,IAAI,CAACkK,CAAL,GAASlK,IAAI,CAACY,KAAL,GAAa,CAApC,EAAuCZ,IAAI,CAACoK,CAAL,GAASpK,IAAI,CAACa,MAAL,GAAc,CAA9D;EACAkO,QAAAA,GAAG,CAACe,MAAJ,CAAWE,yBAAgB,CAACF,MAAM,GAAG,CAAC,EAAJ,GAAS,CAAhB,CAA3B;EAEAf,QAAAA,GAAG,CAACG,SAAJ,GAAgBlP,IAAI,CAACgC,cAArB;EACA+M,QAAAA,GAAG,CAACkB,QAAJ,CAAajQ,IAAI,CAACoC,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B;EAEA2M,QAAAA,GAAG,CAACmB,OAAJ;EACH,OAjBD;EAkBH;EACJ,GA/CQ,EA+CN,CACCvB,QADD,EAEC7E,KAFD,EAGC4D,UAHD,EAICC,WAJD,EAKCH,UALD,EAMCC,WAND,EAOCH,MAPD,EAQCpN,WARD,EASCC,WATD,EAUCgF,WAVD,EAWC9E,aAXD,EAYCC,KAZD,EAaC2F,UAbD,CA/CM,CAAT;EAhCE,oBA+F4CsF,sBAAU,EA/FtD;EAAA,MA+FMC,oBA/FN,eA+FMA,oBA/FN;EAAA,MA+F4BC,WA/F5B,eA+F4BA,WA/F5B;EAiGF,MAAM0E,gBAAgB,GAAGxE,iBAAW,CAChC,UAAAC,KAAK,EAAI;EAAA,6BACUwE,0BAAiB,CAACzB,QAAQ,CAACG,OAAV,EAAmBlD,KAAnB,CAD3B;EAAA;EAAA,QACE1B,CADF;EAAA,QACKE,CADL;EAEL,QAAMpK,IAAI,GAAGuO,mBAAmB,CAACzE,KAAD,EAAQwD,MAAR,EAAgBpD,CAAhB,EAAmBE,CAAnB,CAAhC;EAEA,QAAIpK,IAAI,KAAKqQ,SAAb,EAAwB;EACpB7E,MAAAA,oBAAoB,+BACfpE,oBAAD;EAAoB,QAAA,IAAI,EAAEpH,IAA1B;EAAgC,QAAA,OAAO,EAAEyF;EAAzC,QADgB,EAEhBmG,KAFgB,EAGhB,MAHgB,CAApB;EAKAjK,MAAAA,WAAW,IAAIA,WAAW,CAAC3B,IAAD,EAAO4L,KAAP,CAA1B;EACH,KAPD,MAOO;EACHH,MAAAA,WAAW;EACd;EACJ,GAf+B,EAgBhC,CAACkD,QAAD,EAAW7E,KAAX,EAAkBwD,MAAlB,EAA0B9B,oBAA1B,EAAgDC,WAAhD,EAA6DhG,OAA7D,EAAsE9D,WAAtE,CAhBgC,CAApC;EAmBA,MAAMoK,gBAAgB,GAAGJ,iBAAW,CAAC,YAAM;EACvCF,IAAAA,WAAW;EACd,GAFmC,EAEjC,CAACA,WAAD,CAFiC,CAApC;EAIA,MAAMO,WAAW,GAAGL,iBAAW,CAC3B,UAAAC,KAAK,EAAI;EAAA,8BACUwE,0BAAiB,CAACzB,QAAQ,CAACG,OAAV,EAAmBlD,KAAnB,CAD3B;EAAA;EAAA,QACE1B,CADF;EAAA,QACKE,CADL;EAEL,QAAMpK,IAAI,GAAGuO,mBAAmB,CAACzE,KAAD,EAAQwD,MAAR,EAAgBpD,CAAhB,EAAmBE,CAAnB,CAAhC;EAEA,QAAIpK,IAAI,KAAKqQ,SAAb,EAAwB;EAExBxO,IAAAA,OAAO,IAAIA,OAAO,CAAC7B,IAAD,EAAO4L,KAAP,CAAlB;EACH,GAR0B,EAS3B,CAAC+C,QAAD,EAAW7E,KAAX,EAAkBwD,MAAlB,EAA0BzL,OAA1B,CAT2B,CAA/B;EAYA;EAEQ,IAAA,GAAG,EAAE8M,QADT;EAEI,IAAA,KAAK,EAAEjB,UAAU,GAAGzH,UAFxB;EAGI,IAAA,MAAM,EAAE0H,WAAW,GAAG1H,UAH1B;EAII,IAAA,KAAK,EAAE;EACHrF,MAAAA,KAAK,EAAE8M,UADJ;EAEH7M,MAAAA,MAAM,EAAE8M;EAFL,KAJX;EAQI,IAAA,YAAY,EAAEnI,aAAa,GAAG2K,gBAAH,GAAsBE,SARrD;EASI,IAAA,WAAW,EAAE7K,aAAa,GAAG2K,gBAAH,GAAsBE,SATpD;EAUI,IAAA,YAAY,EAAE7K,aAAa,GAAGuG,gBAAH,GAAsBsE,SAVrD;EAWI,IAAA,OAAO,EAAE7K,aAAa,GAAGwG,WAAH,GAAiBqE;EAX3C,IADJ;EAeH,CA9KD;MAkLMC,oBAAoB,GAAGtC,sBAAa,CAACU,aAAD;EAC1C4B,oBAAoB,CAACrC,YAArB,GAAoCtH,yBAApC;;MClMM4J,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAtD,KAAK;EAAA,SACjCjM,6BAACmN,0BAAD,QACK;EAAA,QAAGvN,KAAH,QAAGA,KAAH;EAAA,QAAUC,MAAV,QAAUA,MAAV;EAAA,wCAAwB6N,oBAAD;EAAe,MAAA,KAAK,EAAE9N,KAAtB;EAA6B,MAAA,MAAM,EAAEC;EAArC,OAAiDoM,KAAjD,EAAvB;EAAA,GADL,CADiC;EAAA;;;;;;;;;;;;;;;;;;;;;;;"}