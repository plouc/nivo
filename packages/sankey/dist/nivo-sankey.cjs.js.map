{"version":3,"file":"nivo-sankey.cjs.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/props.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/hooks.js","../src/SankeyNodesItem.js","../src/SankeyNodes.js","../src/SankeyLinkGradient.js","../src/SankeyLinksItem.js","../src/links.js","../src/SankeyLinks.js","../src/SankeyLabels.js","../src/Sankey.js","../src/ResponsiveSankey.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { sankeyCenter, sankeyJustify, sankeyLeft, sankeyRight } from 'd3-sankey'\nimport { noop, blendModePropType, motionPropTypes } from '@bitbloom/nivo-core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@bitbloom/nivo-colors'\nimport { LegendPropShape } from '@bitbloom/nivo-legends'\n\nexport const sankeyAlignmentPropMapping = {\n    center: sankeyCenter,\n    justify: sankeyJustify,\n    start: sankeyLeft,\n    end: sankeyRight,\n}\n\nexport const sankeyAlignmentPropKeys = Object.keys(sankeyAlignmentPropMapping)\n\nexport const sankeyAlignmentPropType = PropTypes.oneOf(sankeyAlignmentPropKeys)\n\nexport const sankeyAlignmentFromProp = prop => sankeyAlignmentPropMapping[prop]\n\nexport const SankeyPropTypes = {\n    data: PropTypes.shape({\n        nodes: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            })\n        ).isRequired,\n        links: PropTypes.arrayOf(\n            PropTypes.shape({\n                source: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n                target: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            })\n        ).isRequired,\n    }).isRequired,\n\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    align: sankeyAlignmentPropType.isRequired,\n    sort: PropTypes.oneOfType([\n        PropTypes.oneOf(['auto', 'input', 'ascending', 'descending']),\n        PropTypes.func,\n    ]).isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n\n    nodeOpacity: PropTypes.number.isRequired,\n    nodeHoverOpacity: PropTypes.number.isRequired,\n    nodeHoverOthersOpacity: PropTypes.number.isRequired,\n    nodeThickness: PropTypes.number.isRequired,\n    nodeSpacing: PropTypes.number.isRequired,\n    nodeInnerPadding: PropTypes.number.isRequired,\n    nodeBorderWidth: PropTypes.number.isRequired,\n    nodeBorderColor: inheritedColorPropType,\n\n    linkOpacity: PropTypes.number.isRequired,\n    linkHoverOpacity: PropTypes.number.isRequired,\n    linkHoverOthersOpacity: PropTypes.number.isRequired,\n    linkContract: PropTypes.number.isRequired,\n    linkBlendMode: blendModePropType.isRequired,\n    enableLinkGradient: PropTypes.bool.isRequired,\n\n    enableLabels: PropTypes.bool.isRequired,\n    labelPosition: PropTypes.oneOf(['inside', 'outside']).isRequired,\n    labelPadding: PropTypes.number.isRequired,\n    labelOrientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    labelTextColor: inheritedColorPropType,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n    nodeTooltip: PropTypes.func,\n    linkTooltip: PropTypes.func,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['links', 'nodes', 'labels', 'legends']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    role: PropTypes.string.isRequired,\n\n    ...motionPropTypes,\n}\n\nexport const SankeyDefaultProps = {\n    layout: 'horizontal',\n    align: 'center',\n    sort: 'auto',\n\n    colors: { scheme: 'nivo' },\n\n    nodeOpacity: 0.75,\n    nodeHoverOpacity: 1,\n    nodeHoverOthersOpacity: 0.15,\n    nodeThickness: 12,\n    nodeSpacing: 12,\n    nodeInnerPadding: 0,\n    nodeBorderWidth: 1,\n    nodeBorderColor: { from: 'color', modifiers: [['darker', 0.5]] },\n\n    linkOpacity: 0.25,\n    linkHoverOpacity: 0.6,\n    linkHoverOthersOpacity: 0.15,\n    linkContract: 0,\n    linkBlendMode: 'multiply',\n    enableLinkGradient: false,\n\n    enableLabels: true,\n    label: 'id',\n    labelPosition: 'inside',\n    labelPadding: 9,\n    labelOrientation: 'horizontal',\n    labelTextColor: { from: 'color', modifiers: [['darker', 0.8]] },\n\n    isInteractive: true,\n    onClick: noop,\n\n    legends: [],\n\n    layers: ['links', 'nodes', 'labels', 'legends'],\n\n    role: 'img',\n\n    animate: true,\n    motionConfig: 'gentle',\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { useState, useMemo } from 'react'\nimport { cloneDeep } from 'lodash'\nimport { sankey as d3Sankey } from 'd3-sankey'\nimport { useTheme, getLabelGenerator } from '@bitbloom/nivo-core'\nimport { useOrdinalColorScale, useInheritedColor } from '@bitbloom/nivo-colors'\nimport { sankeyAlignmentFromProp } from './props'\n\nconst getId = d => d.id\n\nexport const computeNodeAndLinks = ({\n    data: _data,\n    layout,\n    alignFunction,\n    sortFunction,\n    linkSortMode,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    width,\n    height,\n    getColor,\n    getLinkColor,\n    getLabel,\n}) => {\n    const sankey = d3Sankey()\n        .nodeAlign(alignFunction)\n        .nodeSort(sortFunction)\n        .linkSort(linkSortMode)\n        .nodeWidth(nodeThickness)\n        .nodePadding(nodeSpacing)\n        .size(layout === 'horizontal' ? [width, height] : [height, width])\n        .nodeId(getId)\n\n    // deep clone is required as the sankey diagram mutates data\n    // we need a different identity for correct updates\n    const data = cloneDeep(_data)\n    sankey(data)\n\n    data.nodes.forEach(node => {\n        node.color = getColor(node)\n        node.label = getLabel(node)\n        if (layout === 'horizontal') {\n            node.x = node.x0 + nodeInnerPadding\n            node.y = node.y0\n            node.width = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0)\n            node.height = Math.max(node.y1 - node.y0, 0)\n        } else {\n            node.x = node.y0\n            node.y = node.x0 + nodeInnerPadding\n            node.width = Math.max(node.y1 - node.y0, 0)\n            node.height = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0)\n\n            const oldX0 = node.x0\n            const oldX1 = node.x1\n\n            node.x0 = node.y0\n            node.x1 = node.y1\n            node.y0 = oldX0\n            node.y1 = oldX1\n        }\n    })\n\n    data.links.forEach(link => {\n        link.color = getLinkColor(link)\n        link.pos0 = link.y0\n        link.pos1 = link.y1\n        link.thickness = link.width\n        delete link.y0\n        delete link.y1\n        delete link.width\n    })\n\n    return data\n}\n\nexport const useSankey = ({\n    data,\n    layout,\n    width,\n    height,\n    sort,\n    align,\n    colors,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    nodeBorderColor,\n    label,\n    labelFormat,\n    labelTextColor,\n}) => {\n    const [currentNode, setCurrentNode] = useState(null)\n    const [currentLink, setCurrentLink] = useState(null)\n\n    const sortFunction = useMemo(() => {\n        if (sort === 'auto') return undefined\n        if (sort === 'input') return null\n        if (sort === 'ascending') return (a, b) => a.value - b.value\n        if (sort === 'descending') return (a, b) => b.value - a.value\n\n        return sort\n    }, [sort])\n\n    // If \"input\" sorting is used, apply this setting to links, too.\n    // (In d3, `null` means input sorting and `undefined` is the default)\n    const linkSortMode = sort === 'input' ? null : undefined\n\n    const alignFunction = useMemo(() => sankeyAlignmentFromProp(align), [align])\n\n    const theme = useTheme()\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getNodeBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkColor = useOrdinalColorScale(colors, 'source.id')\n\n    const getLabel = useMemo(() => getLabelGenerator(label, labelFormat), [label, labelFormat])\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n\n    const { nodes, links } = useMemo(\n        () =>\n            computeNodeAndLinks({\n                data,\n                layout,\n                alignFunction,\n                sortFunction,\n                linkSortMode,\n                nodeThickness,\n                nodeSpacing,\n                nodeInnerPadding,\n                width,\n                height,\n                getColor,\n                getLinkColor,\n                getLabel,\n            }),\n        [\n            data,\n            layout,\n            alignFunction,\n            sortFunction,\n            linkSortMode,\n            nodeThickness,\n            nodeSpacing,\n            nodeInnerPadding,\n            width,\n            height,\n            getColor,\n            getLinkColor,\n            getLabel,\n        ]\n    )\n\n    const legendData = useMemo(\n        () =>\n            nodes.map(node => ({\n                id: node.id,\n                label: node.label,\n                color: node.color,\n            })),\n        [nodes]\n    )\n\n    return {\n        nodes,\n        links,\n        legendData,\n        getNodeBorderColor,\n        currentNode,\n        setCurrentNode,\n        currentLink,\n        setCurrentLink,\n        getLabelTextColor,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig } from '@bitbloom/nivo-core'\nimport { BasicTooltip, useTooltip } from '@bitbloom/nivo-tooltip'\n\nconst SankeyNodesItem = ({\n    node,\n    x,\n    y,\n    width,\n    height,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    setCurrent,\n    isInteractive,\n    onClick,\n    tooltip,\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        width,\n        height,\n        opacity,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const tooltipContent = useMemo(() => {\n        if (tooltip) {\n            return <BasicTooltip id={tooltip(node)} enableChip={false} />\n        }\n\n        return <BasicTooltip id={node.label} enableChip={true} color={node.color} />\n    }, [tooltip, node])\n\n    const handleMouseEnter = useCallback(\n        event => {\n            setCurrent(node)\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [setCurrent, node, showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrent(null)\n        hideTooltip()\n    }, [setCurrent, hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            onClick(node, event)\n        },\n        [onClick, node]\n    )\n\n    return (\n        <animated.rect\n            x={animatedProps.x}\n            y={animatedProps.y}\n            width={animatedProps.width.interpolate(v => Math.max(v, 0))}\n            height={animatedProps.height.interpolate(v => Math.max(v, 0))}\n            fill={animatedProps.color}\n            fillOpacity={animatedProps.opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            strokeOpacity={opacity}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nSankeyNodesItem.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.func,\n}\n\nexport default memo(SankeyNodesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SankeyNodesItem from './SankeyNodesItem'\n\nconst SankeyNodes = ({\n    nodes,\n    nodeOpacity,\n    nodeHoverOpacity,\n    nodeHoverOthersOpacity,\n    nodeBorderWidth,\n    getNodeBorderColor,\n    setCurrentNode,\n    currentNode,\n    currentLink,\n    isCurrentNode,\n    isInteractive,\n    onClick,\n    tooltip,\n}) => {\n    const getOpacity = node => {\n        if (!currentNode && !currentLink) return nodeOpacity\n        if (isCurrentNode(node)) return nodeHoverOpacity\n        return nodeHoverOthersOpacity\n    }\n\n    return nodes.map(node => (\n        <SankeyNodesItem\n            key={node.id}\n            node={node}\n            x={node.x}\n            y={node.y}\n            width={node.width}\n            height={node.height}\n            color={node.color}\n            opacity={getOpacity(node)}\n            borderWidth={nodeBorderWidth}\n            borderColor={getNodeBorderColor(node)}\n            setCurrent={setCurrentNode}\n            isInteractive={isInteractive}\n            onClick={onClick}\n            tooltip={tooltip}\n        />\n    ))\n}\n\nSankeyNodes.propTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            width: PropTypes.number.isRequired,\n            height: PropTypes.number.isRequired,\n            color: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    nodeOpacity: PropTypes.number.isRequired,\n    nodeHoverOpacity: PropTypes.number.isRequired,\n    nodeHoverOthersOpacity: PropTypes.number.isRequired,\n    nodeBorderWidth: PropTypes.number.isRequired,\n    getNodeBorderColor: PropTypes.func.isRequired,\n    tooltip: PropTypes.func,\n    setCurrentNode: PropTypes.func.isRequired,\n    currentNode: PropTypes.object,\n    currentLink: PropTypes.object,\n    isCurrentNode: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nexport default memo(SankeyNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst SankeyLinkGradient = memo(({ id, layout, startColor, endColor }) => {\n    const gradientProps = {}\n    if (layout === 'horizontal') {\n        gradientProps.x1 = '0%'\n        gradientProps.x2 = '100%'\n        gradientProps.y1 = '0%'\n        gradientProps.y2 = '0%'\n    } else {\n        gradientProps.x1 = '0%'\n        gradientProps.x2 = '0%'\n        gradientProps.y1 = '0%'\n        gradientProps.y2 = '100%'\n    }\n\n    return (\n        <linearGradient id={id} spreadMethod=\"pad\" {...gradientProps}>\n            <stop offset=\"0%\" stopColor={startColor} />\n            <stop offset=\"100%\" stopColor={endColor} />\n        </linearGradient>\n    )\n})\n\nSankeyLinkGradient.propTypes = {\n    id: PropTypes.string.isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    startColor: PropTypes.string.isRequired,\n    endColor: PropTypes.string.isRequired,\n}\n\nSankeyLinkGradient.displayName = 'SankeyLinkGradient'\n\nexport default SankeyLinkGradient\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { blendModePropType, useMotionConfig } from '@bitbloom/nivo-core'\nimport { BasicTooltip, Chip, useTooltip } from '@bitbloom/nivo-tooltip'\nimport SankeyLinkGradient from './SankeyLinkGradient'\n\nconst tooltipStyles = {\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    sourceChip: {\n        marginRight: 7,\n    },\n    targetChip: {\n        marginLeft: 7,\n        marginRight: 7,\n    },\n}\n\nconst TooltipContent = ({ link, format }) => (\n    <span style={tooltipStyles.container}>\n        <Chip color={link.source.color} style={tooltipStyles.sourceChip} />\n        <strong>{link.source.label}</strong>\n        {' > '}\n        <strong>{link.target.label}</strong>\n        <Chip color={link.target.color} style={tooltipStyles.targetChip} />\n        <strong>{format ? format(link.value) : link.value}</strong>\n    </span>\n)\n\nTooltipContent.propTypes = {\n    link: PropTypes.shape({\n        source: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        target: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        color: PropTypes.string.isRequired,\n        value: PropTypes.number.isRequired,\n    }).isRequired,\n    format: PropTypes.func,\n}\n\nconst SankeyLinksItem = ({\n    link,\n    layout,\n    path,\n    color,\n    opacity,\n    blendMode,\n    enableGradient,\n    setCurrent,\n    tooltip,\n    tooltipFormat,\n    isInteractive,\n    onClick,\n}) => {\n    const linkId = `${link.source.id}.${link.target.id}`\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        path,\n        color,\n        opacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const tooltipContent = useMemo(() => {\n        if (tooltip) {\n            return <BasicTooltip id={tooltip(link)} enableChip={false} />\n        }\n\n        return <BasicTooltip id={<TooltipContent format={tooltipFormat} link={link} />} />\n    }, [tooltip, tooltipFormat, link])\n\n    const handleMouseEnter = useCallback(\n        event => {\n            setCurrent(link)\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [setCurrent, link, showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrent(null)\n        hideTooltip()\n    }, [setCurrent, hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            onClick(link, event)\n        },\n        [onClick, link]\n    )\n\n    return (\n        <>\n            {enableGradient && (\n                <SankeyLinkGradient\n                    id={linkId}\n                    layout={layout}\n                    startColor={link.startColor || link.source.color}\n                    endColor={link.endColor || link.target.color}\n                />\n            )}\n            <animated.path\n                fill={enableGradient ? `url(#${encodeURI(linkId)})` : animatedProps.color}\n                d={animatedProps.path}\n                fillOpacity={animatedProps.opacity}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleMouseMove : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                style={{ mixBlendMode: blendMode }}\n            />\n        </>\n    )\n}\n\nSankeyLinksItem.propTypes = {\n    link: PropTypes.shape({\n        source: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        target: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        color: PropTypes.string.isRequired,\n        value: PropTypes.number.isRequired,\n        startColor: PropTypes.string,\n        endColor: PropTypes.string,\n    }).isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    path: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    blendMode: blendModePropType.isRequired,\n    enableGradient: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.func,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n}\n\nexport default memo(SankeyLinksItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { line, curveMonotoneX, curveMonotoneY } from 'd3-shape'\n\nexport const sankeyLinkHorizontal = () => {\n    const lineGenerator = line().curve(curveMonotoneX)\n\n    return (n, contract) => {\n        const thickness = Math.max(1, n.thickness - contract * 2)\n        const halfThickness = thickness / 2\n        const linkLength = n.target.x0 - n.source.x1\n        const padLength = linkLength * 0.12\n\n        const dots = [\n            [n.source.x1, n.pos0 - halfThickness],\n            [n.source.x1 + padLength, n.pos0 - halfThickness],\n            [n.target.x0 - padLength, n.pos1 - halfThickness],\n            [n.target.x0, n.pos1 - halfThickness],\n            [n.target.x0, n.pos1 + halfThickness],\n            [n.target.x0 - padLength, n.pos1 + halfThickness],\n            [n.source.x1 + padLength, n.pos0 + halfThickness],\n            [n.source.x1, n.pos0 + halfThickness],\n            [n.source.x1, n.pos0 - halfThickness],\n        ]\n\n        return lineGenerator(dots) + 'Z'\n    }\n}\n\nexport const sankeyLinkVertical = () => {\n    const lineGenerator = line().curve(curveMonotoneY)\n\n    return (n, contract) => {\n        const thickness = Math.max(1, n.thickness - contract * 2)\n        const halfThickness = thickness / 2\n        const linkLength = n.target.y0 - n.source.y1\n        const padLength = linkLength * 0.12\n\n        const dots = [\n            [n.pos0 + halfThickness, n.source.y1],\n            [n.pos0 + halfThickness, n.source.y1 + padLength],\n            [n.pos1 + halfThickness, n.target.y0 - padLength],\n            [n.pos1 + halfThickness, n.target.y0],\n            [n.pos1 - halfThickness, n.target.y0],\n            [n.pos1 - halfThickness, n.target.y0 - padLength],\n            [n.pos0 - halfThickness, n.source.y1 + padLength],\n            [n.pos0 - halfThickness, n.source.y1],\n            [n.pos0 + halfThickness, n.source.y1],\n        ]\n\n        return lineGenerator(dots) + 'Z'\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { blendModePropType } from '@bitbloom/nivo-core'\nimport SankeyLinksItem from './SankeyLinksItem'\nimport { sankeyLinkHorizontal, sankeyLinkVertical } from './links'\n\nconst SankeyLinks = ({\n    links,\n    layout,\n    linkOpacity,\n    linkHoverOpacity,\n    linkHoverOthersOpacity,\n    linkContract,\n    linkBlendMode,\n    enableLinkGradient,\n    setCurrentLink,\n    currentNode,\n    currentLink,\n    isCurrentLink,\n    isInteractive,\n    onClick,\n    tooltipFormat,\n    tooltip,\n}) => {\n    const getOpacity = link => {\n        if (!currentNode && !currentLink) return linkOpacity\n        if (isCurrentLink(link)) return linkHoverOpacity\n        return linkHoverOthersOpacity\n    }\n\n    const getLinkPath = layout === 'horizontal' ? sankeyLinkHorizontal() : sankeyLinkVertical()\n\n    return links.map(link => (\n        <SankeyLinksItem\n            key={`${link.source.id}.${link.target.id}`}\n            link={link}\n            layout={layout}\n            path={getLinkPath(link, linkContract)}\n            color={link.color}\n            opacity={getOpacity(link)}\n            blendMode={linkBlendMode}\n            enableGradient={enableLinkGradient}\n            setCurrent={setCurrentLink}\n            isInteractive={isInteractive}\n            onClick={onClick}\n            tooltip={tooltip}\n            tooltipFormat={tooltipFormat}\n        />\n    ))\n}\n\nSankeyLinks.propTypes = {\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    links: PropTypes.arrayOf(\n        PropTypes.shape({\n            source: PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n                label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            }).isRequired,\n            target: PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n                label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            }).isRequired,\n            thickness: PropTypes.number.isRequired,\n            color: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    linkOpacity: PropTypes.number.isRequired,\n    linkHoverOpacity: PropTypes.number.isRequired,\n    linkHoverOthersOpacity: PropTypes.number.isRequired,\n    linkContract: PropTypes.number.isRequired,\n    linkBlendMode: blendModePropType.isRequired,\n    enableLinkGradient: PropTypes.bool.isRequired,\n    tooltip: PropTypes.func,\n    setCurrentLink: PropTypes.func.isRequired,\n    currentLink: PropTypes.object,\n    isCurrentLink: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nexport default memo(SankeyLinks)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@bitbloom/nivo-core'\n\nconst SankeyLabels = ({\n    nodes,\n    layout,\n    width,\n    height,\n    labelPosition,\n    labelPadding,\n    labelOrientation,\n    getLabelTextColor,\n}) => {\n    const theme = useTheme()\n\n    const labelRotation = labelOrientation === 'vertical' ? -90 : 0\n    const labels = nodes.map(node => {\n        let x\n        let y\n        let textAnchor\n        if (layout === 'horizontal') {\n            y = node.y + node.height / 2\n            if (node.x < width / 2) {\n                if (labelPosition === 'inside') {\n                    x = node.x1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start'\n                } else {\n                    x = node.x - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end'\n                }\n            } else {\n                if (labelPosition === 'inside') {\n                    x = node.x - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end'\n                } else {\n                    x = node.x1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start'\n                }\n            }\n        } else if (layout === 'vertical') {\n            x = node.x + node.width / 2\n            if (node.y < height / 2) {\n                if (labelPosition === 'inside') {\n                    y = node.y1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle'\n                } else {\n                    y = node.y - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle'\n                }\n            } else {\n                if (labelPosition === 'inside') {\n                    y = node.y - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle'\n                } else {\n                    y = node.y1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle'\n                }\n            }\n        }\n\n        return {\n            id: node.id,\n            label: node.label,\n            x,\n            y,\n            textAnchor,\n            color: getLabelTextColor(node),\n        }\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            transform: `translate(${label.x}, ${label.y}) rotate(${labelRotation})`,\n            color: label.color,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                dominantBaseline=\"central\"\n                textAnchor={label.textAnchor}\n                transform={animatedProps.transform}\n                style={{\n                    ...theme.labels.text,\n                    fill: animatedProps.color,\n                    pointerEvents: 'none',\n                }}\n            >\n                {label.label}\n            </animated.text>\n        )\n    })\n}\n\nSankeyLabels.propTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            x1: PropTypes.number.isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            width: PropTypes.number.isRequired,\n            height: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    labelPosition: PropTypes.oneOf(['inside', 'outside']).isRequired,\n    labelPadding: PropTypes.number.isRequired,\n    labelOrientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    getLabelTextColor: PropTypes.func.isRequired,\n}\n\nexport default memo(SankeyLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment } from 'react'\nimport { uniq } from 'lodash'\nimport { SvgWrapper, useDimensions, withContainer } from '@bitbloom/nivo-core'\nimport { BoxLegendSvg } from '@bitbloom/nivo-legends'\nimport { SankeyDefaultProps, SankeyPropTypes } from './props'\nimport { useSankey } from './hooks'\nimport SankeyNodes from './SankeyNodes'\nimport SankeyLinks from './SankeyLinks'\nimport SankeyLabels from './SankeyLabels'\n\nconst Sankey = ({\n    data,\n    layout,\n    sort,\n    align,\n    width,\n    height,\n    margin: partialMargin,\n    colors,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    nodeBorderColor,\n    nodeOpacity,\n    nodeHoverOpacity,\n    nodeHoverOthersOpacity,\n    nodeBorderWidth,\n    linkOpacity,\n    linkHoverOpacity,\n    linkHoverOthersOpacity,\n    linkContract,\n    linkBlendMode,\n    enableLinkGradient,\n    enableLabels,\n    labelPosition,\n    labelPadding,\n    labelOrientation,\n    label,\n    labelFormat,\n    labelTextColor,\n    nodeTooltip,\n    linkTooltip,\n    isInteractive,\n    onClick,\n    tooltipFormat,\n    legends,\n    layers,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        nodes,\n        links,\n        legendData,\n        getNodeBorderColor,\n        currentNode,\n        setCurrentNode,\n        currentLink,\n        setCurrentLink,\n        getLabelTextColor,\n    } = useSankey({\n        data,\n        layout,\n        width: innerWidth,\n        height: innerHeight,\n        sort,\n        align,\n        colors,\n        nodeThickness,\n        nodeSpacing,\n        nodeInnerPadding,\n        nodeBorderColor,\n        label,\n        labelFormat,\n        labelTextColor,\n    })\n\n    let isCurrentNode = () => false\n    let isCurrentLink = () => false\n\n    if (currentLink) {\n        isCurrentNode = ({ id }) => id === currentLink.source.id || id === currentLink.target.id\n        isCurrentLink = ({ source, target }) =>\n            source.id === currentLink.source.id && target.id === currentLink.target.id\n    }\n\n    if (currentNode) {\n        let currentNodeIds = [currentNode.id]\n        links\n            .filter(\n                ({ source, target }) => source.id === currentNode.id || target.id === currentNode.id\n            )\n            .forEach(({ source, target }) => {\n                currentNodeIds.push(source.id)\n                currentNodeIds.push(target.id)\n            })\n\n        currentNodeIds = uniq(currentNodeIds)\n        isCurrentNode = ({ id }) => currentNodeIds.includes(id)\n        isCurrentLink = ({ source, target }) =>\n            source.id === currentNode.id || target.id === currentNode.id\n    }\n\n    const layerProps = {\n        links,\n        nodes,\n        margin,\n        width,\n        height,\n        outerWidth,\n        outerHeight,\n    }\n\n    const layerById = {\n        links: (\n            <SankeyLinks\n                key=\"links\"\n                links={links}\n                layout={layout}\n                linkContract={linkContract}\n                linkOpacity={linkOpacity}\n                linkHoverOpacity={linkHoverOpacity}\n                linkHoverOthersOpacity={linkHoverOthersOpacity}\n                linkBlendMode={linkBlendMode}\n                enableLinkGradient={enableLinkGradient}\n                setCurrentLink={setCurrentLink}\n                currentNode={currentNode}\n                currentLink={currentLink}\n                isCurrentLink={isCurrentLink}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                tooltip={linkTooltip}\n                tooltipFormat={tooltipFormat}\n            />\n        ),\n        nodes: (\n            <SankeyNodes\n                key=\"nodes\"\n                nodes={nodes}\n                nodeOpacity={nodeOpacity}\n                nodeHoverOpacity={nodeHoverOpacity}\n                nodeHoverOthersOpacity={nodeHoverOthersOpacity}\n                nodeBorderWidth={nodeBorderWidth}\n                getNodeBorderColor={getNodeBorderColor}\n                setCurrentNode={setCurrentNode}\n                currentNode={currentNode}\n                currentLink={currentLink}\n                isCurrentNode={isCurrentNode}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                tooltip={nodeTooltip}\n                tooltipFormat={tooltipFormat}\n            />\n        ),\n        labels: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legendData}\n            />\n        )),\n    }\n\n    if (enableLabels) {\n        layerById.labels = (\n            <SankeyLabels\n                key=\"labels\"\n                nodes={nodes}\n                layout={layout}\n                width={innerWidth}\n                height={innerHeight}\n                labelPosition={labelPosition}\n                labelPadding={labelPadding}\n                labelOrientation={labelOrientation}\n                getLabelTextColor={getLabelTextColor}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{layer(layerProps)}</Fragment>\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nSankey.propTypes = SankeyPropTypes\n\nconst WrappedSankey = withContainer(Sankey)\nWrappedSankey.defaultProps = SankeyDefaultProps\n\nexport default WrappedSankey\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport Sankey from './Sankey'\n\nconst ResponsiveSankey = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Sankey width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveSankey\n"],"names":["defineProperty","sankeyAlignmentPropMapping","center","sankeyCenter","justify","sankeyJustify","start","sankeyLeft","end","sankeyRight","sankeyAlignmentPropKeys","Object","keys","sankeyAlignmentPropType","PropTypes","oneOf","sankeyAlignmentFromProp","prop","SankeyPropTypes","data","shape","nodes","arrayOf","id","oneOfType","string","number","isRequired","links","source","target","layout","align","sort","func","colors","ordinalColorsPropType","nodeOpacity","nodeHoverOpacity","nodeHoverOthersOpacity","nodeThickness","nodeSpacing","nodeInnerPadding","nodeBorderWidth","nodeBorderColor","inheritedColorPropType","linkOpacity","linkHoverOpacity","linkHoverOthersOpacity","linkContract","linkBlendMode","blendModePropType","enableLinkGradient","bool","enableLabels","labelPosition","labelPadding","labelOrientation","labelTextColor","label","labelFormat","nodeTooltip","linkTooltip","isInteractive","onClick","tooltipFormat","legends","LegendPropShape","layers","role","motionPropTypes","SankeyDefaultProps","scheme","from","modifiers","noop","animate","motionConfig","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","getId","d","computeNodeAndLinks","_data","alignFunction","sortFunction","linkSortMode","width","height","getColor","getLinkColor","getLabel","sankey","d3Sankey","nodeAlign","nodeSort","linkSort","nodeWidth","nodePadding","size","nodeId","cloneDeep","forEach","node","color","x","x0","y","y0","Math","max","x1","y1","oldX0","oldX1","link","pos0","pos1","thickness","useSankey","useState","currentNode","setCurrentNode","currentLink","setCurrentLink","useMemo","undefined","a","b","value","theme","useTheme","useOrdinalColorScale","getNodeBorderColor","useInheritedColor","getLabelGenerator","getLabelTextColor","legendData","map","SankeyNodesItem","opacity","borderWidth","borderColor","setCurrent","tooltip","useMotionConfig","springConfig","config","animatedProps","useSpring","immediate","useTooltip","showTooltipFromEvent","hideTooltip","tooltipContent","React","BasicTooltip","handleMouseEnter","useCallback","event","handleMouseMove","handleMouseLeave","handleClick","animated","interpolate","v","memo","SankeyNodes","isCurrentNode","getOpacity","SankeyLinkGradient","startColor","endColor","gradientProps","x2","y2","displayName","tooltipStyles","container","display","alignItems","sourceChip","marginRight","targetChip","marginLeft","TooltipContent","format","Chip","SankeyLinksItem","path","blendMode","enableGradient","linkId","encodeURI","mixBlendMode","sankeyLinkHorizontal","lineGenerator","line","curve","curveMonotoneX","n","contract","halfThickness","linkLength","padLength","dots","sankeyLinkVertical","curveMonotoneY","SankeyLinks","isCurrentLink","getLinkPath","SankeyLabels","labelRotation","labels","textAnchor","springs","useSprings","length","transform","index","text","fill","pointerEvents","Sankey","partialMargin","margin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","currentNodeIds","filter","push","uniq","includes","layerProps","layerById","legend","i","BoxLegendSvg","SvgWrapper","layer","Fragment","WrappedSankey","withContainer","defaultProps","ResponsiveSankey","props","ResponsiveWrapper"],"mappings":"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"}