{"version":3,"file":"nivo-swarmplot.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/props.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/compute.js","../src/SwarmPlotTooltip.js","../src/hooks.js","../src/AnimatedSwarmPlotNodes.js","../src/StaticSwarmPlotNodes.js","../src/SwarmPlotNode.js","../src/SwarmPlotAnnotations.js","../src/SwarmPlot.js","../src/ResponsiveSwarmPlot.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/SwarmPlotCanvas.js","../src/ResponsiveSwarmPlotCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { axisPropType } from '@bitbloom/nivo-axes'\nimport { motionPropTypes } from '@bitbloom/nivo-core'\nimport {\n    ordinalColorsPropType,\n    inheritedColorPropType,\n    colorPropertyAccessorPropType,\n} from '@bitbloom/nivo-colors'\nimport { scalePropType } from '@bitbloom/nivo-scales'\nimport { annotationSpecPropType } from '@bitbloom/nivo-annotations'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    groups: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupBy: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    identity: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueScale: scalePropType.isRequired,\n    size: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            values: PropTypes.arrayOf(PropTypes.number).isRequired,\n            sizes: PropTypes.arrayOf(PropTypes.number).isRequired,\n        }),\n        PropTypes.func,\n    ]).isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    gap: PropTypes.number.isRequired,\n\n    forceStrength: PropTypes.number.isRequired,\n    simulationIterations: PropTypes.number.isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['grid', 'axes', 'nodes', 'mesh', 'annotations']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n    renderNode: PropTypes.func.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    colorBy: colorPropertyAccessorPropType.isRequired,\n    borderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    borderColor: inheritedColorPropType.isRequired,\n\n    enableGridX: PropTypes.bool.isRequired,\n    gridXValues: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n    enableGridY: PropTypes.bool.isRequired,\n    gridYValues: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    annotations: PropTypes.arrayOf(annotationSpecPropType).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    useMesh: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n    tooltip: PropTypes.any,\n}\n\nexport const SwarmPlotPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n    ...motionPropTypes,\n}\n\nexport const SwarmPlotCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    groupBy: 'group',\n    identity: 'id',\n    label: 'id',\n    value: 'value',\n    valueScale: { type: 'linear', min: 0, max: 'auto' },\n    size: 6,\n    spacing: 2,\n    layout: 'vertical',\n    gap: 0,\n\n    forceStrength: 1,\n    simulationIterations: 120,\n\n    layers: ['grid', 'axes', 'nodes', 'mesh', 'annotations'],\n\n    colors: { scheme: 'nivo' },\n    colorBy: 'group',\n    borderWidth: 0,\n    borderColor: 'none',\n\n    enableGridX: true,\n    enableGridY: true,\n    axisTop: {},\n    axisRight: {},\n    axisBottom: {},\n    axisLeft: {},\n\n    annotations: [],\n\n    isInteractive: true,\n    useMesh: false,\n    debugMesh: false,\n}\n\nexport const SwarmPlotDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    role: 'img',\n}\n\nexport const SwarmPlotCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport get from 'lodash/get'\nimport isString from 'lodash/isString'\nimport isNumber from 'lodash/isNumber'\nimport isPlainObject from 'lodash/isPlainObject'\nimport { scaleOrdinal, scaleLinear } from 'd3-scale'\nimport { forceSimulation, forceX, forceY, forceCollide } from 'd3-force'\nimport { computeScale, generateSeriesAxis, createDateNormalizer } from '@bitbloom/nivo-scales'\n\nexport const getSizeGenerator = size => {\n    if (typeof size === 'function') return size\n    if (isNumber(size)) return () => size\n    if (isPlainObject(size)) {\n        if (!isString(size.key)) {\n            throw new Error(\n                'Size is invalid, key should be a string pointing to the property to use to determine node size'\n            )\n        }\n        if (!Array.isArray(size.values) || size.values.length !== 2) {\n            throw new Error(\n                'Size is invalid, values spec should be an array containing two values, min and max'\n            )\n        }\n        if (!Array.isArray(size.sizes) || size.sizes.length !== 2) {\n            throw new Error(\n                'Size is invalid, sizes spec should be an array containing two values, min and max'\n            )\n        }\n\n        const sizeScale = scaleLinear()\n            .domain([size.values[0], size.values[1]])\n            .range([size.sizes[0], size.sizes[1]])\n\n        return d => sizeScale(get(d, size.key))\n    }\n\n    throw new Error('Size is invalid, it should be either a function, a number or an object')\n}\n\nexport const computeValueScale = ({ width, height, axis, getValue, scale, data }) => {\n    const values = data.map(getValue)\n    if (scale.type === 'time') {\n        const series = [{ data: values.map(p => ({ data: { [axis]: p } })) }]\n        const axes = generateSeriesAxis(series, axis, scale)\n        return computeScale({ ...scale, axis }, { [axis]: axes }, width, height)\n    } else {\n        const min = Math.min(...values)\n        const max = Math.max(...values)\n        return computeScale({ ...scale, axis }, { [axis]: { min, max } }, width, height)\n    }\n}\n\nexport const computeOrdinalScale = ({ width, height, axis, groups, gap }) => {\n    if (!Array.isArray(groups) || groups.length === 0) {\n        throw new Error(`'groups' should be an array containing at least one item`)\n    }\n\n    const groupCount = groups.length\n\n    let groupSize\n    if (axis === 'x') {\n        groupSize = (height - gap * (groupCount - 1)) / groupCount\n    } else if (axis === 'y') {\n        groupSize = (width - gap * (groupCount - 1)) / groupCount\n    }\n\n    const range = groups.map((g, i) => i * (groupSize + gap) + groupSize / 2)\n\n    return scaleOrdinal(range).domain(groups)\n}\n\nexport const computeForces = ({ axis, valueScale, ordinalScale, spacing, forceStrength }) => {\n    const collisionForce = forceCollide(d => d.size / 2 + spacing / 2)\n\n    let xForce\n    let yForce\n    if (axis === 'x') {\n        xForce = forceX(d => {\n            //console.log(d)\n            return valueScale(d.value)\n        }).strength(forceStrength)\n        yForce = forceY(d => ordinalScale(d.group))\n    } else if (axis === 'y') {\n        xForce = forceX(d => ordinalScale(d.group))\n        yForce = forceY(d => valueScale(d.value)).strength(forceStrength)\n    }\n\n    return { x: xForce, y: yForce, collision: collisionForce }\n}\n\nexport const getParsedValue = scaleSpec => {\n    if (scaleSpec.type === 'linear') {\n        return parseFloat\n    } else if (scaleSpec.type === 'time' && scaleSpec.format !== 'native') {\n        return createDateNormalizer(scaleSpec)\n    } else {\n        return x => x\n    }\n}\n\nexport const computeNodes = ({\n    data,\n    getIdentity,\n    layout,\n    getValue,\n    valueScale,\n    getGroup,\n    ordinalScale,\n    getSize,\n    forces,\n    simulationIterations,\n    valueScaleConfig,\n}) => {\n    const config = {\n        horizontal: ['x', 'y'],\n        vertical: ['y', 'x'],\n    }\n\n    const simulatedNodes = data.map(d => ({\n        id: getIdentity(d),\n        group: getGroup(d),\n        value: getParsedValue(valueScaleConfig)(getValue(d)),\n        size: getSize(d),\n        data: { ...d },\n    }))\n    const simulation = forceSimulation(simulatedNodes)\n        .force('x', forces.x)\n        .force('y', forces.y)\n        .force('collide', forces.collision)\n        .stop()\n\n    simulation.tick(simulationIterations)\n\n    return {\n        [`${config[layout][0]}Scale`]: valueScale,\n        [`${config[layout][1]}Scale`]: ordinalScale,\n        nodes: simulation.nodes(),\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@bitbloom/nivo-tooltip'\n\nconst SwarmPlotTooltip = ({ node }) => (\n    <BasicTooltip\n        id={node.label}\n        value={node.formattedValue}\n        enableChip={true}\n        color={node.color}\n    />\n)\n\nSwarmPlotTooltip.propTypes = {\n    node: PropTypes.shape({\n        label: PropTypes.string.isRequired,\n        value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        formattedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default SwarmPlotTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo, useCallback } from 'react'\nimport get from 'lodash/get'\nimport { useValueFormatter } from '@bitbloom/nivo-core'\nimport { useOrdinalColorScale } from '@bitbloom/nivo-colors'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\n\nimport {\n    computeValueScale,\n    computeOrdinalScale,\n    computeForces,\n    computeNodes,\n    getSizeGenerator,\n} from './compute'\nimport { useAnnotations } from '@bitbloom/nivo-annotations'\nimport SwarmPlotTooltip from './SwarmPlotTooltip'\n\nexport const useValueScale = ({ width, height, axis, getValue, scale, data }) =>\n    useMemo(\n        () =>\n            computeValueScale({\n                width,\n                height,\n                axis,\n                getValue,\n                scale,\n                data,\n            }),\n        [width, height, axis, getValue, scale, data]\n    )\n\nexport const useOrdinalScale = ({ width, height, axis, groups, gap }) =>\n    useMemo(() => computeOrdinalScale({ width, height, axis, groups, gap }), [\n        width,\n        height,\n        axis,\n        groups,\n        gap,\n    ])\n\nexport const useForces = ({ axis, valueScale, ordinalScale, getSize, spacing, forceStrength }) =>\n    useMemo(\n        () =>\n            computeForces({\n                axis,\n                valueScale,\n                ordinalScale,\n                getSize,\n                spacing,\n                forceStrength,\n            }),\n        [axis, valueScale, ordinalScale, getSize, spacing, forceStrength]\n    )\n\nconst useSize = size => useMemo(() => getSizeGenerator(size), [size])\n\nconst getAccessor = instruction => {\n    if (typeof instruction === 'function') return instruction\n    return d => get(d, instruction)\n}\n\nexport const useSwarmPlot = ({\n    width,\n    height,\n    data,\n    identity,\n    label,\n    groups,\n    groupBy,\n    value,\n    valueFormat,\n    valueScale: valueScaleConfig,\n    size,\n    spacing,\n    layout,\n    gap,\n    colors,\n    colorBy,\n    forceStrength,\n    simulationIterations,\n}) => {\n    const axis = layout === 'horizontal' ? 'x' : 'y'\n\n    const getIdentity = useMemo(() => getAccessor(identity), [identity])\n    const getLabel = useMemo(() => getAccessor(label), [label])\n    const getValue = useMemo(() => getAccessor(value), [value])\n    const formatValue = useValueFormatter(valueFormat)\n    const getGroup = useMemo(() => getAccessor(groupBy), [groupBy])\n    const getSize = useSize(size)\n    const getColor = useOrdinalColorScale(colors, colorBy)\n\n    const valueScale = useValueScale({\n        width,\n        height,\n        axis,\n        getValue,\n        scale: valueScaleConfig,\n        data,\n    })\n\n    const ordinalScale = useOrdinalScale({\n        width,\n        height,\n        axis,\n        groups,\n        gap,\n    })\n\n    const forces = useForces({\n        axis,\n        valueScale,\n        ordinalScale,\n        spacing,\n        forceStrength,\n    })\n\n    const { nodes, xScale, yScale } = useMemo(\n        () =>\n            computeNodes({\n                data,\n                getIdentity,\n                layout,\n                getValue,\n                valueScale,\n                getGroup,\n                ordinalScale,\n                getSize,\n                forces,\n                simulationIterations,\n                valueScaleConfig,\n            }),\n        [\n            data,\n            getIdentity,\n            layout,\n            getValue,\n            valueScale,\n            getGroup,\n            ordinalScale,\n            getSize,\n            forces,\n            simulationIterations,\n        ]\n    )\n\n    const augmentedNodes = useMemo(\n        () =>\n            nodes.map(node => ({\n                id: node.id,\n                index: node.index,\n                group: node.group,\n                label: getLabel(node),\n                value: node.value,\n                formattedValue: formatValue(node.value),\n                x: node.x,\n                y: node.y,\n                size: node.size,\n                color: getColor(node),\n                data: node.data,\n            })),\n        [nodes, getLabel, formatValue, getColor]\n    )\n\n    return {\n        nodes: augmentedNodes,\n        xScale,\n        yScale,\n        getColor,\n    }\n}\n\nexport const useBorderWidth = borderWidth =>\n    useMemo(() => {\n        if (typeof borderWidth === 'function') return borderWidth\n        return () => borderWidth\n    }, [borderWidth])\n\nexport const useNodeMouseHandlers = ({\n    isEnabled,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const showNodeTooltip = useMemo(() => {\n        if (tooltip) return (node, event) => showTooltipFromEvent(tooltip({ node }), event)\n        return (node, event) => showTooltipFromEvent(<SwarmPlotTooltip node={node} />, event)\n    }, [showTooltipFromEvent])\n\n    const mouseEnterHandler = useCallback(\n        (node, event) => {\n            if (!isEnabled) return\n            showNodeTooltip(node, event)\n            onMouseEnter && onMouseEnter(node, event)\n        },\n        [isEnabled, onMouseEnter]\n    )\n\n    const mouseMoveHandler = useCallback(\n        (node, event) => {\n            if (!isEnabled) return\n            showNodeTooltip(node, event)\n            onMouseMove && onMouseMove(node, event)\n        },\n        [isEnabled, onMouseMove]\n    )\n\n    const mouseLeaveHandler = useCallback(\n        (node, event) => {\n            if (!isEnabled) return\n            hideTooltip()\n            onMouseLeave && onMouseLeave(node, event)\n        },\n        [isEnabled, onMouseLeave],\n        hideTooltip\n    )\n\n    const clickHandler = useCallback(\n        (node, event) => {\n            isEnabled && onClick && onClick(node, event)\n        },\n        [isEnabled, onClick]\n    )\n\n    return {\n        onMouseEnter: mouseEnterHandler,\n        onMouseMove: mouseMoveHandler,\n        onMouseLeave: mouseLeaveHandler,\n        onClick: clickHandler,\n    }\n}\n\nexport const useSwarmPlotAnnotations = (items, annotations) =>\n    useAnnotations({\n        items,\n        annotations,\n        getDimensions: (node, offset) => {\n            const size = node.size + offset * 2\n\n            return { size, width: size, height: size }\n        },\n    })\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { interpolateColor, getInterpolatedColor } from '@bitbloom/nivo-colors'\n\nconst willEnter = ({ style }) => ({\n    x: style.x.val,\n    y: style.y.val,\n    size: style.size.val,\n    colorR: style.colorR.val,\n    colorG: style.colorG.val,\n    colorB: style.colorB.val,\n    scale: 0,\n})\n\nconst willLeave = springConfig => ({ style }) => ({\n    x: style.x,\n    y: style.y,\n    size: style.size,\n    colorR: style.colorR,\n    colorG: style.colorG,\n    colorB: style.colorB,\n    scale: spring(0, springConfig),\n})\n\nconst AnimatedSwarmPlotNodes = memo(\n    ({\n        nodes,\n        renderNode,\n        getBorderWidth,\n        getBorderColor,\n        motionStiffness,\n        motionDamping,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n    }) => {\n        const springConfig = {\n            stiffness: motionStiffness,\n            damping: motionDamping,\n        }\n\n        return (\n            <TransitionMotion\n                willEnter={willEnter}\n                willLeave={willLeave(springConfig)}\n                styles={nodes.map(node => ({\n                    key: node.id,\n                    data: node,\n                    style: {\n                        x: spring(node.x, springConfig),\n                        y: spring(node.y, springConfig),\n                        size: spring(node.size, springConfig),\n                        ...interpolateColor(node.color, springConfig),\n                        scale: spring(1, springConfig),\n                    },\n                }))}\n            >\n                {interpolatedStyles => (\n                    <>\n                        {interpolatedStyles.map(({ key, style, data: node }) => {\n                            const color = getInterpolatedColor(style)\n\n                            return (\n                                <Fragment key={key}>\n                                    {renderNode({\n                                        node,\n                                        x: style.x,\n                                        y: style.y,\n                                        size: style.size,\n                                        scale: style.scale,\n                                        color,\n                                        borderWidth: getBorderWidth(node),\n                                        borderColor: getBorderColor(node),\n                                        isInteractive,\n                                        onMouseEnter,\n                                        onMouseMove,\n                                        onMouseLeave,\n                                        onClick,\n                                    })}\n                                </Fragment>\n                            )\n                        })}\n                    </>\n                )}\n            </TransitionMotion>\n        )\n    }\n)\n\nAnimatedSwarmPlotNodes.displayName = 'AnimatedSwarmPlotNodes'\nAnimatedSwarmPlotNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    renderNode: PropTypes.func.isRequired,\n    getBorderWidth: PropTypes.func.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    motionStiffness: PropTypes.number.isRequired,\n    motionDamping: PropTypes.number.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default AnimatedSwarmPlotNodes\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\nconst StaticSwarmPlotNodes = memo(\n    ({\n        nodes,\n        renderNode,\n        getBorderWidth,\n        getBorderColor,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n    }) => {\n        return nodes.map(node => {\n            return (\n                <Fragment key={node.id}>\n                    {renderNode({\n                        node,\n                        x: node.x,\n                        y: node.y,\n                        size: node.size,\n                        color: node.color,\n                        borderWidth: getBorderWidth(node),\n                        borderColor: getBorderColor(node),\n                        isInteractive,\n                        onMouseEnter,\n                        onMouseMove,\n                        onMouseLeave,\n                        onClick,\n                    })}\n                </Fragment>\n            )\n        })\n    }\n)\n\nStaticSwarmPlotNodes.displayName = 'StaticSwarmPlotNodes'\nStaticSwarmPlotNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    renderNode: PropTypes.func.isRequired,\n    getBorderWidth: PropTypes.func.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default StaticSwarmPlotNodes\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\n\nconst SwarmPlotNode = memo(\n    ({\n        node,\n        x,\n        y,\n        size,\n        scale,\n        color,\n        borderWidth,\n        borderColor,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n    }) => {\n        const handleMouseEnter = useCallback(event => onMouseEnter && onMouseEnter(node, event), [\n            node,\n            onMouseEnter,\n        ])\n        const handleMouseMove = useCallback(event => onMouseMove && onMouseEnter(node, event), [\n            node,\n            onMouseMove,\n        ])\n        const handleMouseLeave = useCallback(event => onMouseLeave && onMouseLeave(node, event), [\n            node,\n            onMouseLeave,\n        ])\n        const handleClick = useCallback(event => onClick && onClick(node, event), [node, onClick])\n\n        return (\n            <circle\n                transform={`translate(${x},${y}) scale(${scale})`}\n                r={size / 2}\n                fill={color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nSwarmPlotNode.displayName = 'SwarmPlotNode'\nSwarmPlotNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    scale: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\nSwarmPlotNode.defaultProps = {\n    scale: 1,\n}\n\nexport default SwarmPlotNode\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { Annotation } from '@bitbloom/nivo-annotations'\nimport { useSwarmPlotAnnotations } from './hooks'\n\nconst SwarmPlotAnnotations = ({ nodes, annotations, innerWidth, innerHeight }) => {\n    const boundAnnotations = useSwarmPlotAnnotations(nodes, annotations)\n\n    return boundAnnotations.map((annotation, i) => (\n        <Annotation\n            key={i}\n            {...annotation}\n            containerWidth={innerWidth}\n            containerHeight={innerHeight}\n        />\n    ))\n}\n\nSwarmPlotAnnotations.propTypes = {}\n\nexport default SwarmPlotAnnotations\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, Fragment } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@bitbloom/nivo-core'\nimport { useInheritedColor } from '@bitbloom/nivo-colors'\nimport { Axes, Grid } from '@bitbloom/nivo-axes'\nimport { Mesh } from '@bitbloom/nivo-voronoi'\nimport { SwarmPlotPropTypes, SwarmPlotDefaultProps } from './props'\nimport { useSwarmPlot, useBorderWidth, useNodeMouseHandlers } from './hooks'\nimport AnimatedSwarmPlotNodes from './AnimatedSwarmPlotNodes'\nimport StaticSwarmPlotNodes from './StaticSwarmPlotNodes'\nimport SwarmPlotNode from './SwarmPlotNode'\nimport SwarmPlotAnnotations from './SwarmPlotAnnotations'\n\nconst SwarmPlot = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        data,\n        groups,\n        groupBy,\n        identity,\n        label,\n        value,\n        valueFormat,\n        valueScale,\n        size,\n        spacing,\n        layout,\n        gap,\n\n        forceStrength,\n        simulationIterations,\n\n        layers,\n        renderNode,\n\n        colors,\n        colorBy,\n        borderWidth,\n        borderColor,\n\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n\n        annotations,\n\n        isInteractive,\n        useMesh,\n        debugMesh,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        role,\n\n        animate,\n        motionStiffness,\n        motionDamping,\n    }) => {\n        const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n            width,\n            height,\n            partialMargin\n        )\n        const theme = useTheme()\n\n        const { nodes, xScale, yScale } = useSwarmPlot({\n            width: innerWidth,\n            height: innerHeight,\n            data,\n            groups,\n            groupBy,\n            identity,\n            label,\n            value,\n            valueFormat,\n            valueScale,\n            size,\n            spacing,\n            layout,\n            gap,\n            colors,\n            colorBy,\n            forceStrength,\n            simulationIterations,\n        })\n\n        const getBorderWidth = useBorderWidth(borderWidth)\n        const getBorderColor = useInheritedColor(borderColor, theme)\n\n        const layerById = {\n            grid: (\n                <Grid\n                    key=\"grid\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    xScale={enableGridX ? xScale : null}\n                    xValues={gridXValues}\n                    yScale={enableGridY ? yScale : null}\n                    yValues={gridYValues}\n                />\n            ),\n            axes: (\n                <Axes\n                    key=\"axes\"\n                    xScale={xScale}\n                    yScale={yScale}\n                    width={innerWidth}\n                    height={innerHeight}\n                    top={axisTop}\n                    right={axisRight}\n                    bottom={axisBottom}\n                    left={axisLeft}\n                />\n            ),\n            mesh: null,\n            annotations: (\n                <SwarmPlotAnnotations\n                    key=\"annotations\"\n                    nodes={nodes}\n                    annotations={annotations}\n                    innerWidth={innerWidth}\n                    innerHeight={innerHeight}\n                    animate={animate}\n                    motionStiffness={motionStiffness}\n                    motionDamping={motionDamping}\n                />\n            ),\n        }\n\n        const enableNodeInteractivity = isInteractive && !useMesh\n        const handlers = useNodeMouseHandlers({\n            isEnabled: isInteractive,\n            onMouseEnter,\n            onMouseMove,\n            onMouseLeave,\n            onClick,\n            tooltip,\n        })\n\n        if (animate) {\n            layerById.nodes = (\n                <AnimatedSwarmPlotNodes\n                    key=\"nodes\"\n                    nodes={nodes}\n                    renderNode={renderNode}\n                    getBorderWidth={getBorderWidth}\n                    getBorderColor={getBorderColor}\n                    motionStiffness={motionStiffness}\n                    motionDamping={motionDamping}\n                    isInteractive={enableNodeInteractivity}\n                    onMouseEnter={!useMesh ? handlers.onMouseEnter : undefined}\n                    onMouseMove={!useMesh ? handlers.onMouseMove : undefined}\n                    onMouseLeave={!useMesh ? handlers.onMouseLeave : undefined}\n                    onClick={!useMesh ? handlers.onClick : undefined}\n                />\n            )\n        } else {\n            layerById.nodes = (\n                <StaticSwarmPlotNodes\n                    key=\"nodes\"\n                    nodes={nodes}\n                    renderNode={renderNode}\n                    getBorderWidth={getBorderWidth}\n                    getBorderColor={getBorderColor}\n                    isInteractive={enableNodeInteractivity}\n                    onMouseEnter={!useMesh ? handlers.onMouseEnter : undefined}\n                    onMouseMove={!useMesh ? handlers.onMouseMove : undefined}\n                    onMouseLeave={!useMesh ? handlers.onMouseLeave : undefined}\n                    onClick={!useMesh ? handlers.onClick : undefined}\n                />\n            )\n        }\n\n        if (isInteractive === true && useMesh === true) {\n            layerById.mesh = (\n                <Mesh\n                    key=\"mesh\"\n                    nodes={nodes}\n                    width={innerWidth}\n                    height={innerHeight}\n                    onMouseEnter={handlers.onMouseEnter}\n                    onMouseMove={handlers.onMouseMove}\n                    onMouseLeave={handlers.onMouseLeave}\n                    onClick={handlers.onClick}\n                    debug={debugMesh}\n                />\n            )\n        }\n\n        const layerContext = {\n            nodes,\n            xScale,\n            yScale,\n            innerWidth,\n            innerHeight,\n            outerWidth,\n            outerHeight,\n            margin,\n            getBorderColor,\n            getBorderWidth,\n            animate,\n            motionStiffness,\n            motionDamping,\n        }\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                role={role}\n            >\n                {layers.map((layer, i) => {\n                    if (layerById[layer] !== undefined) {\n                        return layerById[layer]\n                    }\n                    if (typeof layer === 'function') {\n                        return <Fragment key={i}>{layer(layerContext)}</Fragment>\n                    }\n\n                    return null\n                })}\n            </SvgWrapper>\n        )\n    }\n)\n\nSwarmPlot.displayName = 'SwarmPlot'\nSwarmPlot.propTypes = SwarmPlotPropTypes\nSwarmPlot.defaultProps = {\n    ...SwarmPlotDefaultProps,\n    renderNode: props => <SwarmPlotNode {...props} />, // eslint-disable-line react/display-name\n}\n\nexport default withContainer(SwarmPlot)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport SwarmPlot from './SwarmPlot'\n\nconst ResponsiveSwarmPlot = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <SwarmPlot width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveSwarmPlot\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useRef, useState, useEffect, useCallback, useMemo } from 'react'\nimport {\n    getRelativeCursor,\n    isCursorInRect,\n    withContainer,\n    useDimensions,\n    useTheme,\n} from '@bitbloom/nivo-core'\nimport { useInheritedColor } from '@bitbloom/nivo-colors'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@bitbloom/nivo-axes'\nimport { useComputedAnnotations, renderAnnotationsToCanvas } from '@bitbloom/nivo-annotations'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@bitbloom/nivo-voronoi'\nimport { SwarmPlotCanvasDefaultProps, SwarmPlotCanvasPropTypes } from './props'\nimport { useSwarmPlot, useBorderWidth, useSwarmPlotAnnotations } from './hooks'\nimport SwarmPlotTooltip from './SwarmPlotTooltip'\n\nexport const renderCanvasNode = (ctx, { node, getBorderWidth, getBorderColor }) => {\n    const nodeBorderWidth = getBorderWidth(node)\n    if (nodeBorderWidth > 0) {\n        ctx.strokeStyle = getBorderColor(node)\n        ctx.lineWidth = nodeBorderWidth\n    }\n\n    ctx.beginPath()\n    ctx.arc(node.x, node.y, node.size / 2, 0, 2 * Math.PI)\n    ctx.fillStyle = node.color\n    ctx.fill()\n\n    if (nodeBorderWidth > 0) {\n        ctx.stroke()\n    }\n}\n\nconst SwarmPlotCanvas = memo(\n    ({\n        pixelRatio,\n        width,\n        height,\n        margin: partialMargin,\n        data,\n        groups,\n        groupBy,\n        identity,\n        label,\n        value,\n        valueFormat,\n        valueScale,\n        size,\n        spacing,\n        layout,\n        gap,\n        forceStrength,\n        simulationIterations,\n        layers,\n        renderNode,\n        colors,\n        colorBy,\n        borderWidth,\n        borderColor,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        annotations,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        debugMesh,\n    }) => {\n        const canvasEl = useRef(null)\n        const [currentNode, setCurrentNode] = useState(null)\n        const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n            width,\n            height,\n            partialMargin\n        )\n        const theme = useTheme()\n\n        const { nodes, xScale, yScale } = useSwarmPlot({\n            width: innerWidth,\n            height: innerHeight,\n            data,\n            groups,\n            groupBy,\n            identity,\n            label,\n            value,\n            valueFormat,\n            valueScale,\n            size,\n            spacing,\n            layout,\n            gap,\n            colors,\n            colorBy,\n            forceStrength,\n            simulationIterations,\n        })\n\n        const boundAnnotations = useSwarmPlotAnnotations(nodes, annotations)\n        const computedAnnotations = useComputedAnnotations({\n            annotations: boundAnnotations,\n            innerWidth,\n            innerHeight,\n        })\n\n        const getBorderWidth = useBorderWidth(borderWidth)\n        const getBorderColor = useInheritedColor(borderColor, theme)\n\n        const { delaunay, voronoi } = useVoronoiMesh({\n            points: nodes,\n            width: innerWidth,\n            height: innerHeight,\n            debug: debugMesh,\n        })\n\n        useEffect(() => {\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            layers.forEach(layer => {\n                if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke\n\n                    enableGridX &&\n                        renderGridLinesToCanvas(ctx, {\n                            width: innerWidth,\n                            height: innerHeight,\n                            scale: xScale,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n\n                    enableGridY &&\n                        renderGridLinesToCanvas(ctx, {\n                            width: innerWidth,\n                            height: innerHeight,\n                            scale: yScale,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                }\n\n                if (layer === 'axes') {\n                    renderAxesToCanvas(ctx, {\n                        xScale,\n                        yScale,\n                        width: innerWidth,\n                        height: innerHeight,\n                        top: axisTop,\n                        right: axisRight,\n                        bottom: axisBottom,\n                        left: axisLeft,\n                        theme,\n                    })\n                }\n\n                if (layer === 'nodes') {\n                    nodes.forEach(node => {\n                        renderNode(ctx, {\n                            node,\n                            getBorderWidth,\n                            getBorderColor,\n                        })\n                    })\n                }\n\n                if (layer === 'mesh' && debugMesh === true) {\n                    renderVoronoiToCanvas(ctx, voronoi)\n                    if (currentNode) {\n                        renderVoronoiCellToCanvas(ctx, voronoi, currentNode.index)\n                    }\n                }\n\n                if (layer === 'annotations') {\n                    renderAnnotationsToCanvas(ctx, {\n                        annotations: computedAnnotations,\n                        theme,\n                    })\n                }\n\n                if (typeof layer === 'function') {\n                    layer(ctx, {\n                        nodes,\n                        innerWidth,\n                        innerHeight,\n                        outerWidth,\n                        outerHeight,\n                        margin,\n                        xScale,\n                        yScale,\n                    })\n                }\n            })\n        }, [\n            canvasEl,\n            innerWidth,\n            innerHeight,\n            outerWidth,\n            outerHeight,\n            margin,\n            pixelRatio,\n            theme,\n            layers,\n            nodes,\n            xScale,\n            yScale,\n            getBorderWidth,\n            getBorderColor,\n            voronoi,\n            currentNode,\n            computedAnnotations,\n        ])\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const showNodeTooltip = useMemo(() => {\n            if (tooltip) return (node, event) => showTooltipFromEvent(tooltip({ node }), event)\n            return (node, event) => showTooltipFromEvent(<SwarmPlotTooltip node={node} />, event)\n        }, [showTooltipFromEvent, tooltip])\n\n        const getNodeFromMouseEvent = useCallback(\n            event => {\n                const [x, y] = getRelativeCursor(canvasEl.current, event)\n                if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y))\n                    return null\n\n                const nodeIndex = delaunay.find(x - margin.left, y - margin.top)\n                return nodes[nodeIndex]\n            },\n            [canvasEl, margin, innerWidth, innerHeight, delaunay]\n        )\n\n        const handleMouseHover = useCallback(\n            event => {\n                const node = getNodeFromMouseEvent(event)\n                setCurrentNode(node)\n                onMouseMove && onMouseMove(node, event)\n                if (node) {\n                    showNodeTooltip(node, event)\n                    if ((!currentNode || currentNode.id !== node.id) && onMouseEnter) {\n                        onMouseEnter(node, event)\n                    }\n                    if (currentNode && currentNode.id !== node.id && onMouseLeave) {\n                        onMouseLeave(currentNode, event)\n                    }\n                } else {\n                    currentNode && onMouseLeave && onMouseLeave(currentNode, event)\n                    hideTooltip()\n                }\n            },\n            [\n                getNodeFromMouseEvent,\n                currentNode,\n                onMouseEnter,\n                onMouseLeave,\n                showNodeTooltip,\n                hideTooltip,\n            ]\n        )\n\n        const handleMouseLeave = useCallback(\n            event => {\n                hideTooltip()\n                setCurrentNode(null)\n                onMouseLeave && onMouseLeave(currentNode, event)\n            },\n            [hideTooltip, setCurrentNode, currentNode, onMouseLeave]\n        )\n\n        const handleClick = useCallback(\n            event => {\n                const node = getNodeFromMouseEvent(event)\n                node && onClick && onClick(node, event)\n            },\n            [getNodeFromMouseEvent, onClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                    cursor: isInteractive ? 'auto' : 'normal',\n                }}\n                onMouseEnter={isInteractive ? handleMouseHover : undefined}\n                onMouseMove={isInteractive ? handleMouseHover : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n\nSwarmPlotCanvas.displayName = 'SwarmPlotCanvas'\nSwarmPlotCanvas.propTypes = SwarmPlotCanvasPropTypes\nSwarmPlotCanvas.defaultProps = {\n    ...SwarmPlotCanvasDefaultProps,\n    renderNode: renderCanvasNode,\n}\n\nexport default withContainer(SwarmPlotCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport SwarmPlotCanvas from './SwarmPlotCanvas'\n\nconst ResponsiveSwarmPlotCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <SwarmPlotCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveSwarmPlotCanvas\n"],"names":["defineProperty","commonPropTypes","data","PropTypes","arrayOf","object","isRequired","groups","string","groupBy","oneOfType","func","identity","label","value","valueScale","scalePropType","size","number","shape","key","values","sizes","layout","oneOf","gap","forceStrength","simulationIterations","layers","renderNode","colors","ordinalColorsPropType","colorBy","colorPropertyAccessorPropType","borderWidth","borderColor","inheritedColorPropType","enableGridX","bool","gridXValues","enableGridY","gridYValues","axisTop","axisPropType","axisRight","axisBottom","axisLeft","annotations","annotationSpecPropType","isInteractive","onMouseEnter","onMouseMove","onMouseLeave","onClick","useMesh","debugMesh","tooltip","any","SwarmPlotPropTypes","role","motionPropTypes","SwarmPlotCanvasPropTypes","pixelRatio","commonDefaultProps","type","min","max","spacing","scheme","SwarmPlotDefaultProps","animate","motionStiffness","motionDamping","SwarmPlotCanvasDefaultProps","global","window","devicePixelRatio","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","getSizeGenerator","isNumber","isPlainObject","isString","Error","Array","isArray","length","sizeScale","scaleLinear","domain","range","d","get","computeValueScale","width","height","axis","getValue","scale","map","series","p","axes","generateSeriesAxis","computeScale","Math","computeOrdinalScale","groupCount","groupSize","g","i","scaleOrdinal","computeForces","ordinalScale","collisionForce","forceCollide","xForce","yForce","forceX","strength","forceY","group","x","y","collision","getParsedValue","scaleSpec","parseFloat","format","createDateNormalizer","computeNodes","getIdentity","getGroup","getSize","forces","valueScaleConfig","config","horizontal","vertical","simulatedNodes","id","simulation","forceSimulation","force","stop","tick","nodes","SwarmPlotTooltip","node","React","BasicTooltip","formattedValue","color","useValueScale","useMemo","useOrdinalScale","useForces","useSize","getAccessor","instruction","useSwarmPlot","valueFormat","getLabel","formatValue","useValueFormatter","getColor","useOrdinalColorScale","xScale","yScale","augmentedNodes","index","useBorderWidth","useNodeMouseHandlers","isEnabled","useTooltip","showTooltipFromEvent","hideTooltip","showNodeTooltip","event","mouseEnterHandler","useCallback","mouseMoveHandler","mouseLeaveHandler","clickHandler","useSwarmPlotAnnotations","items","useAnnotations","getDimensions","offset","willEnter","style","val","colorR","colorG","colorB","willLeave","springConfig","spring","AnimatedSwarmPlotNodes","memo","getBorderWidth","getBorderColor","stiffness","damping","TransitionMotion","interpolateColor","interpolatedStyles","getInterpolatedColor","Fragment","displayName","StaticSwarmPlotNodes","SwarmPlotNode","handleMouseEnter","handleMouseMove","handleMouseLeave","handleClick","defaultProps","SwarmPlotAnnotations","innerWidth","innerHeight","boundAnnotations","annotation","Annotation","SwarmPlot","partialMargin","margin","useDimensions","outerWidth","outerHeight","theme","useTheme","useInheritedColor","layerById","grid","Grid","Axes","mesh","enableNodeInteractivity","handlers","undefined","Mesh","layerContext","SvgWrapper","layer","props","withContainer","ResponsiveSwarmPlot","ResponsiveWrapper","arrayWithHoles","iterableToArrayLimit","nonIterableRest","renderCanvasNode","ctx","nodeBorderWidth","strokeStyle","lineWidth","beginPath","arc","PI","fillStyle","fill","stroke","SwarmPlotCanvas","canvasEl","useRef","useState","currentNode","setCurrentNode","computedAnnotations","useComputedAnnotations","useVoronoiMesh","points","debug","delaunay","voronoi","useEffect","current","getContext","background","fillRect","translate","left","top","forEach","line","strokeWidth","renderGridLinesToCanvas","renderAxesToCanvas","right","bottom","renderVoronoiToCanvas","renderVoronoiCellToCanvas","renderAnnotationsToCanvas","getNodeFromMouseEvent","getRelativeCursor","isCursorInRect","nodeIndex","find","handleMouseHover","cursor","ResponsiveSwarmPlotCanvas"],"mappings":"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"}