{"version":3,"file":"nivo-swarmplot.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/props.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/compute.js","../src/SwarmPlotTooltip.js","../src/hooks.js","../src/AnimatedSwarmPlotNodes.js","../src/StaticSwarmPlotNodes.js","../src/SwarmPlotNode.js","../src/SwarmPlotAnnotations.js","../src/SwarmPlot.js","../src/ResponsiveSwarmPlot.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/SwarmPlotCanvas.js","../src/ResponsiveSwarmPlotCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { axisPropType } from '@bitbloom/nivo-axes'\nimport { motionPropTypes } from '@bitbloom/nivo-core'\nimport {\n    ordinalColorsPropType,\n    inheritedColorPropType,\n    colorPropertyAccessorPropType,\n} from '@bitbloom/nivo-colors'\nimport { scalePropType } from '@bitbloom/nivo-scales'\nimport { annotationSpecPropType } from '@bitbloom/nivo-annotations'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    groups: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupBy: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    identity: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueScale: scalePropType.isRequired,\n    size: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            values: PropTypes.arrayOf(PropTypes.number).isRequired,\n            sizes: PropTypes.arrayOf(PropTypes.number).isRequired,\n        }),\n        PropTypes.func,\n    ]).isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    gap: PropTypes.number.isRequired,\n\n    forceStrength: PropTypes.number.isRequired,\n    simulationIterations: PropTypes.number.isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['grid', 'axes', 'nodes', 'mesh', 'annotations']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n    renderNode: PropTypes.func.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    colorBy: colorPropertyAccessorPropType.isRequired,\n    borderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    borderColor: inheritedColorPropType.isRequired,\n\n    enableGridX: PropTypes.bool.isRequired,\n    gridXValues: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n    enableGridY: PropTypes.bool.isRequired,\n    gridYValues: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    annotations: PropTypes.arrayOf(annotationSpecPropType).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    useMesh: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n    tooltip: PropTypes.any,\n}\n\nexport const SwarmPlotPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n    ...motionPropTypes,\n}\n\nexport const SwarmPlotCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    groupBy: 'group',\n    identity: 'id',\n    label: 'id',\n    value: 'value',\n    valueScale: { type: 'linear', min: 0, max: 'auto' },\n    size: 6,\n    spacing: 2,\n    layout: 'vertical',\n    gap: 0,\n\n    forceStrength: 1,\n    simulationIterations: 120,\n\n    layers: ['grid', 'axes', 'nodes', 'mesh', 'annotations'],\n\n    colors: { scheme: 'nivo' },\n    colorBy: 'group',\n    borderWidth: 0,\n    borderColor: 'none',\n\n    enableGridX: true,\n    enableGridY: true,\n    axisTop: {},\n    axisRight: {},\n    axisBottom: {},\n    axisLeft: {},\n\n    annotations: [],\n\n    isInteractive: true,\n    useMesh: false,\n    debugMesh: false,\n}\n\nexport const SwarmPlotDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    role: 'img',\n}\n\nexport const SwarmPlotCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport get from 'lodash/get'\nimport isString from 'lodash/isString'\nimport isNumber from 'lodash/isNumber'\nimport isPlainObject from 'lodash/isPlainObject'\nimport { scaleOrdinal, scaleLinear } from 'd3-scale'\nimport { forceSimulation, forceX, forceY, forceCollide } from 'd3-force'\nimport { computeScale, generateSeriesAxis, createDateNormalizer } from '@bitbloom/nivo-scales'\n\nexport const getSizeGenerator = size => {\n    if (typeof size === 'function') return size\n    if (isNumber(size)) return () => size\n    if (isPlainObject(size)) {\n        if (!isString(size.key)) {\n            throw new Error(\n                'Size is invalid, key should be a string pointing to the property to use to determine node size'\n            )\n        }\n        if (!Array.isArray(size.values) || size.values.length !== 2) {\n            throw new Error(\n                'Size is invalid, values spec should be an array containing two values, min and max'\n            )\n        }\n        if (!Array.isArray(size.sizes) || size.sizes.length !== 2) {\n            throw new Error(\n                'Size is invalid, sizes spec should be an array containing two values, min and max'\n            )\n        }\n\n        const sizeScale = scaleLinear()\n            .domain([size.values[0], size.values[1]])\n            .range([size.sizes[0], size.sizes[1]])\n\n        return d => sizeScale(get(d, size.key))\n    }\n\n    throw new Error('Size is invalid, it should be either a function, a number or an object')\n}\n\nexport const computeValueScale = ({ width, height, axis, getValue, scale, data }) => {\n    const values = data.map(getValue)\n    if (scale.type === 'time') {\n        const series = [{ data: values.map(p => ({ data: { [axis]: p } })) }]\n        const axes = generateSeriesAxis(series, axis, scale)\n        return computeScale({ ...scale, axis }, { [axis]: axes }, width, height)\n    } else {\n        const min = Math.min(...values)\n        const max = Math.max(...values)\n        return computeScale({ ...scale, axis }, { [axis]: { min, max } }, width, height)\n    }\n}\n\nexport const computeOrdinalScale = ({ width, height, axis, groups, gap }) => {\n    if (!Array.isArray(groups) || groups.length === 0) {\n        throw new Error(`'groups' should be an array containing at least one item`)\n    }\n\n    const groupCount = groups.length\n\n    let groupSize\n    if (axis === 'x') {\n        groupSize = (height - gap * (groupCount - 1)) / groupCount\n    } else if (axis === 'y') {\n        groupSize = (width - gap * (groupCount - 1)) / groupCount\n    }\n\n    const range = groups.map((g, i) => i * (groupSize + gap) + groupSize / 2)\n\n    return scaleOrdinal(range).domain(groups)\n}\n\nexport const computeForces = ({ axis, valueScale, ordinalScale, spacing, forceStrength }) => {\n    const collisionForce = forceCollide(d => d.size / 2 + spacing / 2)\n\n    let xForce\n    let yForce\n    if (axis === 'x') {\n        xForce = forceX(d => {\n            //console.log(d)\n            return valueScale(d.value)\n        }).strength(forceStrength)\n        yForce = forceY(d => ordinalScale(d.group))\n    } else if (axis === 'y') {\n        xForce = forceX(d => ordinalScale(d.group))\n        yForce = forceY(d => valueScale(d.value)).strength(forceStrength)\n    }\n\n    return { x: xForce, y: yForce, collision: collisionForce }\n}\n\nexport const getParsedValue = scaleSpec => {\n    if (scaleSpec.type === 'linear') {\n        return parseFloat\n    } else if (scaleSpec.type === 'time' && scaleSpec.format !== 'native') {\n        return createDateNormalizer(scaleSpec)\n    } else {\n        return x => x\n    }\n}\n\nexport const computeNodes = ({\n    data,\n    getIdentity,\n    layout,\n    getValue,\n    valueScale,\n    getGroup,\n    ordinalScale,\n    getSize,\n    forces,\n    simulationIterations,\n    valueScaleConfig,\n}) => {\n    const config = {\n        horizontal: ['x', 'y'],\n        vertical: ['y', 'x'],\n    }\n\n    const simulatedNodes = data.map(d => ({\n        id: getIdentity(d),\n        group: getGroup(d),\n        value: getParsedValue(valueScaleConfig)(getValue(d)),\n        size: getSize(d),\n        data: { ...d },\n    }))\n    const simulation = forceSimulation(simulatedNodes)\n        .force('x', forces.x)\n        .force('y', forces.y)\n        .force('collide', forces.collision)\n        .stop()\n\n    simulation.tick(simulationIterations)\n\n    return {\n        [`${config[layout][0]}Scale`]: valueScale,\n        [`${config[layout][1]}Scale`]: ordinalScale,\n        nodes: simulation.nodes(),\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@bitbloom/nivo-tooltip'\n\nconst SwarmPlotTooltip = ({ node }) => (\n    <BasicTooltip\n        id={node.label}\n        value={node.formattedValue}\n        enableChip={true}\n        color={node.color}\n    />\n)\n\nSwarmPlotTooltip.propTypes = {\n    node: PropTypes.shape({\n        label: PropTypes.string.isRequired,\n        value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        formattedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default SwarmPlotTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo, useCallback } from 'react'\nimport get from 'lodash/get'\nimport { useValueFormatter } from '@bitbloom/nivo-core'\nimport { useOrdinalColorScale } from '@bitbloom/nivo-colors'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\n\nimport {\n    computeValueScale,\n    computeOrdinalScale,\n    computeForces,\n    computeNodes,\n    getSizeGenerator,\n} from './compute'\nimport { useAnnotations } from '@bitbloom/nivo-annotations'\nimport SwarmPlotTooltip from './SwarmPlotTooltip'\n\nexport const useValueScale = ({ width, height, axis, getValue, scale, data }) =>\n    useMemo(\n        () =>\n            computeValueScale({\n                width,\n                height,\n                axis,\n                getValue,\n                scale,\n                data,\n            }),\n        [width, height, axis, getValue, scale, data]\n    )\n\nexport const useOrdinalScale = ({ width, height, axis, groups, gap }) =>\n    useMemo(() => computeOrdinalScale({ width, height, axis, groups, gap }), [\n        width,\n        height,\n        axis,\n        groups,\n        gap,\n    ])\n\nexport const useForces = ({ axis, valueScale, ordinalScale, getSize, spacing, forceStrength }) =>\n    useMemo(\n        () =>\n            computeForces({\n                axis,\n                valueScale,\n                ordinalScale,\n                getSize,\n                spacing,\n                forceStrength,\n            }),\n        [axis, valueScale, ordinalScale, getSize, spacing, forceStrength]\n    )\n\nconst useSize = size => useMemo(() => getSizeGenerator(size), [size])\n\nconst getAccessor = instruction => {\n    if (typeof instruction === 'function') return instruction\n    return d => get(d, instruction)\n}\n\nexport const useSwarmPlot = ({\n    width,\n    height,\n    data,\n    identity,\n    label,\n    groups,\n    groupBy,\n    value,\n    valueFormat,\n    valueScale: valueScaleConfig,\n    size,\n    spacing,\n    layout,\n    gap,\n    colors,\n    colorBy,\n    forceStrength,\n    simulationIterations,\n}) => {\n    const axis = layout === 'horizontal' ? 'x' : 'y'\n\n    const getIdentity = useMemo(() => getAccessor(identity), [identity])\n    const getLabel = useMemo(() => getAccessor(label), [label])\n    const getValue = useMemo(() => getAccessor(value), [value])\n    const formatValue = useValueFormatter(valueFormat)\n    const getGroup = useMemo(() => getAccessor(groupBy), [groupBy])\n    const getSize = useSize(size)\n    const getColor = useOrdinalColorScale(colors, colorBy)\n\n    const valueScale = useValueScale({\n        width,\n        height,\n        axis,\n        getValue,\n        scale: valueScaleConfig,\n        data,\n    })\n\n    const ordinalScale = useOrdinalScale({\n        width,\n        height,\n        axis,\n        groups,\n        gap,\n    })\n\n    const forces = useForces({\n        axis,\n        valueScale,\n        ordinalScale,\n        spacing,\n        forceStrength,\n    })\n\n    const { nodes, xScale, yScale } = useMemo(\n        () =>\n            computeNodes({\n                data,\n                getIdentity,\n                layout,\n                getValue,\n                valueScale,\n                getGroup,\n                ordinalScale,\n                getSize,\n                forces,\n                simulationIterations,\n                valueScaleConfig,\n            }),\n        [\n            data,\n            getIdentity,\n            layout,\n            getValue,\n            valueScale,\n            getGroup,\n            ordinalScale,\n            getSize,\n            forces,\n            simulationIterations,\n        ]\n    )\n\n    const augmentedNodes = useMemo(\n        () =>\n            nodes.map(node => ({\n                id: node.id,\n                index: node.index,\n                group: node.group,\n                label: getLabel(node),\n                value: node.value,\n                formattedValue: formatValue(node.value),\n                x: node.x,\n                y: node.y,\n                size: node.size,\n                color: getColor(node),\n                data: node.data,\n            })),\n        [nodes, getLabel, formatValue, getColor]\n    )\n\n    return {\n        nodes: augmentedNodes,\n        xScale,\n        yScale,\n        getColor,\n    }\n}\n\nexport const useBorderWidth = borderWidth =>\n    useMemo(() => {\n        if (typeof borderWidth === 'function') return borderWidth\n        return () => borderWidth\n    }, [borderWidth])\n\nexport const useNodeMouseHandlers = ({\n    isEnabled,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const showNodeTooltip = useMemo(() => {\n        if (tooltip) return (node, event) => showTooltipFromEvent(tooltip({ node }), event)\n        return (node, event) => showTooltipFromEvent(<SwarmPlotTooltip node={node} />, event)\n    }, [showTooltipFromEvent])\n\n    const mouseEnterHandler = useCallback(\n        (node, event) => {\n            if (!isEnabled) return\n            showNodeTooltip(node, event)\n            onMouseEnter && onMouseEnter(node, event)\n        },\n        [isEnabled, onMouseEnter]\n    )\n\n    const mouseMoveHandler = useCallback(\n        (node, event) => {\n            if (!isEnabled) return\n            showNodeTooltip(node, event)\n            onMouseMove && onMouseMove(node, event)\n        },\n        [isEnabled, onMouseMove]\n    )\n\n    const mouseLeaveHandler = useCallback(\n        (node, event) => {\n            if (!isEnabled) return\n            hideTooltip()\n            onMouseLeave && onMouseLeave(node, event)\n        },\n        [isEnabled, onMouseLeave],\n        hideTooltip\n    )\n\n    const clickHandler = useCallback(\n        (node, event) => {\n            isEnabled && onClick && onClick(node, event)\n        },\n        [isEnabled, onClick]\n    )\n\n    return {\n        onMouseEnter: mouseEnterHandler,\n        onMouseMove: mouseMoveHandler,\n        onMouseLeave: mouseLeaveHandler,\n        onClick: clickHandler,\n    }\n}\n\nexport const useSwarmPlotAnnotations = (items, annotations) =>\n    useAnnotations({\n        items,\n        annotations,\n        getDimensions: (node, offset) => {\n            const size = node.size + offset * 2\n\n            return { size, width: size, height: size }\n        },\n    })\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { interpolateColor, getInterpolatedColor } from '@bitbloom/nivo-colors'\n\nconst willEnter = ({ style }) => ({\n    x: style.x.val,\n    y: style.y.val,\n    size: style.size.val,\n    colorR: style.colorR.val,\n    colorG: style.colorG.val,\n    colorB: style.colorB.val,\n    scale: 0,\n})\n\nconst willLeave = springConfig => ({ style }) => ({\n    x: style.x,\n    y: style.y,\n    size: style.size,\n    colorR: style.colorR,\n    colorG: style.colorG,\n    colorB: style.colorB,\n    scale: spring(0, springConfig),\n})\n\nconst AnimatedSwarmPlotNodes = memo(\n    ({\n        nodes,\n        renderNode,\n        getBorderWidth,\n        getBorderColor,\n        motionStiffness,\n        motionDamping,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n    }) => {\n        const springConfig = {\n            stiffness: motionStiffness,\n            damping: motionDamping,\n        }\n\n        return (\n            <TransitionMotion\n                willEnter={willEnter}\n                willLeave={willLeave(springConfig)}\n                styles={nodes.map(node => ({\n                    key: node.id,\n                    data: node,\n                    style: {\n                        x: spring(node.x, springConfig),\n                        y: spring(node.y, springConfig),\n                        size: spring(node.size, springConfig),\n                        ...interpolateColor(node.color, springConfig),\n                        scale: spring(1, springConfig),\n                    },\n                }))}\n            >\n                {interpolatedStyles => (\n                    <>\n                        {interpolatedStyles.map(({ key, style, data: node }) => {\n                            const color = getInterpolatedColor(style)\n\n                            return (\n                                <Fragment key={key}>\n                                    {renderNode({\n                                        node,\n                                        x: style.x,\n                                        y: style.y,\n                                        size: style.size,\n                                        scale: style.scale,\n                                        color,\n                                        borderWidth: getBorderWidth(node),\n                                        borderColor: getBorderColor(node),\n                                        isInteractive,\n                                        onMouseEnter,\n                                        onMouseMove,\n                                        onMouseLeave,\n                                        onClick,\n                                    })}\n                                </Fragment>\n                            )\n                        })}\n                    </>\n                )}\n            </TransitionMotion>\n        )\n    }\n)\n\nAnimatedSwarmPlotNodes.displayName = 'AnimatedSwarmPlotNodes'\nAnimatedSwarmPlotNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    renderNode: PropTypes.func.isRequired,\n    getBorderWidth: PropTypes.func.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    motionStiffness: PropTypes.number.isRequired,\n    motionDamping: PropTypes.number.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default AnimatedSwarmPlotNodes\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\nconst StaticSwarmPlotNodes = memo(\n    ({\n        nodes,\n        renderNode,\n        getBorderWidth,\n        getBorderColor,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n    }) => {\n        return nodes.map(node => {\n            return (\n                <Fragment key={node.id}>\n                    {renderNode({\n                        node,\n                        x: node.x,\n                        y: node.y,\n                        size: node.size,\n                        color: node.color,\n                        borderWidth: getBorderWidth(node),\n                        borderColor: getBorderColor(node),\n                        isInteractive,\n                        onMouseEnter,\n                        onMouseMove,\n                        onMouseLeave,\n                        onClick,\n                    })}\n                </Fragment>\n            )\n        })\n    }\n)\n\nStaticSwarmPlotNodes.displayName = 'StaticSwarmPlotNodes'\nStaticSwarmPlotNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    renderNode: PropTypes.func.isRequired,\n    getBorderWidth: PropTypes.func.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default StaticSwarmPlotNodes\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\n\nconst SwarmPlotNode = memo(\n    ({\n        node,\n        x,\n        y,\n        size,\n        scale,\n        color,\n        borderWidth,\n        borderColor,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n    }) => {\n        const handleMouseEnter = useCallback(event => onMouseEnter && onMouseEnter(node, event), [\n            node,\n            onMouseEnter,\n        ])\n        const handleMouseMove = useCallback(event => onMouseMove && onMouseEnter(node, event), [\n            node,\n            onMouseMove,\n        ])\n        const handleMouseLeave = useCallback(event => onMouseLeave && onMouseLeave(node, event), [\n            node,\n            onMouseLeave,\n        ])\n        const handleClick = useCallback(event => onClick && onClick(node, event), [node, onClick])\n\n        return (\n            <circle\n                transform={`translate(${x},${y}) scale(${scale})`}\n                r={size / 2}\n                fill={color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nSwarmPlotNode.displayName = 'SwarmPlotNode'\nSwarmPlotNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    scale: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\nSwarmPlotNode.defaultProps = {\n    scale: 1,\n}\n\nexport default SwarmPlotNode\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { Annotation } from '@bitbloom/nivo-annotations'\nimport { useSwarmPlotAnnotations } from './hooks'\n\nconst SwarmPlotAnnotations = ({ nodes, annotations, innerWidth, innerHeight }) => {\n    const boundAnnotations = useSwarmPlotAnnotations(nodes, annotations)\n\n    return boundAnnotations.map((annotation, i) => (\n        <Annotation\n            key={i}\n            {...annotation}\n            containerWidth={innerWidth}\n            containerHeight={innerHeight}\n        />\n    ))\n}\n\nSwarmPlotAnnotations.propTypes = {}\n\nexport default SwarmPlotAnnotations\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, Fragment } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@bitbloom/nivo-core'\nimport { useInheritedColor } from '@bitbloom/nivo-colors'\nimport { Axes, Grid } from '@bitbloom/nivo-axes'\nimport { Mesh } from '@bitbloom/nivo-voronoi'\nimport { SwarmPlotPropTypes, SwarmPlotDefaultProps } from './props'\nimport { useSwarmPlot, useBorderWidth, useNodeMouseHandlers } from './hooks'\nimport AnimatedSwarmPlotNodes from './AnimatedSwarmPlotNodes'\nimport StaticSwarmPlotNodes from './StaticSwarmPlotNodes'\nimport SwarmPlotNode from './SwarmPlotNode'\nimport SwarmPlotAnnotations from './SwarmPlotAnnotations'\n\nconst SwarmPlot = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        data,\n        groups,\n        groupBy,\n        identity,\n        label,\n        value,\n        valueFormat,\n        valueScale,\n        size,\n        spacing,\n        layout,\n        gap,\n\n        forceStrength,\n        simulationIterations,\n\n        layers,\n        renderNode,\n\n        colors,\n        colorBy,\n        borderWidth,\n        borderColor,\n\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n\n        annotations,\n\n        isInteractive,\n        useMesh,\n        debugMesh,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        role,\n\n        animate,\n        motionStiffness,\n        motionDamping,\n    }) => {\n        const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n            width,\n            height,\n            partialMargin\n        )\n        const theme = useTheme()\n\n        const { nodes, xScale, yScale } = useSwarmPlot({\n            width: innerWidth,\n            height: innerHeight,\n            data,\n            groups,\n            groupBy,\n            identity,\n            label,\n            value,\n            valueFormat,\n            valueScale,\n            size,\n            spacing,\n            layout,\n            gap,\n            colors,\n            colorBy,\n            forceStrength,\n            simulationIterations,\n        })\n\n        const getBorderWidth = useBorderWidth(borderWidth)\n        const getBorderColor = useInheritedColor(borderColor, theme)\n\n        const layerById = {\n            grid: (\n                <Grid\n                    key=\"grid\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    xScale={enableGridX ? xScale : null}\n                    xValues={gridXValues}\n                    yScale={enableGridY ? yScale : null}\n                    yValues={gridYValues}\n                />\n            ),\n            axes: (\n                <Axes\n                    key=\"axes\"\n                    xScale={xScale}\n                    yScale={yScale}\n                    width={innerWidth}\n                    height={innerHeight}\n                    top={axisTop}\n                    right={axisRight}\n                    bottom={axisBottom}\n                    left={axisLeft}\n                />\n            ),\n            mesh: null,\n            annotations: (\n                <SwarmPlotAnnotations\n                    key=\"annotations\"\n                    nodes={nodes}\n                    annotations={annotations}\n                    innerWidth={innerWidth}\n                    innerHeight={innerHeight}\n                    animate={animate}\n                    motionStiffness={motionStiffness}\n                    motionDamping={motionDamping}\n                />\n            ),\n        }\n\n        const enableNodeInteractivity = isInteractive && !useMesh\n        const handlers = useNodeMouseHandlers({\n            isEnabled: isInteractive,\n            onMouseEnter,\n            onMouseMove,\n            onMouseLeave,\n            onClick,\n            tooltip,\n        })\n\n        if (animate) {\n            layerById.nodes = (\n                <AnimatedSwarmPlotNodes\n                    key=\"nodes\"\n                    nodes={nodes}\n                    renderNode={renderNode}\n                    getBorderWidth={getBorderWidth}\n                    getBorderColor={getBorderColor}\n                    motionStiffness={motionStiffness}\n                    motionDamping={motionDamping}\n                    isInteractive={enableNodeInteractivity}\n                    onMouseEnter={!useMesh ? handlers.onMouseEnter : undefined}\n                    onMouseMove={!useMesh ? handlers.onMouseMove : undefined}\n                    onMouseLeave={!useMesh ? handlers.onMouseLeave : undefined}\n                    onClick={!useMesh ? handlers.onClick : undefined}\n                />\n            )\n        } else {\n            layerById.nodes = (\n                <StaticSwarmPlotNodes\n                    key=\"nodes\"\n                    nodes={nodes}\n                    renderNode={renderNode}\n                    getBorderWidth={getBorderWidth}\n                    getBorderColor={getBorderColor}\n                    isInteractive={enableNodeInteractivity}\n                    onMouseEnter={!useMesh ? handlers.onMouseEnter : undefined}\n                    onMouseMove={!useMesh ? handlers.onMouseMove : undefined}\n                    onMouseLeave={!useMesh ? handlers.onMouseLeave : undefined}\n                    onClick={!useMesh ? handlers.onClick : undefined}\n                />\n            )\n        }\n\n        if (isInteractive === true && useMesh === true) {\n            layerById.mesh = (\n                <Mesh\n                    key=\"mesh\"\n                    nodes={nodes}\n                    width={innerWidth}\n                    height={innerHeight}\n                    onMouseEnter={handlers.onMouseEnter}\n                    onMouseMove={handlers.onMouseMove}\n                    onMouseLeave={handlers.onMouseLeave}\n                    onClick={handlers.onClick}\n                    debug={debugMesh}\n                />\n            )\n        }\n\n        const layerContext = {\n            nodes,\n            xScale,\n            yScale,\n            innerWidth,\n            innerHeight,\n            outerWidth,\n            outerHeight,\n            margin,\n            getBorderColor,\n            getBorderWidth,\n            animate,\n            motionStiffness,\n            motionDamping,\n        }\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                role={role}\n            >\n                {layers.map((layer, i) => {\n                    if (layerById[layer] !== undefined) {\n                        return layerById[layer]\n                    }\n                    if (typeof layer === 'function') {\n                        return <Fragment key={i}>{layer(layerContext)}</Fragment>\n                    }\n\n                    return null\n                })}\n            </SvgWrapper>\n        )\n    }\n)\n\nSwarmPlot.displayName = 'SwarmPlot'\nSwarmPlot.propTypes = SwarmPlotPropTypes\nSwarmPlot.defaultProps = {\n    ...SwarmPlotDefaultProps,\n    renderNode: props => <SwarmPlotNode {...props} />, // eslint-disable-line react/display-name\n}\n\nexport default withContainer(SwarmPlot)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport SwarmPlot from './SwarmPlot'\n\nconst ResponsiveSwarmPlot = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <SwarmPlot width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveSwarmPlot\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useRef, useState, useEffect, useCallback, useMemo } from 'react'\nimport {\n    getRelativeCursor,\n    isCursorInRect,\n    withContainer,\n    useDimensions,\n    useTheme,\n} from '@bitbloom/nivo-core'\nimport { useInheritedColor } from '@bitbloom/nivo-colors'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@bitbloom/nivo-axes'\nimport { useComputedAnnotations, renderAnnotationsToCanvas } from '@bitbloom/nivo-annotations'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@bitbloom/nivo-voronoi'\nimport { SwarmPlotCanvasDefaultProps, SwarmPlotCanvasPropTypes } from './props'\nimport { useSwarmPlot, useBorderWidth, useSwarmPlotAnnotations } from './hooks'\nimport SwarmPlotTooltip from './SwarmPlotTooltip'\n\nexport const renderCanvasNode = (ctx, { node, getBorderWidth, getBorderColor }) => {\n    const nodeBorderWidth = getBorderWidth(node)\n    if (nodeBorderWidth > 0) {\n        ctx.strokeStyle = getBorderColor(node)\n        ctx.lineWidth = nodeBorderWidth\n    }\n\n    ctx.beginPath()\n    ctx.arc(node.x, node.y, node.size / 2, 0, 2 * Math.PI)\n    ctx.fillStyle = node.color\n    ctx.fill()\n\n    if (nodeBorderWidth > 0) {\n        ctx.stroke()\n    }\n}\n\nconst SwarmPlotCanvas = memo(\n    ({\n        pixelRatio,\n        width,\n        height,\n        margin: partialMargin,\n        data,\n        groups,\n        groupBy,\n        identity,\n        label,\n        value,\n        valueFormat,\n        valueScale,\n        size,\n        spacing,\n        layout,\n        gap,\n        forceStrength,\n        simulationIterations,\n        layers,\n        renderNode,\n        colors,\n        colorBy,\n        borderWidth,\n        borderColor,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        annotations,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        debugMesh,\n    }) => {\n        const canvasEl = useRef(null)\n        const [currentNode, setCurrentNode] = useState(null)\n        const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n            width,\n            height,\n            partialMargin\n        )\n        const theme = useTheme()\n\n        const { nodes, xScale, yScale } = useSwarmPlot({\n            width: innerWidth,\n            height: innerHeight,\n            data,\n            groups,\n            groupBy,\n            identity,\n            label,\n            value,\n            valueFormat,\n            valueScale,\n            size,\n            spacing,\n            layout,\n            gap,\n            colors,\n            colorBy,\n            forceStrength,\n            simulationIterations,\n        })\n\n        const boundAnnotations = useSwarmPlotAnnotations(nodes, annotations)\n        const computedAnnotations = useComputedAnnotations({\n            annotations: boundAnnotations,\n            innerWidth,\n            innerHeight,\n        })\n\n        const getBorderWidth = useBorderWidth(borderWidth)\n        const getBorderColor = useInheritedColor(borderColor, theme)\n\n        const { delaunay, voronoi } = useVoronoiMesh({\n            points: nodes,\n            width: innerWidth,\n            height: innerHeight,\n            debug: debugMesh,\n        })\n\n        useEffect(() => {\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            layers.forEach(layer => {\n                if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke\n\n                    enableGridX &&\n                        renderGridLinesToCanvas(ctx, {\n                            width: innerWidth,\n                            height: innerHeight,\n                            scale: xScale,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n\n                    enableGridY &&\n                        renderGridLinesToCanvas(ctx, {\n                            width: innerWidth,\n                            height: innerHeight,\n                            scale: yScale,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                }\n\n                if (layer === 'axes') {\n                    renderAxesToCanvas(ctx, {\n                        xScale,\n                        yScale,\n                        width: innerWidth,\n                        height: innerHeight,\n                        top: axisTop,\n                        right: axisRight,\n                        bottom: axisBottom,\n                        left: axisLeft,\n                        theme,\n                    })\n                }\n\n                if (layer === 'nodes') {\n                    nodes.forEach(node => {\n                        renderNode(ctx, {\n                            node,\n                            getBorderWidth,\n                            getBorderColor,\n                        })\n                    })\n                }\n\n                if (layer === 'mesh' && debugMesh === true) {\n                    renderVoronoiToCanvas(ctx, voronoi)\n                    if (currentNode) {\n                        renderVoronoiCellToCanvas(ctx, voronoi, currentNode.index)\n                    }\n                }\n\n                if (layer === 'annotations') {\n                    renderAnnotationsToCanvas(ctx, {\n                        annotations: computedAnnotations,\n                        theme,\n                    })\n                }\n\n                if (typeof layer === 'function') {\n                    layer(ctx, {\n                        nodes,\n                        innerWidth,\n                        innerHeight,\n                        outerWidth,\n                        outerHeight,\n                        margin,\n                        xScale,\n                        yScale,\n                    })\n                }\n            })\n        }, [\n            canvasEl,\n            innerWidth,\n            innerHeight,\n            outerWidth,\n            outerHeight,\n            margin,\n            pixelRatio,\n            theme,\n            layers,\n            nodes,\n            xScale,\n            yScale,\n            getBorderWidth,\n            getBorderColor,\n            voronoi,\n            currentNode,\n            computedAnnotations,\n        ])\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const showNodeTooltip = useMemo(() => {\n            if (tooltip) return (node, event) => showTooltipFromEvent(tooltip({ node }), event)\n            return (node, event) => showTooltipFromEvent(<SwarmPlotTooltip node={node} />, event)\n        }, [showTooltipFromEvent, tooltip])\n\n        const getNodeFromMouseEvent = useCallback(\n            event => {\n                const [x, y] = getRelativeCursor(canvasEl.current, event)\n                if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y))\n                    return null\n\n                const nodeIndex = delaunay.find(x - margin.left, y - margin.top)\n                return nodes[nodeIndex]\n            },\n            [canvasEl, margin, innerWidth, innerHeight, delaunay]\n        )\n\n        const handleMouseHover = useCallback(\n            event => {\n                const node = getNodeFromMouseEvent(event)\n                setCurrentNode(node)\n                onMouseMove && onMouseMove(node, event)\n                if (node) {\n                    showNodeTooltip(node, event)\n                    if ((!currentNode || currentNode.id !== node.id) && onMouseEnter) {\n                        onMouseEnter(node, event)\n                    }\n                    if (currentNode && currentNode.id !== node.id && onMouseLeave) {\n                        onMouseLeave(currentNode, event)\n                    }\n                } else {\n                    currentNode && onMouseLeave && onMouseLeave(currentNode, event)\n                    hideTooltip()\n                }\n            },\n            [\n                getNodeFromMouseEvent,\n                currentNode,\n                onMouseEnter,\n                onMouseLeave,\n                showNodeTooltip,\n                hideTooltip,\n            ]\n        )\n\n        const handleMouseLeave = useCallback(\n            event => {\n                hideTooltip()\n                setCurrentNode(null)\n                onMouseLeave && onMouseLeave(currentNode, event)\n            },\n            [hideTooltip, setCurrentNode, currentNode, onMouseLeave]\n        )\n\n        const handleClick = useCallback(\n            event => {\n                const node = getNodeFromMouseEvent(event)\n                node && onClick && onClick(node, event)\n            },\n            [getNodeFromMouseEvent, onClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                    cursor: isInteractive ? 'auto' : 'normal',\n                }}\n                onMouseEnter={isInteractive ? handleMouseHover : undefined}\n                onMouseMove={isInteractive ? handleMouseHover : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n\nSwarmPlotCanvas.displayName = 'SwarmPlotCanvas'\nSwarmPlotCanvas.propTypes = SwarmPlotCanvasPropTypes\nSwarmPlotCanvas.defaultProps = {\n    ...SwarmPlotCanvasDefaultProps,\n    renderNode: renderCanvasNode,\n}\n\nexport default withContainer(SwarmPlotCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport SwarmPlotCanvas from './SwarmPlotCanvas'\n\nconst ResponsiveSwarmPlotCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <SwarmPlotCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveSwarmPlotCanvas\n"],"names":["defineProperty","commonPropTypes","data","PropTypes","arrayOf","object","isRequired","groups","string","groupBy","oneOfType","func","identity","label","value","valueScale","scalePropType","size","number","shape","key","values","sizes","layout","oneOf","gap","forceStrength","simulationIterations","layers","renderNode","colors","ordinalColorsPropType","colorBy","colorPropertyAccessorPropType","borderWidth","borderColor","inheritedColorPropType","enableGridX","bool","gridXValues","enableGridY","gridYValues","axisTop","axisPropType","axisRight","axisBottom","axisLeft","annotations","annotationSpecPropType","isInteractive","onMouseEnter","onMouseMove","onMouseLeave","onClick","useMesh","debugMesh","tooltip","any","SwarmPlotPropTypes","role","motionPropTypes","SwarmPlotCanvasPropTypes","pixelRatio","commonDefaultProps","type","min","max","spacing","scheme","SwarmPlotDefaultProps","animate","motionStiffness","motionDamping","SwarmPlotCanvasDefaultProps","global","window","devicePixelRatio","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","getSizeGenerator","isNumber","isPlainObject","isString","Error","Array","isArray","length","sizeScale","scaleLinear","domain","range","d","get","computeValueScale","width","height","axis","getValue","scale","map","series","p","axes","generateSeriesAxis","computeScale","Math","computeOrdinalScale","groupCount","groupSize","g","i","scaleOrdinal","computeForces","ordinalScale","collisionForce","forceCollide","xForce","yForce","forceX","strength","forceY","group","x","y","collision","getParsedValue","scaleSpec","parseFloat","format","createDateNormalizer","computeNodes","getIdentity","getGroup","getSize","forces","valueScaleConfig","config","horizontal","vertical","simulatedNodes","id","simulation","forceSimulation","force","stop","tick","nodes","SwarmPlotTooltip","node","formattedValue","color","useValueScale","useMemo","useOrdinalScale","useForces","useSize","getAccessor","instruction","useSwarmPlot","valueFormat","getLabel","formatValue","useValueFormatter","getColor","useOrdinalColorScale","xScale","yScale","augmentedNodes","index","useBorderWidth","useNodeMouseHandlers","isEnabled","useTooltip","showTooltipFromEvent","hideTooltip","showNodeTooltip","event","mouseEnterHandler","useCallback","mouseMoveHandler","mouseLeaveHandler","clickHandler","useSwarmPlotAnnotations","items","useAnnotations","getDimensions","offset","willEnter","style","val","colorR","colorG","colorB","willLeave","springConfig","spring","AnimatedSwarmPlotNodes","memo","getBorderWidth","getBorderColor","stiffness","damping","interpolateColor","interpolatedStyles","getInterpolatedColor","displayName","StaticSwarmPlotNodes","SwarmPlotNode","handleMouseEnter","handleMouseMove","handleMouseLeave","handleClick","defaultProps","SwarmPlotAnnotations","innerWidth","innerHeight","boundAnnotations","annotation","SwarmPlot","partialMargin","margin","useDimensions","outerWidth","outerHeight","theme","useTheme","useInheritedColor","layerById","grid","mesh","enableNodeInteractivity","handlers","undefined","layerContext","layer","props","withContainer","ResponsiveSwarmPlot","arrayWithHoles","iterableToArrayLimit","nonIterableRest","renderCanvasNode","ctx","nodeBorderWidth","strokeStyle","lineWidth","beginPath","arc","PI","fillStyle","fill","stroke","SwarmPlotCanvas","canvasEl","useRef","useState","currentNode","setCurrentNode","computedAnnotations","useComputedAnnotations","useVoronoiMesh","points","debug","delaunay","voronoi","useEffect","current","getContext","background","fillRect","translate","left","top","forEach","line","strokeWidth","renderGridLinesToCanvas","renderAxesToCanvas","right","bottom","renderVoronoiToCanvas","renderVoronoiCellToCanvas","renderAnnotationsToCanvas","getNodeFromMouseEvent","getRelativeCursor","isCursorInRect","nodeIndex","find","handleMouseHover","cursor","ResponsiveSwarmPlotCanvas"],"mappings":"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"}