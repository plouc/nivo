{"version":3,"file":"nivo-network.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/props.js","../src/hooks.js","../src/Node.js","../src/AnimatedNodes.js","../src/StaticNodes.js","../src/Link.js","../src/AnimatedLinks.js","../src/StaticLinks.js","../src/NetworkNodeTooltip.js","../src/Network.js","../src/ResponsiveNetwork.js","../src/NetworkCanvas.js","../src/ResponsiveNetworkCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes } from '@bitbloom/nivo-core'\nimport { inheritedColorPropType } from '@bitbloom/nivo-colors'\n\nconst commonPropTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    links: PropTypes.arrayOf(\n        PropTypes.shape({\n            source: PropTypes.string.isRequired,\n            target: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['links', 'nodes']), PropTypes.func])\n    ).isRequired,\n\n    linkDistance: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.number])\n        .isRequired,\n    repulsivity: PropTypes.number.isRequired,\n    distanceMin: PropTypes.number.isRequired,\n    distanceMax: PropTypes.number.isRequired,\n    iterations: PropTypes.number.isRequired,\n\n    nodeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    nodeBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    nodeBorderColor: inheritedColorPropType.isRequired,\n\n    linkThickness: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    linkColor: inheritedColorPropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n}\n\nexport const NetworkPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n    ...motionPropTypes,\n}\n\nexport const NetworkCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    layers: ['links', 'nodes'],\n\n    linkDistance: 30,\n    repulsivity: 10,\n    distanceMin: 1,\n    distanceMax: Infinity,\n    iterations: 90,\n\n    nodeBorderWidth: 0,\n    nodeBorderColor: { from: 'color' },\n\n    linkThickness: 1,\n    linkColor: { from: 'source.color' },\n\n    isInteractive: true,\n}\n\nexport const NetworkDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    role: 'img',\n}\n\nexport const NetworkCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useState, useEffect, useMemo } from 'react'\nimport get from 'lodash/get'\nimport isString from 'lodash/isString'\nimport isNumber from 'lodash/isNumber'\nimport { forceSimulation, forceManyBody, forceCenter, forceLink } from 'd3-force'\n\nconst computeForces = ({ linkDistance, repulsivity, distanceMin, distanceMax, center }) => {\n    let computedLinkDistance\n    if (typeof linkDistance === 'function') {\n        computedLinkDistance = linkDistance\n    } else if (isNumber(linkDistance)) {\n        computedLinkDistance = linkDistance\n    } else if (isString(linkDistance)) {\n        computedLinkDistance = link => get(link, linkDistance)\n    }\n\n    const linkForce = forceLink()\n        .id(d => d.id)\n        .distance(computedLinkDistance)\n\n    const chargeForce = forceManyBody()\n        .strength(-repulsivity)\n        .distanceMin(distanceMin)\n        .distanceMax(distanceMax)\n\n    const centerForce = forceCenter(center[0], center[1])\n\n    return { link: linkForce, charge: chargeForce, center: centerForce }\n}\n\nexport const useNetwork = ({\n    nodes,\n    links,\n    linkDistance,\n    repulsivity,\n    distanceMin,\n    distanceMax,\n    center,\n    iterations,\n}) => {\n    const [currentNodes, setCurrentNodes] = useState([])\n    const [currentLinks, setCurrentLinks] = useState([])\n\n    useEffect(() => {\n        const forces = computeForces({\n            linkDistance,\n            repulsivity,\n            distanceMin,\n            distanceMax,\n            center,\n        })\n\n        const nodesCopy = nodes.map(node => ({ ...node }))\n        const linksCopy = links.map(link => ({\n            id: `${link.source}.${link.target}`,\n            ...link,\n        }))\n\n        const simulation = forceSimulation(nodesCopy)\n            .force('link', forces.link.links(linksCopy))\n            .force('charge', forces.charge)\n            .force('center', forces.center)\n            .stop()\n\n        simulation.tick(iterations)\n\n        setCurrentNodes(nodesCopy)\n        setCurrentLinks(\n            linksCopy.map(link => {\n                link.previousSource = currentNodes.find(n => n.id === link.source.id)\n                link.previousTarget = currentNodes.find(n => n.id === link.target.id)\n\n                return link\n            })\n        )\n\n        return () => {\n            simulation.stop()\n        }\n    }, [\n        nodes,\n        links,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center[0],\n        center[1],\n    ])\n\n    return [currentNodes, currentLinks]\n}\n\nexport const useNodeColor = color =>\n    useMemo(() => {\n        if (typeof color === 'function') return color\n        return () => color\n    }, [color])\n\nexport const useLinkThickness = thickness =>\n    useMemo(() => {\n        if (typeof thickness === 'function') return thickness\n        return () => thickness\n    }, [thickness])\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Node = ({\n    node,\n    x,\n    y,\n    radius,\n    color,\n    borderWidth,\n    borderColor,\n    scale = 1,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    return (\n        <circle\n            transform={`translate(${x},${y}) scale(${scale})`}\n            r={radius}\n            fill={color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            onMouseEnter={event => handleNodeHover(node, event)}\n            onMouseMove={event => handleNodeHover(node, event)}\n            onMouseLeave={handleNodeLeave}\n        />\n    )\n}\n\nNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    radius: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    scale: PropTypes.number,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default memo(Node)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@bitbloom/nivo-core'\nimport Node from './Node'\n\nconst willEnter = ({ style }) => ({\n    x: style.x.val,\n    y: style.y.val,\n    radius: style.radius.val,\n    scale: 0,\n})\n\nconst willLeave = springConfig => ({ style }) => ({\n    x: style.x,\n    y: style.y,\n    radius: style.radius,\n    scale: spring(0, springConfig),\n})\n\nconst AnimatedNodes = ({\n    nodes,\n    color,\n    borderWidth,\n    borderColor,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            willLeave={willLeave(springConfig)}\n            styles={nodes.map(node => ({\n                key: node.id,\n                data: node,\n                style: {\n                    x: spring(node.x, springConfig),\n                    y: spring(node.y, springConfig),\n                    radius: spring(node.radius, springConfig),\n                    scale: spring(1, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: node }) => {\n                        return (\n                            <Node\n                                key={key}\n                                node={node}\n                                x={style.x}\n                                y={style.y}\n                                radius={Math.max(style.radius, 0)}\n                                color={color(node)}\n                                borderWidth={borderWidth}\n                                borderColor={borderColor(node)}\n                                scale={Math.max(style.scale, 0)}\n                                handleNodeHover={handleNodeHover}\n                                handleNodeLeave={handleNodeLeave}\n                            />\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Node from './Node'\n\nconst StaticNodes = ({\n    nodes,\n    color,\n    borderWidth,\n    borderColor,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    return nodes.map(node => {\n        return (\n            <Node\n                key={node.id}\n                node={node}\n                x={node.x}\n                y={node.y}\n                radius={node.radius}\n                color={color(node)}\n                borderWidth={borderWidth}\n                borderColor={borderColor(node)}\n                handleNodeHover={handleNodeHover}\n                handleNodeLeave={handleNodeLeave}\n            />\n        )\n    })\n}\n\nStaticNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ sourceX, sourceY, targetX, targetY, thickness, color }) => {\n    return (\n        <line\n            stroke={color}\n            strokeWidth={thickness}\n            strokeLinecap=\"round\"\n            x1={sourceX}\n            y1={sourceY}\n            x2={targetX}\n            y2={targetY}\n        />\n    )\n}\n\nLink.propTypes = {\n    link: PropTypes.object.isRequired,\n    sourceX: PropTypes.number.isRequired,\n    sourceY: PropTypes.number.isRequired,\n    targetX: PropTypes.number.isRequired,\n    targetY: PropTypes.number.isRequired,\n    thickness: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n}\n\nexport default memo(Link)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@bitbloom/nivo-core'\nimport Link from './Link'\n\nconst willEnter = ({ style, data }) => {\n    const sourceX = data.previousSource ? data.previousSource.x : style.sourceX.val\n    const sourceY = data.previousSource ? data.previousSource.y : style.sourceY.val\n\n    return {\n        sourceX,\n        sourceY,\n        targetX: sourceX,\n        targetY: sourceY,\n    }\n}\n\nconst AnimatedLinks = ({ links, linkThickness, linkColor }) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            styles={links.map(link => ({\n                key: link.id,\n                data: link,\n                style: {\n                    sourceX: spring(link.source.x, springConfig),\n                    sourceY: spring(link.source.y, springConfig),\n                    targetX: spring(link.target.x, springConfig),\n                    targetY: spring(link.target.y, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: link }) => {\n                        return (\n                            <Link\n                                key={key}\n                                link={link}\n                                color={linkColor(link)}\n                                thickness={linkThickness(link)}\n                                sourceX={style.sourceX}\n                                sourceY={style.sourceY}\n                                targetX={style.targetX}\n                                targetY={style.targetY}\n                            />\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedLinks)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Link from './Link'\n\nconst StaticLinks = ({ links, linkThickness, linkColor }) => {\n    return links.map(link => {\n        return (\n            <Link\n                key={link.id}\n                link={link}\n                color={linkColor(link)}\n                thickness={linkThickness(link)}\n                sourceX={link.source.x}\n                sourceY={link.source.y}\n                targetX={link.target.x}\n                targetY={link.target.y}\n            />\n        )\n    })\n}\n\nStaticLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticLinks)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@bitbloom/nivo-tooltip'\n\nconst NetworkNodeTooltip = ({ node, format, tooltip }) => (\n    <BasicTooltip\n        id={node.id}\n        enableChip={true}\n        color={node.color}\n        format={format}\n        renderContent={typeof tooltip === 'function' ? tooltip.bind(null, { ...node }) : null}\n    />\n)\n\nNetworkNodeTooltip.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n    format: PropTypes.func,\n    tooltip: PropTypes.func,\n}\n\nexport default memo(NetworkNodeTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment, useCallback } from 'react'\nimport { withContainer, useDimensions, SvgWrapper, useTheme, useMotionConfig } from '@bitbloom/nivo-core'\nimport { useInheritedColor } from '@bitbloom/nivo-colors'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\nimport { NetworkPropTypes, NetworkDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness } from './hooks'\nimport AnimatedNodes from './AnimatedNodes'\nimport StaticNodes from './StaticNodes'\nimport AnimatedLinks from './AnimatedLinks'\nimport StaticLinks from './StaticLinks'\nimport NetworkNodeTooltip from './NetworkNodeTooltip'\n\nconst Network = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n\n        linkThickness,\n        linkColor,\n        tooltip,\n        isInteractive,\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { animate } = useMotionConfig()\n    const theme = useTheme()\n    const getColor = useNodeColor(nodeColor)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleNodeHover = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(<NetworkNodeTooltip node={node} tooltip={tooltip} />, event)\n        },\n        [showTooltipFromEvent, tooltip]\n    )\n\n    const handleNodeLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const layerById = {\n        links: React.createElement(animate === true ? AnimatedLinks : StaticLinks, {\n            key: 'links',\n            links,\n            linkThickness: getLinkThickness,\n            linkColor: getLinkColor,\n        }),\n        nodes: React.createElement(animate === true ? AnimatedNodes : StaticNodes, {\n            key: 'nodes',\n            nodes,\n            color: getColor,\n            borderWidth: nodeBorderWidth,\n            borderColor: getBorderColor,\n            handleNodeHover: isInteractive ? handleNodeHover : undefined,\n            handleNodeLeave: isInteractive ? handleNodeLeave : undefined,\n        }),\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                nodes,\n                                links,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nNetwork.propTypes = NetworkPropTypes\nNetwork.defaultProps = NetworkDefaultProps\n\nexport default withContainer(Network)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport Network from './Network'\n\nconst ResponsiveNetwork = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Network width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetwork\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useRef, useEffect } from 'react'\nimport { withContainer, useDimensions, useTheme } from '@bitbloom/nivo-core'\nimport { useInheritedColor } from '@bitbloom/nivo-colors'\nimport { NetworkCanvasPropTypes, NetworkCanvasDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness } from './hooks'\n\nconst NetworkCanvas = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n\n        linkThickness,\n        linkColor,\n\n        isInteractive,\n    } = props\n\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const theme = useTheme()\n    const getNodeColor = useNodeColor(nodeColor)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'links') {\n                links.forEach(link => {\n                    ctx.strokeStyle = getLinkColor(link)\n                    ctx.lineWidth = getLinkThickness(link)\n                    ctx.beginPath()\n                    ctx.moveTo(link.source.x, link.source.y)\n                    ctx.lineTo(link.target.x, link.target.y)\n                    ctx.stroke()\n                })\n            } else if (layer === 'nodes') {\n                nodes.forEach(node => {\n                    ctx.fillStyle = getNodeColor(node)\n                    ctx.beginPath()\n                    ctx.arc(node.x, node.y, node.radius, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (nodeBorderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(node)\n                        ctx.lineWidth = nodeBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else if (typeof layer === 'function') {\n                layer(ctx, {\n                    ...props,\n                    nodes,\n                    links,\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        nodes,\n        links,\n        getNodeColor,\n        nodeBorderWidth,\n        getBorderColor,\n        getLinkThickness,\n        getLinkColor,\n    ])\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n        />\n    )\n}\n\nNetworkCanvas.propTypes = NetworkCanvasPropTypes\nNetworkCanvas.defaultProps = NetworkCanvasDefaultProps\n\nexport default withContainer(NetworkCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport NetworkCanvas from './NetworkCanvas'\n\nconst ResponsiveNetworkCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <NetworkCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetworkCanvas\n"],"names":["defineProperty","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","commonPropTypes","nodes","PropTypes","arrayOf","shape","id","string","isRequired","links","source","target","layers","oneOfType","oneOf","func","linkDistance","number","repulsivity","distanceMin","distanceMax","iterations","nodeColor","nodeBorderWidth","nodeBorderColor","inheritedColorPropType","linkThickness","linkColor","isInteractive","bool","NetworkPropTypes","role","motionPropTypes","NetworkCanvasPropTypes","pixelRatio","commonDefaultProps","Infinity","from","NetworkDefaultProps","animate","motionStiffness","motionDamping","NetworkCanvasDefaultProps","global","window","devicePixelRatio","computeForces","center","computedLinkDistance","isNumber","isString","link","get","linkForce","forceLink","d","distance","chargeForce","forceManyBody","strength","centerForce","forceCenter","charge","useNetwork","useState","currentNodes","setCurrentNodes","currentLinks","setCurrentLinks","useEffect","forces","nodesCopy","map","node","linksCopy","simulation","forceSimulation","force","stop","tick","previousSource","find","n","previousTarget","useNodeColor","color","useMemo","useLinkThickness","thickness","Node","x","y","radius","borderWidth","borderColor","scale","handleNodeHover","handleNodeLeave","event","memo","willEnter","style","val","willLeave","springConfig","spring","AnimatedNodes","useMotionConfig","key","data","interpolatedStyles","Math","max","StaticNodes","Link","sourceX","sourceY","targetX","targetY","AnimatedLinks","StaticLinks","NetworkNodeTooltip","format","tooltip","bind","Network","props","width","height","partialMargin","margin","rawNodes","rawLinks","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","theme","useTheme","getColor","getBorderColor","useInheritedColor","getLinkThickness","getLinkColor","useTooltip","showTooltipFromEvent","hideTooltip","useCallback","layerById","React","createElement","undefined","layer","i","defaultProps","withContainer","ResponsiveNetwork","NetworkCanvas","canvasEl","useRef","getNodeColor","current","ctx","getContext","fillStyle","background","fillRect","translate","left","top","forEach","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","arc","PI","fill","cursor","ResponsiveNetworkCanvas"],"mappings":"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"}