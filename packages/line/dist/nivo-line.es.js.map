{"version":3,"file":"nivo-line.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/PointTooltip.js","../src/SliceTooltip.js","../src/props.js","../src/hooks.js","../src/Areas.js","../src/LinesItem.js","../src/Lines.js","../src/SlicesItem.js","../src/Slices.js","../src/Points.js","../src/Mesh.js","../src/Line.js","../src/ResponsiveLine.js","../src/LineCanvas.js","../src/ResponsiveLineCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@bitbloom/nivo-tooltip'\n\nconst LinePointTooltip = ({ point }) => {\n    return (\n        <BasicTooltip\n            id={\n                <span>\n                    x: <strong>{point.data.xFormatted}</strong>, y:{' '}\n                    <strong>{point.data.yFormatted}</strong>\n                </span>\n            }\n            enableChip={true}\n            color={point.serieColor}\n        />\n    )\n}\n\nLinePointTooltip.propTypes = {\n    point: PropTypes.object.isRequired,\n}\n\nexport default memo(LinePointTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TableTooltip } from '@bitbloom/nivo-tooltip'\n\nconst Chip = ({ color }) => (\n    <span style={{ display: 'block', width: '12px', height: '12px', background: color }} />\n)\n\nChip.propTypes = {\n    color: PropTypes.string.isRequired,\n}\n\nconst SliceTooltip = ({ slice, axis }) => {\n    const otherAxis = axis === 'x' ? 'y' : 'x'\n\n    return (\n        <TableTooltip\n            rows={slice.points.map(point => [\n                <Chip key=\"chip\" color={point.serieColor} />,\n                point.serieId,\n                <strong key=\"value\">{point.data[`${otherAxis}Formatted`]}</strong>,\n            ])}\n        />\n    )\n}\n\nSliceTooltip.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n}\n\nexport default memo(SliceTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType, blendModePropType, motionPropTypes, defsPropTypes } from '@bitbloom/nivo-core'\nimport { ordinalColorsPropType } from '@bitbloom/nivo-colors'\nimport { axisPropType } from '@bitbloom/nivo-axes'\nimport { scalePropType } from '@bitbloom/nivo-scales'\nimport { LegendPropShape } from '@bitbloom/nivo-legends'\nimport { crosshairPropTypes } from '@bitbloom/nivo-tooltip'\nimport PointTooltip from './PointTooltip'\nimport SliceTooltip from './SliceTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                    y: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    xScale: scalePropType.isRequired,\n    xFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    yScale: scalePropType.isRequired,\n    yFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf([\n                'grid',\n                'markers',\n                'axes',\n                'areas',\n                'crosshair',\n                'lines',\n                'slices',\n                'points',\n                'mesh',\n                'legends',\n            ]),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    curve: lineCurvePropType.isRequired,\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    gridXValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    gridYValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n\n    enablePoints: PropTypes.bool.isRequired,\n    pointSymbol: PropTypes.func,\n    pointSize: PropTypes.number.isRequired,\n    pointColor: PropTypes.any.isRequired,\n    pointBorderWidth: PropTypes.number.isRequired,\n    pointBorderColor: PropTypes.any.isRequired,\n    enablePointLabel: PropTypes.bool.isRequired,\n    pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            style: PropTypes.object,\n        })\n    ),\n\n    colors: ordinalColorsPropType.isRequired,\n\n    enableArea: PropTypes.bool.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    areaBaselineValue: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n\n    overflow: PropTypes.bool.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableSlices: PropTypes.oneOf(['x', 'y', false]).isRequired,\n    debugSlices: PropTypes.bool.isRequired,\n    sliceTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableCrosshair: PropTypes.bool.isRequired,\n    crosshairType: crosshairPropTypes.type.isRequired,\n}\n\nexport const LinePropTypes = {\n    ...commonPropTypes,\n    enablePointLabel: PropTypes.bool.isRequired,\n    role: PropTypes.string.isRequired,\n    useMesh: PropTypes.bool.isRequired,\n    ...motionPropTypes,\n    ...defsPropTypes,\n}\n\nexport const LineCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    curve: 'linear',\n\n    xScale: {\n        type: 'point',\n    },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n\n    layers: [\n        'grid',\n        'markers',\n        'axes',\n        'areas',\n        'crosshair',\n        'lines',\n        'points',\n        'slices',\n        'mesh',\n        'legends',\n    ],\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: true,\n    enableGridY: true,\n\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: { from: 'color' },\n    pointBorderWidth: 0,\n    pointBorderColor: { theme: 'background' },\n    enablePointLabel: false,\n    pointLabel: 'yFormatted',\n\n    colors: { scheme: 'nivo' },\n    enableArea: false,\n    areaBaselineValue: 0,\n    areaOpacity: 0.2,\n    areaBlendMode: 'normal',\n    lineWidth: 2,\n\n    legends: [],\n\n    isInteractive: true,\n    tooltip: PointTooltip,\n    enableSlices: false,\n    debugSlices: false,\n    sliceTooltip: SliceTooltip,\n    debugMesh: false,\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n\nexport const LineDefaultProps = {\n    ...commonDefaultProps,\n    enablePointLabel: false,\n    useMesh: false,\n    animate: true,\n    motionConfig: 'gentle',\n    defs: [],\n    fill: [],\n    role: 'img',\n}\n\nexport const LineCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { area, line } from 'd3-shape'\nimport { curveFromProp, useTheme, useValueFormatter } from '@bitbloom/nivo-core'\nimport { useOrdinalColorScale, useInheritedColor } from '@bitbloom/nivo-colors'\nimport { computeXYScalesForSeries } from '@bitbloom/nivo-scales'\nimport { LineDefaultProps } from './props'\n\nexport const useLineGenerator = ({ curve }) => {\n    return useMemo(\n        () =>\n            line()\n                .defined(d => d.x !== null && d.y !== null)\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n}\n\nexport const useAreaGenerator = ({ curve, yScale, areaBaselineValue }) => {\n    return useMemo(() => {\n        return area()\n            .defined(d => d.x !== null && d.y !== null)\n            .x(d => d.x)\n            .y1(d => d.y)\n            .curve(curveFromProp(curve))\n            .y0(yScale(areaBaselineValue))\n    }, [curve, yScale, areaBaselineValue])\n}\n\nconst usePoints = ({ series, getPointColor, getPointBorderColor, formatX, formatY }) => {\n    return useMemo(() => {\n        return series.reduce((acc, serie) => {\n            return [\n                ...acc,\n                ...serie.data\n                    .filter(datum => datum.position.x !== null && datum.position.y !== null)\n                    .map((datum, i) => {\n                        const point = {\n                            id: `${serie.id}.${i}`,\n                            index: acc.length + i,\n                            serieId: serie.id,\n                            serieColor: serie.color,\n                            x: datum.position.x,\n                            y: datum.position.y,\n                        }\n                        point.color = getPointColor(serie)\n                        point.borderColor = getPointBorderColor(point)\n                        point.data = {\n                            ...datum.data,\n                            xFormatted: formatX(datum.data.x),\n                            yFormatted: formatY(datum.data.y),\n                        }\n\n                        return point\n                    }),\n            ]\n        }, [])\n    }, [series, getPointColor, getPointBorderColor, formatX, formatY])\n}\n\nexport const useSlices = ({ enableSlices, points, width, height }) => {\n    return useMemo(() => {\n        if (enableSlices === false) return []\n\n        if (enableSlices === 'x') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.x)) map.set(point.x, [point])\n                else map.get(point.x).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([x, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let x0\n                    if (!prevSlice) x0 = x\n                    else x0 = x - (x - prevSlice[0]) / 2\n\n                    let sliceWidth\n                    if (!nextSlice) sliceWidth = width - x0\n                    else sliceWidth = x - x0 + (nextSlice[0] - x) / 2\n\n                    return {\n                        id: x,\n                        x0,\n                        x,\n                        y0: 0,\n                        y: 0,\n                        width: sliceWidth,\n                        height,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        } else if (enableSlices === 'y') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.y)) map.set(point.y, [point])\n                else map.get(point.y).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([y, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let y0\n                    if (!prevSlice) y0 = y\n                    else y0 = y - (y - prevSlice[0]) / 2\n\n                    let sliceHeight\n                    if (!nextSlice) sliceHeight = height - y0\n                    else sliceHeight = y - y0 + (nextSlice[0] - y) / 2\n\n                    return {\n                        id: y,\n                        x0: 0,\n                        x: 0,\n                        y0,\n                        y,\n                        width,\n                        height: sliceHeight,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        }\n    }, [enableSlices, points])\n}\n\nexport const useLine = ({\n    data,\n    xScale: xScaleSpec = LineDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = LineDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    colors = LineDefaultProps.colors,\n    curve = LineDefaultProps.curve,\n    areaBaselineValue = LineDefaultProps.areaBaselineValue,\n    pointColor = LineDefaultProps.pointColor,\n    pointBorderColor = LineDefaultProps.pointBorderColor,\n    enableSlices = LineDefaultProps.enableSlicesTooltip,\n}) => {\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const { xScale, yScale, series: rawSeries } = useMemo(\n        () => computeXYScalesForSeries(data, xScaleSpec, yScaleSpec, width, height),\n        [data, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const series = useMemo(\n        () =>\n            rawSeries.map(serie => ({\n                ...serie,\n                color: getColor(serie),\n            })),\n        [rawSeries, getColor]\n    )\n\n    const points = usePoints({\n        series,\n        getPointColor,\n        getPointBorderColor,\n        formatX,\n        formatY,\n    })\n\n    const slices = useSlices({\n        enableSlices,\n        points,\n        width,\n        height,\n    })\n\n    const lineGenerator = useLineGenerator({ curve })\n    const areaGenerator = useAreaGenerator({\n        curve,\n        yScale,\n        areaBaselineValue,\n    })\n\n    return {\n        lineGenerator,\n        areaGenerator,\n        getColor,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useMotionConfig, blendModePropType } from '@bitbloom/nivo-core'\n\nconst Areas = ({ areaGenerator, areaOpacity, areaBlendMode, lines }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const computedLines = lines.slice(0).reverse()\n\n    const springs = useSprings(\n        computedLines.length,\n        computedLines.map(line => {\n            return {\n                path: areaGenerator(line.data.map(d => d.position)),\n                color: line.color,\n                config: springConfig,\n                immediate: !animate,\n            }\n        })\n    )\n\n    return (\n        <g>\n            {springs.map((animatedProps, index) => {\n                const line = computedLines[index]\n\n                return (\n                    <animated.path\n                        key={line.id}\n                        d={animatedProps.path}\n                        fill={line.fill ? line.fill : animatedProps.color}\n                        fillOpacity={areaOpacity}\n                        strokeWidth={0}\n                        style={{\n                            mixBlendMode: areaBlendMode,\n                        }}\n                    />\n                )\n            })}\n        </g>\n    )\n}\n\nAreas.propTypes = {\n    areaGenerator: PropTypes.func.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    lines: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default memo(Areas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig } from '@bitbloom/nivo-core'\n\nconst LinesItem = ({ lineGenerator, points, color, thickness }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        path: lineGenerator(points),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path d={animatedProps.path} fill=\"none\" strokeWidth={thickness} stroke={color} />\n    )\n}\n\nLinesItem.propTypes = {\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            y: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        })\n    ),\n    lineGenerator: PropTypes.func.isRequired,\n    color: PropTypes.string.isRequired,\n    thickness: PropTypes.number.isRequired,\n}\n\nexport default memo(LinesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport LinesItem from './LinesItem'\n\nconst Lines = ({ lines, lineGenerator, lineWidth }) => {\n    return lines\n        .reverse()\n        .map(({ id, data, color }) => (\n            <LinesItem\n                key={id}\n                id={id}\n                points={data.map(d => d.position)}\n                lineGenerator={lineGenerator}\n                color={color}\n                thickness={lineWidth}\n            />\n        ))\n}\n\nLines.propTypes = {\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    data: PropTypes.shape({\n                        x: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                        y: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                    }).isRequired,\n                    position: PropTypes.shape({\n                        x: PropTypes.number,\n                        y: PropTypes.number,\n                    }).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n}\n\nexport default memo(Lines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\n\nconst SlicesItem = ({ slice, axis, debug, tooltip, isCurrent, setCurrent }) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { slice, axis }), event, 'right')\n            setCurrent(slice)\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { slice, axis }), event, 'right')\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n        setCurrent(null)\n    }, [hideTooltip])\n\n    return (\n        <rect\n            x={slice.x0}\n            y={slice.y0}\n            width={slice.width}\n            height={slice.height}\n            stroke=\"red\"\n            strokeWidth={debug ? 1 : 0}\n            strokeOpacity={0.75}\n            fill=\"red\"\n            fillOpacity={isCurrent && debug ? 0.35 : 0}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n\nSlicesItem.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    isCurrent: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(SlicesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SlicesItem from './SlicesItem'\n\nconst Slices = ({ slices, axis, debug, height, tooltip, current, setCurrent }) => {\n    return slices.map(slice => (\n        <SlicesItem\n            key={slice.id}\n            slice={slice}\n            axis={axis}\n            debug={debug}\n            height={height}\n            tooltip={tooltip}\n            setCurrent={setCurrent}\n            isCurrent={current !== null && current.id === slice.id}\n        />\n    ))\n}\n\nSlices.propTypes = {\n    slices: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            points: PropTypes.arrayOf(PropTypes.object).isRequired,\n        })\n    ).isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    current: PropTypes.object,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(Slices)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { getLabelGenerator, DotsItem, useTheme } from '@bitbloom/nivo-core'\n\nconst Points = ({ points, symbol, size, borderWidth, enableLabel, label, labelYOffset }) => {\n    const theme = useTheme()\n    const getLabel = getLabelGenerator(label)\n\n    /**\n     * We reverse the `points` array so that points from the lower lines in stacked lines\n     * graph are drawn on top. See https://github.com/plouc/nivo/issues/1051.\n     */\n    const mappedPoints = points.reverse().map(point => {\n        const mappedPoint = {\n            id: point.id,\n            x: point.x,\n            y: point.y,\n            datum: point.data,\n            fill: point.color,\n            stroke: point.borderColor,\n            label: enableLabel ? getLabel(point.data) : null,\n        }\n\n        return mappedPoint\n    })\n\n    return (\n        <g>\n            {mappedPoints.map(point => (\n                <DotsItem\n                    key={point.id}\n                    x={point.x}\n                    y={point.y}\n                    datum={point.datum}\n                    symbol={symbol}\n                    size={size}\n                    color={point.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    theme={theme}\n                />\n            ))}\n        </g>\n    )\n}\n\nPoints.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object),\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelYOffset: PropTypes.number,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\nimport { Mesh as BaseMesh } from '@bitbloom/nivo-voronoi'\n\nconst Mesh = ({\n    points,\n    width,\n    height,\n    margin,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    debug,\n}) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                React.createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseEnter && onMouseEnter(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]\n    )\n\n    const handleMouseMove = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                React.createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseMove && onMouseMove(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (point, event) => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(point, event)\n        },\n        [hideTooltip, setCurrent, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (point, event) => {\n            onClick && onClick(point, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={points}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            debug={debug}\n        />\n    )\n}\n\nMesh.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: PropTypes.object.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    debug: PropTypes.bool.isRequired,\n}\n\nexport default memo(Mesh)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment, useState, useMemo } from 'react'\nimport {\n    bindDefs,\n    withContainer,\n    useDimensions,\n    useTheme,\n    SvgWrapper,\n    CartesianMarkers,\n} from '@bitbloom/nivo-core'\nimport { useInheritedColor } from '@bitbloom/nivo-colors'\nimport { Axes, Grid } from '@bitbloom/nivo-axes'\nimport { BoxLegendSvg } from '@bitbloom/nivo-legends'\nimport { Crosshair } from '@bitbloom/nivo-tooltip'\nimport { useLine } from './hooks'\nimport { LinePropTypes, LineDefaultProps } from './props'\nimport Areas from './Areas'\nimport Lines from './Lines'\nimport Slices from './Slices'\nimport Points from './Points'\nimport Mesh from './Mesh'\n\nconst Line = props => {\n    const {\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        layers,\n        curve,\n        areaBaselineValue,\n\n        colors,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n        gridXValues,\n        gridYValues,\n\n        lineWidth,\n        enableArea,\n        areaOpacity,\n        areaBlendMode,\n\n        enablePoints,\n        pointSymbol,\n        pointSize,\n        pointColor,\n        pointBorderWidth,\n        pointBorderColor,\n        enablePointLabel,\n        pointLabel,\n        pointLabelYOffset,\n\n        defs,\n        fill,\n\n        markers,\n\n        legends,\n\n        isInteractive,\n\n        useMesh,\n        debugMesh,\n\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n\n        tooltip,\n\n        enableSlices,\n        debugSlices,\n        sliceTooltip,\n\n        enableCrosshair,\n        crosshairType,\n\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, slices, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n        enableSlices,\n    })\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const [currentPoint, setCurrentPoint] = useState(null)\n    const [currentSlice, setCurrentSlice] = useState(null)\n\n    const legendData = useMemo(\n        () =>\n            series\n                .map(line => ({\n                    id: line.id,\n                    label: line.id,\n                    color: line.color,\n                }))\n                .reverse(),\n        [series]\n    )\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                theme={theme}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        ),\n        markers: (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale}\n                yScale={yScale}\n                theme={theme}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                theme={theme}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        areas: null,\n        lines: (\n            <Lines key=\"lines\" lines={series} lineGenerator={lineGenerator} lineWidth={lineWidth} />\n        ),\n        slices: null,\n        points: null,\n        crosshair: null,\n        mesh: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend.${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legend.data || legendData}\n                theme={theme}\n            />\n        )),\n    }\n\n    const boundDefs = bindDefs(defs, series, fill)\n\n    if (enableArea) {\n        layerById.areas = (\n            <Areas\n                key=\"areas\"\n                areaGenerator={areaGenerator}\n                areaOpacity={areaOpacity}\n                areaBlendMode={areaBlendMode}\n                lines={series}\n            />\n        )\n    }\n\n    if (isInteractive && enableSlices !== false) {\n        layerById.slices = (\n            <Slices\n                key=\"slices\"\n                slices={slices}\n                axis={enableSlices}\n                debug={debugSlices}\n                height={innerHeight}\n                tooltip={sliceTooltip}\n                current={currentSlice}\n                setCurrent={setCurrentSlice}\n            />\n        )\n    }\n\n    if (enablePoints) {\n        layerById.points = (\n            <Points\n                key=\"points\"\n                points={points}\n                symbol={pointSymbol}\n                size={pointSize}\n                color={getPointColor}\n                borderWidth={pointBorderWidth}\n                borderColor={getPointBorderColor}\n                enableLabel={enablePointLabel}\n                label={pointLabel}\n                labelYOffset={pointLabelYOffset}\n            />\n        )\n    }\n\n    if (isInteractive && enableCrosshair) {\n        if (currentPoint !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentPoint.x}\n                    y={currentPoint.y}\n                    type={crosshairType}\n                />\n            )\n        }\n        if (currentSlice !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentSlice.x}\n                    y={currentSlice.y}\n                    type={enableSlices}\n                />\n            )\n        }\n    }\n\n    if (isInteractive && useMesh && enableSlices === false) {\n        layerById.mesh = (\n            <Mesh\n                key=\"mesh\"\n                points={points}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                current={currentPoint}\n                setCurrent={setCurrentPoint}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                series,\n                                slices,\n                                points,\n                                xScale,\n                                yScale,\n                                lineGenerator,\n                                areaGenerator,\n                                currentPoint,\n                                setCurrentPoint,\n                                currentSlice,\n                                setCurrentSlice,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nLine.propTypes = LinePropTypes\nLine.defaultProps = LineDefaultProps\n\nexport default withContainer(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport Line from './Line'\n\nconst ResponsiveLine = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Line width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveLine\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useRef, useEffect, useState, useCallback } from 'react'\nimport {\n    clip,\n    withContainer,\n    useDimensions,\n    useTheme,\n    getRelativeCursor,\n    isCursorInRect,\n} from '@bitbloom/nivo-core'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@bitbloom/nivo-axes'\nimport { renderLegendToCanvas } from '@bitbloom/nivo-legends'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@bitbloom/nivo-voronoi'\nimport { LineCanvasPropTypes, LineCanvasDefaultProps } from './props'\nimport { useLine } from './hooks'\n\nconst LineCanvas = ({\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio,\n\n    data,\n    xScale: xScaleSpec,\n    xFormat,\n    yScale: yScaleSpec,\n    yFormat,\n    curve,\n\n    layers,\n\n    colors,\n    lineWidth,\n\n    enableArea,\n    areaBaselineValue,\n    areaOpacity,\n\n    enablePoints,\n    pointSize,\n    pointColor,\n    pointBorderWidth,\n    pointBorderColor,\n\n    enableGridX,\n    gridXValues,\n    enableGridY,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n\n    legends,\n\n    overflow,\n    isInteractive,\n    debugMesh,\n    //onMouseEnter,\n    //onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}) => {\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const theme = useTheme()\n    const [currentPoint, setCurrentPoint] = useState(null)\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n    })\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (typeof layer === 'function') {\n                layer({\n                    ctx,\n                    innerWidth,\n                    innerHeight,\n                    series,\n                    points,\n                    xScale,\n                    yScale,\n                    lineWidth,\n                    lineGenerator,\n                    areaGenerator,\n                    currentPoint,\n                    setCurrentPoint,\n                })\n            }\n\n            if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n                ctx.lineWidth = theme.grid.line.strokeWidth\n                ctx.strokeStyle = theme.grid.line.stroke\n\n                enableGridX &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            }\n\n            if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale,\n                    yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            }\n\n            if (layer === 'mesh' && debugMesh === true) {\n                renderVoronoiToCanvas(ctx, voronoi)\n                if (currentPoint) {\n                    renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index)\n                }\n            }\n\n            if (layer === 'legends') {\n                const legendData = series\n                    .map(serie => ({\n                        id: serie.id,\n                        label: serie.id,\n                        color: serie.color,\n                    }))\n                    .reverse()\n\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legend.data || legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            }\n\n\n            if (layer === 'areas' && enableArea === true) {\n                ctx.save()\n                ctx.globalAlpha = areaOpacity\n\n                if (!overflow) clip({ctx: ctx, margin, width: outerWidth, height: outerHeight})\n                areaGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.fillStyle = serie.color\n                    ctx.beginPath()\n                    areaGenerator(serie.data.map(d => d.position))\n                    ctx.fill()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'lines') {\n                if (!overflow) clip({ctx: ctx, margin, width: outerWidth, height: outerHeight})\n                lineGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.strokeStyle = serie.color\n                    ctx.lineWidth = lineWidth\n                    ctx.beginPath()\n                    lineGenerator(serie.data.map(d => d.position))\n                    ctx.stroke()\n                })\n            }\n\n            if (layer === 'points' && enablePoints === true && pointSize > 0) {\n                if (!overflow) clip({ctx: ctx, margin, width: outerWidth, height: outerHeight})\n                points.forEach(point => {\n                    ctx.fillStyle = point.color\n                    ctx.beginPath()\n                    ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (pointBorderWidth > 0) {\n                        ctx.strokeStyle = point.borderColor\n                        ctx.lineWidth = pointBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        lineGenerator,\n        series,\n        xScale,\n        yScale,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        points,\n        enablePoints,\n        pointSize,\n        currentPoint,\n    ])\n\n    const getPointFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const pointIndex = delaunay.find(x - margin.left, y - margin.top)\n            return points[pointIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const point = getPointFromMouseEvent(event)\n            setCurrentPoint(point)\n\n            if (point) {\n                showTooltipFromEvent(React.createElement(tooltip, { point }), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentPoint(null)\n            currentPoint && onMouseLeave && onMouseLeave(currentPoint, event)\n        },\n        [hideTooltip, setCurrentPoint, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const point = getPointFromMouseEvent(event)\n                point && onClick(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nLineCanvas.propTypes = LineCanvasPropTypes\nLineCanvas.defaultProps = LineCanvasDefaultProps\n\nexport default withContainer(LineCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport LineCanvas from './LineCanvas'\n\nconst ResponsiveLineCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <LineCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveLineCanvas\n"],"names":["defineProperty","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","LinePointTooltip","point","data","xFormatted","yFormatted","serieColor","memo","Chip","color","display","width","height","background","SliceTooltip","slice","axis","otherAxis","points","map","serieId","commonPropTypes","PropTypes","arrayOf","shape","id","oneOfType","string","number","isRequired","x","instanceOf","Date","y","xScale","scalePropType","xFormat","func","yScale","yFormat","layers","oneOf","curve","lineCurvePropType","axisTop","axisPropType","axisRight","axisBottom","axisLeft","enableGridX","bool","enableGridY","gridXValues","gridYValues","enablePoints","pointSymbol","pointSize","pointColor","any","pointBorderWidth","pointBorderColor","enablePointLabel","pointLabel","markers","value","style","object","colors","ordinalColorsPropType","enableArea","areaOpacity","areaBlendMode","blendModePropType","areaBaselineValue","lineWidth","legends","LegendPropShape","isInteractive","debugMesh","overflow","tooltip","enableSlices","debugSlices","sliceTooltip","enableCrosshair","crosshairType","crosshairPropTypes","type","LinePropTypes","role","useMesh","motionPropTypes","defsPropTypes","LineCanvasPropTypes","pixelRatio","commonDefaultProps","min","max","from","theme","scheme","PointTooltip","LineDefaultProps","animate","motionConfig","defs","fill","LineCanvasDefaultProps","global","window","devicePixelRatio","useLineGenerator","useMemo","line","defined","d","curveFromProp","useAreaGenerator","area","y1","y0","usePoints","series","getPointColor","getPointBorderColor","formatX","formatY","reduce","acc","serie","filter","datum","position","i","index","length","borderColor","useSlices","Map","forEach","has","set","get","push","Array","entries","sort","a","b","slices","slicePoints","prevSlice","nextSlice","x0","sliceWidth","reverse","sliceHeight","useLine","xScaleSpec","yScaleSpec","enableSlicesTooltip","useValueFormatter","getColor","useOrdinalColorScale","useTheme","useInheritedColor","computeXYScalesForSeries","rawSeries","lineGenerator","areaGenerator","Areas","lines","useMotionConfig","springConfig","config","computedLines","springs","useSprings","path","immediate","animatedProps","mixBlendMode","LinesItem","thickness","useSpring","Lines","SlicesItem","debug","isCurrent","setCurrent","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","useCallback","event","React","createElement","handleMouseMove","handleMouseLeave","Slices","current","Points","symbol","size","borderWidth","enableLabel","label","labelYOffset","getLabel","getLabelGenerator","mappedPoints","mappedPoint","stroke","Mesh","margin","onMouseEnter","onMouseMove","onMouseLeave","onClick","showTooltipAt","left","top","handleClick","BaseMesh","Line","props","partialMargin","pointLabelYOffset","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","useState","currentPoint","setCurrentPoint","currentSlice","setCurrentSlice","legendData","layerById","grid","axes","areas","crosshair","mesh","legend","boundDefs","bindDefs","layer","defaultProps","withContainer","ResponsiveLine","LineCanvas","canvasEl","useRef","useVoronoiMesh","delaunay","voronoi","useEffect","ctx","getContext","scale","fillStyle","fillRect","translate","strokeWidth","strokeStyle","renderGridLinesToCanvas","values","renderAxesToCanvas","right","bottom","renderVoronoiToCanvas","renderVoronoiCellToCanvas","renderLegendToCanvas","containerWidth","containerHeight","save","globalAlpha","clip","context","beginPath","restore","arc","Math","PI","getPointFromMouseEvent","getRelativeCursor","isCursorInRect","pointIndex","find","handleMouseHover","cursor","undefined","ResponsiveLineCanvas"],"mappings":"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"}