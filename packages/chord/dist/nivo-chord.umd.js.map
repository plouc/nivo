{"version":3,"file":"nivo-chord.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/ChordArcTooltip.js","../src/ChordRibbonTooltip.js","../src/props.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/compute.js","../src/hooks.js","../src/ChordRibbon.js","../src/ChordRibbons.js","../src/ChordArc.js","../src/ChordArcs.js","../src/ChordLabels.js","../src/Chord.js","../src/ChordCanvas.js","../src/ResponsiveChord.js","../src/ResponsiveChordCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@bitbloom/nivo-tooltip'\n\nconst ChordArcTooltip = memo(({ arc }) => {\n    return (\n        <BasicTooltip\n            id={arc.label}\n            value={arc.formattedValue}\n            color={arc.color}\n            enableChip={true}\n        />\n    )\n})\n\nChordArcTooltip.displayName = 'ChordArcTooltip'\nChordArcTooltip.propTypes = {\n    arc: PropTypes.object.isRequired,\n}\n\nexport default ChordArcTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@bitbloom/nivo-core'\nimport { TableTooltip, Chip } from '@bitbloom/nivo-tooltip'\n\nconst ChordRibbonTooltip = memo(({ ribbon }) => {\n    const theme = useTheme()\n\n    return (\n        <TableTooltip\n            theme={theme}\n            rows={[\n                [\n                    <Chip key=\"chip\" color={ribbon.source.color} />,\n                    <strong key=\"id\">{ribbon.source.label}</strong>,\n                    ribbon.source.formattedValue,\n                ],\n                [\n                    <Chip key=\"chip\" color={ribbon.target.color} />,\n                    <strong key=\"id\">{ribbon.target.label}</strong>,\n                    ribbon.target.formattedValue,\n                ],\n            ]}\n        />\n    )\n})\n\nChordRibbonTooltip.displayName = 'ChordRibbonTooltip'\nChordRibbonTooltip.propTypes = {\n    ribbon: PropTypes.object.isRequired,\n}\n\nexport default ChordRibbonTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { blendModePropType, motionPropTypes } from '@bitbloom/nivo-core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@bitbloom/nivo-colors'\nimport { LegendPropShape } from '@bitbloom/nivo-legends'\nimport ChordArcTooltip from './ChordArcTooltip'\nimport ChordRibbonTooltip from './ChordRibbonTooltip'\n\nconst commonPropTypes = {\n    keys: PropTypes.arrayOf(PropTypes.string).isRequired,\n    matrix: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    padAngle: PropTypes.number.isRequired,\n    innerRadiusRatio: PropTypes.number.isRequired,\n    innerRadiusOffset: PropTypes.number.isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['ribbons', 'arcs', 'labels', 'legends']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    arcOpacity: PropTypes.number.isRequired,\n    arcHoverOpacity: PropTypes.number.isRequired,\n    arcHoverOthersOpacity: PropTypes.number.isRequired,\n    arcBorderWidth: PropTypes.number.isRequired,\n    arcBorderColor: inheritedColorPropType.isRequired,\n    onArcMouseEnter: PropTypes.func,\n    onArcMouseMove: PropTypes.func,\n    onArcMouseLeave: PropTypes.func,\n    onArcClick: PropTypes.func,\n    arcTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    ribbonOpacity: PropTypes.number.isRequired,\n    ribbonHoverOpacity: PropTypes.number.isRequired,\n    ribbonHoverOthersOpacity: PropTypes.number.isRequired,\n    ribbonBorderWidth: PropTypes.number.isRequired,\n    ribbonBorderColor: inheritedColorPropType.isRequired,\n    ribbonBlendMode: blendModePropType.isRequired,\n    onRibbonMouseEnter: PropTypes.func,\n    onRibbonMouseMove: PropTypes.func,\n    onRibbonMouseLeave: PropTypes.func,\n    onRibbonClick: PropTypes.func,\n    ribbonTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelOffset: PropTypes.number.isRequired,\n    labelRotation: PropTypes.number.isRequired,\n    labelTextColor: inheritedColorPropType.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n}\n\nexport const ChordPropTypes = {\n    ...commonPropTypes,\n    ...motionPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const ChordCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    padAngle: 0,\n    innerRadiusRatio: 0.9,\n    innerRadiusOffset: 0,\n\n    layers: ['ribbons', 'arcs', 'labels', 'legends'],\n\n    arcOpacity: 1,\n    arcHoverOpacity: 1,\n    arcHoverOthersOpacity: 0.15,\n    arcBorderWidth: 1,\n    arcBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.4]],\n    },\n    arcTooltip: ChordArcTooltip,\n\n    ribbonOpacity: 0.5,\n    ribbonHoverOpacity: 0.85,\n    ribbonHoverOthersOpacity: 0.15,\n    ribbonBorderWidth: 1,\n    ribbonBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.4]],\n    },\n    ribbonBlendMode: 'normal',\n    ribbonTooltip: ChordRibbonTooltip,\n\n    enableLabel: true,\n    label: 'id',\n    labelOffset: 12,\n    labelRotation: 0,\n    labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    colors: { scheme: 'nivo' },\n\n    legends: [],\n\n    isInteractive: true,\n}\n\nexport const ChordDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    role: 'img',\n}\n\nexport const ChordCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { arc as d3Arc } from 'd3-shape'\nimport { chord as d3Chord, ribbon as d3Ribbon } from 'd3-chord'\n\nexport const computeChordLayout = ({ padAngle }) => d3Chord().padAngle(padAngle)\n\nexport const computeChordGenerators = ({ width, height, innerRadiusRatio, innerRadiusOffset }) => {\n    const center = [width / 2, height / 2]\n    const radius = Math.min(width, height) / 2\n    const innerRadius = radius * innerRadiusRatio\n    const ribbonRadius = radius * (innerRadiusRatio - innerRadiusOffset)\n\n    const arcGenerator = d3Arc().outerRadius(radius).innerRadius(innerRadius)\n\n    const ribbonGenerator = d3Ribbon().radius(ribbonRadius)\n\n    return { center, radius, innerRadius, arcGenerator, ribbonGenerator }\n}\n\nexport const computeChordArcsAndRibbons = ({\n    chord,\n    getColor,\n    keys,\n    matrix,\n    getLabel,\n    formatValue,\n}) => {\n    const ribbons = chord(matrix)\n\n    const arcs = ribbons.groups.map(arc => {\n        arc.id = keys[arc.index]\n        arc.color = getColor(arc)\n        arc.formattedValue = formatValue(arc.value)\n        arc.label = getLabel(arc)\n\n        return arc\n    })\n\n    ribbons.forEach(ribbon => {\n        ribbon.source.id = keys[ribbon.source.index]\n        ribbon.source.color = getColor(ribbon.source)\n        ribbon.source.formattedValue = formatValue(ribbon.source.value)\n        ribbon.source.label = getLabel(ribbon.source)\n\n        ribbon.target.id = keys[ribbon.target.index]\n        ribbon.target.color = getColor(ribbon.target)\n        ribbon.target.formattedValue = formatValue(ribbon.target.value)\n        ribbon.target.label = getLabel(ribbon.target)\n\n        // ensure id remains the same even if source/target are reversed\n        ribbon.id = [ribbon.source.id, ribbon.target.id].sort().join('.')\n    })\n\n    return { arcs, ribbons }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo, useState } from 'react'\nimport { useValueFormatter, getLabelGenerator } from '@bitbloom/nivo-core'\nimport { useOrdinalColorScale } from '@bitbloom/nivo-colors'\nimport { computeChordLayout, computeChordGenerators, computeChordArcsAndRibbons } from './compute'\n\nexport const useChordLayout = ({ padAngle }) =>\n    useMemo(() => computeChordLayout({ padAngle }), [padAngle])\n\nexport const useChordGenerators = ({ width, height, innerRadiusRatio, innerRadiusOffset }) =>\n    useMemo(\n        () =>\n            computeChordGenerators({\n                width,\n                height,\n                innerRadiusRatio,\n                innerRadiusOffset,\n            }),\n        [width, height, innerRadiusRatio, innerRadiusOffset]\n    )\n\nexport const useChordArcsAndRibbons = ({ chord, getColor, keys, matrix, getLabel, formatValue }) =>\n    useMemo(\n        () =>\n            computeChordArcsAndRibbons({\n                chord,\n                getColor,\n                keys,\n                matrix,\n                getLabel,\n                formatValue,\n            }),\n        [chord, getColor, keys, matrix, getLabel, formatValue]\n    )\n\nexport const useChord = ({\n    keys,\n    matrix,\n    label,\n    valueFormat,\n    width,\n    height,\n    innerRadiusRatio,\n    innerRadiusOffset,\n    padAngle,\n    colors,\n}) => {\n    const chord = useChordLayout({ padAngle })\n    const { center, radius, innerRadius, arcGenerator, ribbonGenerator } = useChordGenerators({\n        width,\n        height,\n        innerRadiusRatio,\n        innerRadiusOffset,\n    })\n    const getLabel = useMemo(() => getLabelGenerator(label), [label])\n    const formatValue = useValueFormatter(valueFormat)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const { arcs, ribbons } = useChordArcsAndRibbons({\n        chord,\n        getColor,\n        keys,\n        matrix,\n        getLabel,\n        formatValue,\n    })\n\n    return {\n        center,\n        chord,\n        radius,\n        innerRadius,\n        arcGenerator,\n        ribbonGenerator,\n        getColor,\n        arcs,\n        ribbons,\n    }\n}\n\nexport const useChordSelection = ({\n    arcs,\n    arcOpacity,\n    arcHoverOpacity,\n    arcHoverOthersOpacity,\n    ribbons,\n    ribbonOpacity,\n    ribbonHoverOpacity,\n    ribbonHoverOthersOpacity,\n}) => {\n    const [currentArc, setCurrentArc] = useState(null)\n    const [currentRibbon, setCurrentRibbon] = useState(null)\n\n    const selection = useMemo(() => {\n        const selectedArcIds = []\n        const selectedRibbonIds = []\n\n        if (currentArc) {\n            selectedArcIds.push(currentArc.id)\n            ribbons\n                .filter(\n                    ribbon =>\n                        ribbon.source.id === currentArc.id || ribbon.target.id === currentArc.id\n                )\n                .forEach(ribbon => {\n                    selectedRibbonIds.push(ribbon.id)\n                })\n        }\n\n        if (currentRibbon) {\n            selectedArcIds.push(currentRibbon.source.id)\n            selectedArcIds.push(currentRibbon.target.id)\n            selectedRibbonIds.push(currentRibbon.id)\n        }\n\n        return { selectedArcIds, selectedRibbonIds }\n    }, [currentArc, currentRibbon, arcs, ribbons])\n\n    const hasSelection =\n        selection.selectedArcIds.length > 1 || selection.selectedRibbonIds.length > 0\n\n    const getArcOpacity = useMemo(\n        () => arc => {\n            if (!hasSelection) return arcOpacity\n            return selection.selectedArcIds.includes(arc.id)\n                ? arcHoverOpacity\n                : arcHoverOthersOpacity\n        },\n        [selection.selectedArcIds, arcOpacity, arcHoverOpacity, arcHoverOthersOpacity]\n    )\n    const getRibbonOpacity = useMemo(\n        () => ribbon => {\n            if (!hasSelection) return ribbonOpacity\n            return selection.selectedRibbonIds.includes(ribbon.id)\n                ? ribbonHoverOpacity\n                : ribbonHoverOthersOpacity\n        },\n        [selection.selectedRibbonIds, ribbonOpacity, ribbonHoverOpacity, ribbonHoverOthersOpacity]\n    )\n\n    return {\n        currentArc,\n        setCurrentArc,\n        currentRibbon,\n        setCurrentRibbon,\n        hasSelection,\n        ...selection,\n        getArcOpacity,\n        getRibbonOpacity,\n    }\n}\n\nexport const useChordLayerContext = ({\n    center,\n    radius,\n    arcs,\n    arcGenerator,\n    ribbons,\n    ribbonGenerator,\n}) =>\n    useMemo(\n        () => ({\n            center,\n            radius,\n            arcs,\n            arcGenerator,\n            ribbons,\n            ribbonGenerator,\n        }),\n        [center, radius, arcs, arcGenerator, ribbons, ribbonGenerator]\n    )\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { blendModePropType } from '@bitbloom/nivo-core'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\n\nconst ChordRibbon = memo(\n    ({\n        ribbon,\n        ribbonGenerator,\n        sourceStartAngle,\n        sourceEndAngle,\n        targetStartAngle,\n        targetEndAngle,\n        color,\n        opacity,\n        borderWidth,\n        getBorderColor,\n        blendMode,\n        isInteractive,\n        setCurrent,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }) => {\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseEnter = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                setCurrent(ribbon)\n                showTooltipFromEvent(React.createElement(tooltip, { ribbon }), event)\n                onMouseEnter && onMouseEnter(ribbon, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, ribbon, onMouseEnter])\n        const handleMouseMove = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                showTooltipFromEvent(React.createElement(tooltip, { ribbon }), event)\n                onMouseMove && onMouseMove(ribbon, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, ribbon, onMouseMove])\n        const handleMouseLeave = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                setCurrent(null)\n                hideTooltip()\n                onMouseLeave && onMouseLeave(ribbon, event)\n            }\n        }, [isInteractive, hideTooltip, ribbon, onMouseLeave])\n        const handleClick = useMemo(() => {\n            if (!isInteractive || !onClick) return undefined\n            return event => onClick(ribbon, event)\n        }, [isInteractive, ribbon, onClick])\n\n        return (\n            <path\n                d={ribbonGenerator({\n                    source: {\n                        startAngle: sourceStartAngle,\n                        endAngle: sourceEndAngle,\n                    },\n                    target: {\n                        startAngle: targetStartAngle,\n                        endAngle: targetEndAngle,\n                    },\n                })}\n                fill={color}\n                fillOpacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={getBorderColor({ ...ribbon, color })}\n                strokeOpacity={opacity}\n                style={{ mixBlendMode: blendMode }}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChordRibbon.displayName = 'ChordRibbon'\nChordRibbon.propTypes = {\n    ribbon: PropTypes.object.isRequired,\n    ribbonGenerator: PropTypes.func.isRequired,\n    sourceStartAngle: PropTypes.number.isRequired,\n    sourceEndAngle: PropTypes.number.isRequired,\n    targetStartAngle: PropTypes.number.isRequired,\n    targetEndAngle: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    blendMode: blendModePropType.isRequired,\n    opacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default ChordRibbon\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport mapValues from 'lodash/mapValues'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { blendModePropType, midAngle, useMotionConfig } from '@bitbloom/nivo-core'\nimport { interpolateColor, getInterpolatedColor } from '@bitbloom/nivo-colors'\nimport ChordRibbon from './ChordRibbon'\n\n/**\n * Used to get ribbon angles, instead of using source and target arcs,\n * we sort arcs by value to have smooth transitions, otherwise,\n * if source|target arc value becomes greater than the other,\n * the ribbon will be reversed.\n *\n * @param {Object}  source\n * @param {Object}  target\n * @param {boolean} useMiddleAngle\n * @param {Object}  [springConfig]\n * @return {Object}\n */\nconst getRibbonAngles = ({ source, target }, useMiddleAngle, springConfig) => {\n    let firstArc\n    let secondArc\n    if (source.startAngle < target.startAngle) {\n        firstArc = source\n        secondArc = target\n    } else {\n        firstArc = target\n        secondArc = source\n    }\n\n    let angles\n    if (useMiddleAngle === true) {\n        const firstMiddleAngle = midAngle(firstArc)\n        const secondMiddleAngle = midAngle(secondArc)\n\n        angles = {\n            sourceStartAngle: firstMiddleAngle,\n            sourceEndAngle: firstMiddleAngle,\n            targetStartAngle: secondMiddleAngle,\n            targetEndAngle: secondMiddleAngle,\n        }\n    } else {\n        angles = {\n            sourceStartAngle: firstArc.startAngle,\n            sourceEndAngle: firstArc.endAngle,\n            targetStartAngle: secondArc.startAngle,\n            targetEndAngle: secondArc.endAngle,\n        }\n    }\n\n    if (!springConfig) return angles\n\n    return mapValues(angles, angle => spring(angle, springConfig))\n}\n\nconst ribbonWillEnter = ({ data: ribbon }) => ({\n    ...getRibbonAngles(ribbon, true),\n    opacity: 0,\n    ...interpolateColor(ribbon.source.color),\n})\n\nconst ribbonWillLeave = springConfig => ({ data: ribbon }) => ({\n    ...getRibbonAngles(ribbon, true, springConfig),\n    opacity: 0,\n    ...interpolateColor(ribbon.source.color, springConfig),\n})\n\nconst ChordRibbons = memo(\n    ({\n        ribbons,\n        ribbonGenerator,\n        borderWidth,\n        getBorderColor,\n        getOpacity,\n        blendMode,\n        isInteractive,\n        setCurrent,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }) => {\n        const { animate, springConfig: _springConfig } = useMotionConfig()\n\n        if (animate !== true) {\n            return (\n                <g>\n                    {ribbons.map(ribbon => {\n                        return (\n                            <ChordRibbon\n                                key={ribbon.id}\n                                ribbon={ribbon}\n                                ribbonGenerator={ribbonGenerator}\n                                sourceStartAngle={ribbon.source.startAngle}\n                                sourceEndAngle={ribbon.source.endAngle}\n                                targetStartAngle={ribbon.target.startAngle}\n                                targetEndAngle={ribbon.target.endAngle}\n                                color={ribbon.source.color}\n                                blendMode={blendMode}\n                                opacity={getOpacity(ribbon)}\n                                borderWidth={borderWidth}\n                                getBorderColor={getBorderColor}\n                                isInteractive={isInteractive}\n                                setCurrent={setCurrent}\n                                onMouseEnter={onMouseEnter}\n                                onMouseMove={onMouseMove}\n                                onMouseLeave={onMouseLeave}\n                                onClick={onClick}\n                                tooltip={tooltip}\n                            />\n                        )\n                    })}\n                </g>\n            )\n        }\n\n        const springConfig = {\n            ..._springConfig,\n            precision: 0.001,\n        }\n\n        return (\n            <TransitionMotion\n                willEnter={ribbonWillEnter}\n                willLeave={ribbonWillLeave(springConfig)}\n                styles={ribbons.map(ribbon => {\n                    return {\n                        key: ribbon.id,\n                        data: ribbon,\n                        style: {\n                            ...getRibbonAngles(ribbon, false, springConfig),\n                            opacity: spring(getOpacity(ribbon), springConfig),\n                            ...interpolateColor(ribbon.source.color, springConfig),\n                        },\n                    }\n                })}\n            >\n                {interpolatedStyles => (\n                    <>\n                        {interpolatedStyles.map(({ key, style, data: ribbon }) => {\n                            const color = getInterpolatedColor(style)\n\n                            return (\n                                <ChordRibbon\n                                    key={key}\n                                    ribbon={ribbon}\n                                    ribbonGenerator={ribbonGenerator}\n                                    sourceStartAngle={style.sourceStartAngle}\n                                    sourceEndAngle={Math.max(\n                                        style.sourceEndAngle,\n                                        style.sourceStartAngle\n                                    )}\n                                    targetStartAngle={style.targetStartAngle}\n                                    targetEndAngle={Math.max(\n                                        style.targetEndAngle,\n                                        style.targetStartAngle\n                                    )}\n                                    color={color}\n                                    blendMode={blendMode}\n                                    opacity={style.opacity}\n                                    borderWidth={borderWidth}\n                                    getBorderColor={getBorderColor}\n                                    isInteractive={isInteractive}\n                                    setCurrent={setCurrent}\n                                    onMouseEnter={onMouseEnter}\n                                    onMouseMove={onMouseMove}\n                                    onMouseLeave={onMouseLeave}\n                                    onClick={onClick}\n                                    tooltip={tooltip}\n                                />\n                            )\n                        })}\n                    </>\n                )}\n            </TransitionMotion>\n        )\n    }\n)\n\nChordRibbons.displayName = 'ChordRibbons'\nChordRibbons.propTypes = {\n    ribbons: PropTypes.array.isRequired,\n    ribbonGenerator: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    getOpacity: PropTypes.func.isRequired,\n    blendMode: blendModePropType.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default ChordRibbons\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\n\nconst ChordArc = memo(\n    ({\n        arc,\n        startAngle,\n        endAngle,\n        borderWidth,\n        getBorderColor,\n        opacity,\n        arcGenerator,\n        setCurrent,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }) => {\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseEnter = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                setCurrent(arc)\n                showTooltipFromEvent(React.createElement(tooltip, { arc }), event)\n                onMouseEnter && onMouseEnter(arc, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, arc, onMouseEnter])\n        const handleMouseMove = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                showTooltipFromEvent(React.createElement(tooltip, { arc }), event)\n                onMouseMove && onMouseMove(arc, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, arc, onMouseMove])\n        const handleMouseLeave = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                setCurrent(null)\n                hideTooltip()\n                onMouseLeave && onMouseLeave(arc, event)\n            }\n        }, [isInteractive, hideTooltip, arc, onMouseLeave])\n        const handleClick = useMemo(() => {\n            if (!isInteractive || !onClick) return undefined\n            return event => onClick(arc, event)\n        }, [isInteractive, arc, onClick])\n\n        return (\n            <path\n                d={arcGenerator({ startAngle, endAngle })}\n                fill={arc.color}\n                fillOpacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={getBorderColor(arc)}\n                strokeOpacity={opacity}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChordArc.displayName = 'ChordArc'\nChordArc.propTypes = {\n    arc: PropTypes.object.isRequired,\n    startAngle: PropTypes.number.isRequired,\n    endAngle: PropTypes.number.isRequired,\n    arcGenerator: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    opacity: PropTypes.number.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default ChordArc\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { interpolateColor, getInterpolatedColor } from '@bitbloom/nivo-colors'\nimport { useMotionConfig } from '@bitbloom/nivo-core'\nimport ChordArc from './ChordArc'\n\nconst ChordArcs = memo(\n    ({\n        arcs,\n        borderWidth,\n        getBorderColor,\n        getOpacity,\n        arcGenerator,\n        setCurrent,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }) => {\n        const { animate, springConfig: _springConfig } = useMotionConfig()\n\n        if (animate !== true) {\n            return arcs.map(arc => {\n                return (\n                    <ChordArc\n                        key={arc.id}\n                        arc={arc}\n                        arcGenerator={arcGenerator}\n                        startAngle={arc.startAngle}\n                        endAngle={arc.endAngle}\n                        color={arc.color}\n                        opacity={getOpacity(arc)}\n                        borderWidth={borderWidth}\n                        getBorderColor={getBorderColor}\n                        getOpacity={getOpacity}\n                        isInteractive={isInteractive}\n                        setCurrent={setCurrent}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                )\n            })\n        }\n\n        const springConfig = {\n            ..._springConfig,\n            precision: 0.001,\n        }\n\n        return (\n            <TransitionMotion\n                styles={arcs.map(arc => {\n                    return {\n                        key: arc.id,\n                        data: arc,\n                        style: {\n                            startAngle: spring(arc.startAngle, springConfig),\n                            endAngle: spring(arc.endAngle, springConfig),\n                            opacity: spring(getOpacity(arc), springConfig),\n                            ...interpolateColor(arc.color, springConfig),\n                        },\n                    }\n                })}\n            >\n                {interpolatedStyles => (\n                    <>\n                        {interpolatedStyles.map(({ key, style, data: arc }) => {\n                            const color = getInterpolatedColor(style)\n\n                            return (\n                                <ChordArc\n                                    key={key}\n                                    arc={arc}\n                                    arcGenerator={arcGenerator}\n                                    startAngle={style.startAngle}\n                                    endAngle={style.endAngle}\n                                    color={color}\n                                    opacity={style.opacity}\n                                    borderWidth={borderWidth}\n                                    getBorderColor={getBorderColor}\n                                    getOpacity={getOpacity}\n                                    isInteractive={isInteractive}\n                                    setCurrent={setCurrent}\n                                    onMouseEnter={onMouseEnter}\n                                    onMouseMove={onMouseMove}\n                                    onMouseLeave={onMouseLeave}\n                                    onClick={onClick}\n                                    tooltip={tooltip}\n                                />\n                            )\n                        })}\n                    </>\n                )}\n            </TransitionMotion>\n        )\n    }\n)\n\nChordArcs.displayName = 'ChordArcs'\nChordArcs.propTypes = {\n    arcs: PropTypes.array.isRequired,\n    arcGenerator: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    getOpacity: PropTypes.func.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default ChordArcs\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { midAngle, getPolarLabelProps, useTheme } from '@bitbloom/nivo-core'\nimport { useMotionConfig } from '@bitbloom/nivo-core'\n\nconst ChordLabels = ({ arcs, radius, rotation, getColor }) => {\n    const theme = useTheme()\n    const { animate, springConfig } = useMotionConfig()\n\n    if (animate !== true) {\n        return (\n            <>\n                {arcs.map(arc => {\n                    const color = getColor(arc, theme)\n                    const angle = midAngle(arc)\n                    const textProps = getPolarLabelProps(radius, angle, rotation)\n\n                    return (\n                        <text\n                            key={arc.id}\n                            transform={`translate(${textProps.x}, ${textProps.y}) rotate(${textProps.rotate})`}\n                            style={{\n                                ...theme.labels.text,\n                                pointerEvents: 'none',\n                                fill: color,\n                            }}\n                            textAnchor={textProps.align}\n                            dominantBaseline={textProps.baseline}\n                        >\n                            {arc.label}\n                        </text>\n                    )\n                })}\n            </>\n        )\n    }\n\n    return (\n        <TransitionMotion\n            styles={arcs.map(arc => {\n                const angle = midAngle(arc)\n\n                return {\n                    key: arc.id,\n                    data: arc,\n                    style: {\n                        angle: spring(angle, springConfig),\n                    },\n                }\n            })}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: arc }) => {\n                        const color = getColor(arc, theme)\n                        const textProps = getPolarLabelProps(radius, style.angle, rotation)\n\n                        return (\n                            <text\n                                key={key}\n                                transform={`translate(${textProps.x}, ${textProps.y}) rotate(${textProps.rotate})`}\n                                style={{\n                                    ...theme.labels.text,\n                                    pointerEvents: 'none',\n                                    fill: color,\n                                }}\n                                textAnchor={textProps.align}\n                                dominantBaseline={textProps.baseline}\n                            >\n                                {arc.label}\n                            </text>\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nChordLabels.propTypes = {\n    arcs: PropTypes.array.isRequired,\n    radius: PropTypes.number.isRequired,\n    rotation: PropTypes.number.isRequired,\n    getColor: PropTypes.func.isRequired,\n}\n\nexport default ChordLabels\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment } from 'react'\nimport { withContainer, SvgWrapper, useDimensions, useTheme } from '@bitbloom/nivo-core'\nimport { useInheritedColor } from '@bitbloom/nivo-colors'\nimport { BoxLegendSvg } from '@bitbloom/nivo-legends'\nimport { ChordPropTypes, ChordDefaultProps } from './props'\nimport { useChord, useChordSelection, useChordLayerContext } from './hooks'\nimport ChordRibbons from './ChordRibbons'\nimport ChordArcs from './ChordArcs'\nimport ChordLabels from './ChordLabels'\n\nconst Chord = ({\n    margin: partialMargin,\n    width,\n    height,\n\n    keys,\n    matrix,\n    label,\n    valueFormat,\n    innerRadiusRatio,\n    innerRadiusOffset,\n    padAngle,\n\n    layers,\n\n    colors,\n\n    arcBorderWidth,\n    arcBorderColor,\n    arcOpacity,\n    arcHoverOpacity,\n    arcHoverOthersOpacity,\n    arcTooltip,\n\n    ribbonBorderWidth,\n    ribbonBorderColor,\n    ribbonBlendMode,\n    ribbonOpacity,\n    ribbonHoverOpacity,\n    ribbonHoverOthersOpacity,\n    ribbonTooltip,\n\n    enableLabel,\n    labelOffset,\n    labelRotation,\n    labelTextColor,\n\n    isInteractive,\n    onArcMouseEnter,\n    onArcMouseMove,\n    onArcMouseLeave,\n    onArcClick,\n    onRibbonMouseEnter,\n    onRibbonMouseMove,\n    onRibbonMouseLeave,\n    onRibbonClick,\n\n    legends,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { center, radius, arcGenerator, ribbonGenerator, arcs, ribbons } = useChord({\n        keys,\n        matrix,\n        label,\n        valueFormat,\n        width: innerWidth,\n        height: innerHeight,\n        innerRadiusRatio,\n        innerRadiusOffset,\n        padAngle,\n        colors,\n    })\n\n    const { setCurrentArc, setCurrentRibbon, getArcOpacity, getRibbonOpacity } = useChordSelection({\n        arcs,\n        arcOpacity,\n        arcHoverOpacity,\n        arcHoverOthersOpacity,\n        ribbons,\n        ribbonOpacity,\n        ribbonHoverOpacity,\n        ribbonHoverOthersOpacity,\n    })\n\n    const theme = useTheme()\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n    const getArcBorderColor = useInheritedColor(arcBorderColor, theme)\n    const getRibbonBorderColor = useInheritedColor(ribbonBorderColor, theme)\n\n    const layerContext = useChordLayerContext({\n        center,\n        radius,\n        arcs,\n        arcGenerator,\n        ribbons,\n        ribbonGenerator,\n    })\n\n    if (radius <= 0) return null\n\n    const legendData = arcs.map(arc => ({\n        id: arc.id,\n        label: arc.label,\n        color: arc.color,\n    }))\n\n    const layerById = {\n        ribbons: (\n            <g key=\"ribbons\" transform={`translate(${center[0]}, ${center[1]})`}>\n                <ChordRibbons\n                    ribbons={ribbons}\n                    ribbonGenerator={ribbonGenerator}\n                    borderWidth={ribbonBorderWidth}\n                    getBorderColor={getRibbonBorderColor}\n                    getOpacity={getRibbonOpacity}\n                    blendMode={ribbonBlendMode}\n                    setCurrent={setCurrentRibbon}\n                    isInteractive={isInteractive}\n                    onMouseEnter={onRibbonMouseEnter}\n                    onMouseMove={onRibbonMouseMove}\n                    onMouseLeave={onRibbonMouseLeave}\n                    onClick={onRibbonClick}\n                    tooltip={ribbonTooltip}\n                />\n            </g>\n        ),\n        arcs: (\n            <g key=\"arcs\" transform={`translate(${center[0]}, ${center[1]})`}>\n                <ChordArcs\n                    arcs={arcs}\n                    arcGenerator={arcGenerator}\n                    borderWidth={arcBorderWidth}\n                    getBorderColor={getArcBorderColor}\n                    getOpacity={getArcOpacity}\n                    setCurrent={setCurrentArc}\n                    isInteractive={isInteractive}\n                    onMouseEnter={onArcMouseEnter}\n                    onMouseMove={onArcMouseMove}\n                    onMouseLeave={onArcMouseLeave}\n                    onClick={onArcClick}\n                    tooltip={arcTooltip}\n                />\n            </g>\n        ),\n        labels: null,\n        legends: (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={innerWidth}\n                        containerHeight={innerHeight}\n                        data={legendData}\n                        theme={theme}\n                    />\n                ))}\n            </Fragment>\n        ),\n    }\n\n    if (enableLabel === true) {\n        layerById.labels = (\n            <g key=\"labels\" transform={`translate(${center[0]}, ${center[1]})`}>\n                <ChordLabels\n                    arcs={arcs}\n                    radius={radius + labelOffset}\n                    rotation={labelRotation}\n                    getColor={getLabelTextColor}\n                />\n            </g>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer] !== undefined) {\n                    return layerById[layer]\n                }\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{layer(layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nChord.propTypes = ChordPropTypes\nChord.defaultProps = ChordDefaultProps\n\nexport default withContainer(Chord)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useRef, useEffect, useCallback } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    midAngle,\n    getPolarLabelProps,\n    degreesToRadians,\n    getRelativeCursor,\n    getHoveredArc,\n} from '@bitbloom/nivo-core'\nimport { useInheritedColor } from '@bitbloom/nivo-colors'\nimport { renderLegendToCanvas } from '@bitbloom/nivo-legends'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\nimport { useChord, useChordSelection, useChordLayerContext } from './hooks'\nimport { ChordCanvasPropTypes, ChordCanvasDefaultProps } from './props'\n\nconst getArcFromMouseEvent = ({ event, canvasEl, center, margin, radius, innerRadius, arcs }) => {\n    const [x, y] = getRelativeCursor(canvasEl, event)\n    const centerX = margin.left + center[0]\n    const centerY = margin.top + center[1]\n\n    return getHoveredArc(centerX, centerY, radius, innerRadius, arcs, x, y)\n}\n\nconst ChordCanvas = memo(\n    ({\n        pixelRatio,\n        margin: partialMargin,\n        width,\n        height,\n        keys,\n        matrix,\n        label,\n        valueFormat,\n        innerRadiusRatio,\n        innerRadiusOffset,\n        padAngle,\n        layers,\n        colors,\n        arcBorderWidth,\n        arcBorderColor,\n        arcOpacity,\n        arcHoverOpacity,\n        arcHoverOthersOpacity,\n        arcTooltip,\n        ribbonBorderWidth,\n        ribbonBorderColor,\n        ribbonOpacity,\n        ribbonHoverOpacity,\n        ribbonHoverOthersOpacity,\n        enableLabel,\n        labelOffset,\n        labelRotation,\n        labelTextColor,\n        isInteractive,\n        onArcMouseEnter,\n        onArcMouseMove,\n        onArcMouseLeave,\n        onArcClick,\n        legends,\n    }) => {\n        const canvasEl = useRef(null)\n        const { innerWidth, innerHeight, outerWidth, outerHeight, margin } = useDimensions(\n            width,\n            height,\n            partialMargin\n        )\n\n        const {\n            center,\n            radius,\n            innerRadius,\n            arcGenerator,\n            ribbonGenerator,\n            arcs,\n            ribbons,\n        } = useChord({\n            keys,\n            matrix,\n            label,\n            valueFormat,\n            width: innerWidth,\n            height: innerHeight,\n            innerRadiusRatio,\n            innerRadiusOffset,\n            padAngle,\n            colors,\n        })\n\n        const { currentArc, setCurrentArc, getArcOpacity, getRibbonOpacity } = useChordSelection({\n            arcs,\n            arcOpacity,\n            arcHoverOpacity,\n            arcHoverOthersOpacity,\n            ribbons,\n            ribbonOpacity,\n            ribbonHoverOpacity,\n            ribbonHoverOthersOpacity,\n        })\n\n        const theme = useTheme()\n        const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n        const getArcBorderColor = useInheritedColor(arcBorderColor, theme)\n        const getRibbonBorderColor = useInheritedColor(ribbonBorderColor, theme)\n\n        const layerContext = useChordLayerContext({\n            center,\n            radius,\n            arcs,\n            arcGenerator,\n            ribbons,\n            ribbonGenerator,\n        })\n\n        useEffect(() => {\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n            if (radius <= 0) return\n\n            layers.forEach(layer => {\n                if (layer === 'ribbons') {\n                    ctx.save()\n                    ctx.translate(margin.left + center[0], margin.top + center[1])\n\n                    ribbonGenerator.context(ctx)\n                    ribbons.forEach(ribbon => {\n                        ctx.save()\n\n                        ctx.globalAlpha = getRibbonOpacity(ribbon)\n                        ctx.fillStyle = ribbon.source.color\n                        ctx.beginPath()\n                        ribbonGenerator(ribbon)\n                        ctx.fill()\n\n                        if (ribbonBorderWidth > 0) {\n                            ctx.strokeStyle = getRibbonBorderColor({\n                                ...ribbon,\n                                color: ribbon.source.color,\n                            })\n                            ctx.lineWidth = ribbonBorderWidth\n                            ctx.stroke()\n                        }\n\n                        ctx.restore()\n                    })\n\n                    ctx.restore()\n                }\n\n                if (layer === 'arcs') {\n                    ctx.save()\n                    ctx.translate(margin.left + center[0], margin.top + center[1])\n\n                    arcGenerator.context(ctx)\n                    arcs.forEach(arc => {\n                        ctx.save()\n\n                        ctx.globalAlpha = getArcOpacity(arc)\n                        ctx.fillStyle = arc.color\n                        ctx.beginPath()\n                        arcGenerator(arc)\n                        ctx.fill()\n\n                        if (arcBorderWidth > 0) {\n                            ctx.strokeStyle = getArcBorderColor(arc)\n                            ctx.lineWidth = arcBorderWidth\n                            ctx.stroke()\n                        }\n\n                        ctx.restore()\n                    })\n\n                    ctx.restore()\n                }\n\n                if (layer === 'labels' && enableLabel === true) {\n                    ctx.save()\n                    ctx.translate(margin.left + center[0], margin.top + center[1])\n\n                    ctx.font = `${theme.labels.text.fontSize}px ${\n                        theme.labels.text.fontFamily || 'sans-serif'\n                    }`\n\n                    arcs.forEach(arc => {\n                        const angle = midAngle(arc)\n                        const props = getPolarLabelProps(radius + labelOffset, angle, labelRotation)\n\n                        ctx.save()\n                        ctx.translate(props.x, props.y)\n                        ctx.rotate(degreesToRadians(props.rotate))\n\n                        ctx.textAlign = props.align\n                        ctx.textBaseline = props.baseline\n                        ctx.fillStyle = getLabelTextColor(arc, theme)\n                        ctx.fillText(arc.label, 0, 0)\n\n                        ctx.restore()\n                    })\n\n                    ctx.restore()\n                }\n\n                if (layer === 'legends') {\n                    ctx.save()\n                    ctx.translate(margin.left, margin.top)\n\n                    const legendData = arcs.map(arc => ({\n                        id: arc.id,\n                        label: arc.label,\n                        color: arc.color,\n                    }))\n\n                    legends.forEach(legend => {\n                        renderLegendToCanvas(ctx, {\n                            ...legend,\n                            data: legendData,\n                            containerWidth: innerWidth,\n                            containerHeight: innerHeight,\n                            theme,\n                        })\n                    })\n\n                    ctx.restore()\n                }\n\n                if (typeof layer === 'function') {\n                    layer(ctx, layerContext)\n                }\n            })\n        }, [\n            canvasEl,\n            innerWidth,\n            innerHeight,\n            outerWidth,\n            outerHeight,\n            margin,\n            pixelRatio,\n            theme,\n            layers,\n            arcs,\n            arcGenerator,\n            getArcOpacity,\n            arcBorderWidth,\n            getArcBorderColor,\n            ribbons,\n            ribbonGenerator,\n            getRibbonOpacity,\n            ribbonBorderWidth,\n            getRibbonBorderColor,\n            enableLabel,\n            labelOffset,\n            labelRotation,\n            getLabelTextColor,\n            legends,\n            layerContext,\n        ])\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseHover = useCallback(\n            event => {\n                const arc = getArcFromMouseEvent({\n                    event,\n                    canvasEl: canvasEl.current,\n                    center,\n                    margin,\n                    radius,\n                    innerRadius,\n                    arcs,\n                })\n\n                if (arc) {\n                    setCurrentArc(arc)\n                    showTooltipFromEvent(React.createElement(arcTooltip, { arc }), event)\n                    !currentArc && onArcMouseEnter && onArcMouseEnter(arc, event)\n                    onArcMouseMove && onArcMouseMove(arc, event)\n                    currentArc &&\n                        currentArc.id !== arc.id &&\n                        onArcMouseLeave &&\n                        onArcMouseLeave(arc, event)\n                } else {\n                    setCurrentArc(null)\n                    hideTooltip()\n                    currentArc && onArcMouseLeave && onArcMouseLeave(currentArc, event)\n                }\n            },\n            [\n                canvasEl,\n                center,\n                margin,\n                radius,\n                innerRadius,\n                arcs,\n                setCurrentArc,\n                showTooltipFromEvent,\n                hideTooltip,\n                onArcMouseEnter,\n                onArcMouseMove,\n                onArcMouseLeave,\n            ]\n        )\n\n        const handleMouseLeave = useCallback(() => {\n            setCurrentArc(null)\n            hideTooltip()\n        }, [setCurrentArc, hideTooltip])\n\n        const handleClick = useCallback(\n            event => {\n                if (!onArcClick) return\n\n                const arc = getArcFromMouseEvent({\n                    event,\n                    canvasEl: canvasEl.current,\n                    center,\n                    margin,\n                    radius,\n                    innerRadius,\n                    arcs,\n                })\n\n                arc && onArcClick(arc, event)\n            },\n            [canvasEl, center, margin, radius, innerRadius, arcs, onArcClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                    cursor: isInteractive ? 'auto' : 'normal',\n                }}\n                onMouseEnter={isInteractive ? handleMouseHover : undefined}\n                onMouseMove={isInteractive ? handleMouseHover : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n\nChordCanvas.propTypes = ChordCanvasPropTypes\nChordCanvas.defaultProps = ChordCanvasDefaultProps\n\nexport default withContainer(ChordCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport Chord from './Chord'\n\nconst ResponsiveChord = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Chord width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChord\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport ChordCanvas from './ChordCanvas'\n\nconst ResponsiveChordCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ChordCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChordCanvas\n"],"names":["defineProperty","ChordArcTooltip","memo","arc","React","BasicTooltip","label","formattedValue","color","displayName","ChordRibbonTooltip","ribbon","theme","useTheme","TableTooltip","Chip","source","target","commonPropTypes","keys","PropTypes","arrayOf","string","isRequired","matrix","number","valueFormat","oneOfType","func","padAngle","innerRadiusRatio","innerRadiusOffset","layers","oneOf","arcOpacity","arcHoverOpacity","arcHoverOthersOpacity","arcBorderWidth","arcBorderColor","inheritedColorPropType","onArcMouseEnter","onArcMouseMove","onArcMouseLeave","onArcClick","arcTooltip","object","ribbonOpacity","ribbonHoverOpacity","ribbonHoverOthersOpacity","ribbonBorderWidth","ribbonBorderColor","ribbonBlendMode","blendModePropType","onRibbonMouseEnter","onRibbonMouseMove","onRibbonMouseLeave","onRibbonClick","ribbonTooltip","enableLabel","bool","labelOffset","labelRotation","labelTextColor","colors","ordinalColorsPropType","isInteractive","legends","shape","LegendPropShape","ChordPropTypes","motionPropTypes","role","ChordCanvasPropTypes","pixelRatio","commonDefaultProps","from","modifiers","scheme","ChordDefaultProps","animate","motionStiffness","motionDamping","ChordCanvasDefaultProps","global","window","devicePixelRatio","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","computeChordLayout","d3Chord","computeChordGenerators","width","height","center","radius","Math","min","innerRadius","ribbonRadius","arcGenerator","d3Arc","outerRadius","ribbonGenerator","d3Ribbon","computeChordArcsAndRibbons","chord","getColor","getLabel","formatValue","ribbons","arcs","groups","map","id","index","value","forEach","sort","join","useChordLayout","useMemo","useChordGenerators","useChordArcsAndRibbons","useChord","getLabelGenerator","useValueFormatter","useOrdinalColorScale","useChordSelection","useState","currentArc","setCurrentArc","currentRibbon","setCurrentRibbon","selection","selectedArcIds","selectedRibbonIds","push","filter","hasSelection","length","getArcOpacity","includes","getRibbonOpacity","useChordLayerContext","ChordRibbon","sourceStartAngle","sourceEndAngle","targetStartAngle","targetEndAngle","opacity","borderWidth","getBorderColor","blendMode","setCurrent","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","undefined","event","createElement","handleMouseMove","handleMouseLeave","handleClick","startAngle","endAngle","mixBlendMode","getRibbonAngles","useMiddleAngle","springConfig","firstArc","secondArc","angles","firstMiddleAngle","midAngle","secondMiddleAngle","mapValues","angle","spring","ribbonWillEnter","data","interpolateColor","ribbonWillLeave","ChordRibbons","getOpacity","useMotionConfig","_springConfig","precision","TransitionMotion","key","style","interpolatedStyles","getInterpolatedColor","max","ChordArc","ChordArcs","ChordLabels","rotation","textProps","getPolarLabelProps","x","y","rotate","labels","text","pointerEvents","fill","align","baseline","Chord","partialMargin","margin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","getLabelTextColor","useInheritedColor","getArcBorderColor","getRibbonBorderColor","layerContext","legendData","layerById","Fragment","legend","i","BoxLegendSvg","SvgWrapper","layer","defaultProps","withContainer","getArcFromMouseEvent","canvasEl","getRelativeCursor","centerX","left","centerY","top","getHoveredArc","ChordCanvas","useRef","useEffect","current","ctx","getContext","scale","fillStyle","background","fillRect","save","translate","context","globalAlpha","beginPath","strokeStyle","lineWidth","stroke","restore","font","fontSize","fontFamily","props","degreesToRadians","textAlign","textBaseline","fillText","renderLegendToCanvas","containerWidth","containerHeight","handleMouseHover","useCallback","cursor","ResponsiveChord","ResponsiveWrapper","ResponsiveChordCanvas"],"mappings":"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"}