{"version":3,"file":"nivo-heatmap.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/props.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/hooks.js","../src/HeatMapCells.js","../src/HeatMapCellRect.js","../src/HeatMapCellCircle.js","../src/HeatMapCellTooltip.js","../src/HeatMap.js","../src/canvas.js","../src/HeatMapCanvas.js","../src/ResponsiveHeatMap.js","../src/ResponsiveHeatMapCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { quantizeColorScalePropType, noop } from '@bitbloom/nivo-core'\nimport { inheritedColorPropType } from '@bitbloom/nivo-colors'\nimport { axisPropType } from '@bitbloom/nivo-axes'\n\nexport const HeatMapPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    indexBy: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    keys: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n    minValue: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n    maxValue: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n\n    forceSquare: PropTypes.bool.isRequired,\n    sizeVariation: PropTypes.number.isRequired,\n    padding: PropTypes.number.isRequired,\n\n    cellShape: PropTypes.oneOfType([PropTypes.oneOf(['rect', 'circle']), PropTypes.func])\n        .isRequired,\n    cellOpacity: PropTypes.number.isRequired,\n    cellBorderWidth: PropTypes.number.isRequired,\n    cellBorderColor: inheritedColorPropType.isRequired,\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n\n    enableLabels: PropTypes.bool.isRequired,\n    labelTextColor: inheritedColorPropType.isRequired,\n\n    colors: quantizeColorScalePropType.isRequired,\n    nanColor: PropTypes.string,\n\n    isInteractive: PropTypes.bool,\n    onClick: PropTypes.func.isRequired,\n    hoverTarget: PropTypes.oneOf(['cell', 'row', 'column', 'rowColumn']).isRequired,\n    cellHoverOpacity: PropTypes.number.isRequired,\n    cellHoverOthersOpacity: PropTypes.number.isRequired,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    tooltip: PropTypes.func,\n\n    pixelRatio: PropTypes.number.isRequired,\n}\n\nexport const HeatMapSvgPropTypes = {\n    ...HeatMapPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const HeatMapDefaultProps = {\n    indexBy: 'id',\n\n    minValue: 'auto',\n    maxValue: 'auto',\n\n    forceSquare: false,\n    sizeVariation: 0,\n    padding: 0,\n\n    // cells\n    cellShape: 'rect',\n    cellOpacity: 0.85,\n    cellBorderWidth: 0,\n    cellBorderColor: { from: 'color' },\n\n    // axes & grid\n    axisTop: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: false,\n\n    // labels\n    enableLabels: true,\n    labelTextColor: { from: 'color', modifiers: [['darker', 1.4]] },\n\n    // theming\n    colors: 'nivo',\n    nanColor: '#000000',\n\n    // interactivity\n    isInteractive: true,\n    onClick: noop,\n    hoverTarget: 'rowColumn',\n    cellHoverOpacity: 1,\n    cellHoverOthersOpacity: 0.35,\n\n    // canvas specific\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n\nexport const HeatMapSvgDefaultProps = {\n    ...HeatMapDefaultProps,\n    role: 'img',\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { useState, useMemo } from 'react'\nimport { scaleOrdinal, scaleLinear } from 'd3-scale'\nimport { useTheme, getAccessorFor, guessQuantizeColorScale } from '@bitbloom/nivo-core'\nimport { useInheritedColor } from '@bitbloom/nivo-colors'\n\nconst computeX = (column, cellWidth, padding) => {\n    return column * cellWidth + cellWidth * 0.5 + padding * column + padding\n}\nconst computeY = (row, cellHeight, padding) => {\n    return row * cellHeight + cellHeight * 0.5 + padding * row + padding\n}\n\nconst isHoverTargetByType = {\n    cell: (cell, current) => cell.xKey === current.xKey && cell.yKey === current.yKey,\n    row: (cell, current) => cell.yKey === current.yKey,\n    column: (cell, current) => cell.xKey === current.xKey,\n    rowColumn: (cell, current) => cell.xKey === current.xKey || cell.yKey === current.yKey,\n}\n\nconst computeCells = ({\n    data,\n    keys,\n    getIndex,\n    xScale,\n    yScale,\n    sizeScale,\n    cellOpacity,\n    cellWidth,\n    cellHeight,\n    colorScale,\n    nanColor,\n    getLabelTextColor,\n}) => {\n    const cells = []\n    data.forEach(datum => {\n        keys.forEach(key => {\n            const value = datum[key]\n            const index = getIndex(datum)\n            const sizeMultiplier = sizeScale ? sizeScale(value) : 1\n            const width = sizeMultiplier * cellWidth\n            const height = sizeMultiplier * cellHeight\n\n            const cell = {\n                id: `${key}.${index}`,\n                xKey: key,\n                yKey: index,\n                x: xScale(key),\n                y: yScale(index),\n                width,\n                height,\n                value,\n                color: isNaN(value) ? nanColor : colorScale(value),\n                opacity: cellOpacity,\n            }\n            cell.labelTextColor = getLabelTextColor(cell)\n\n            cells.push(cell)\n        })\n    })\n\n    return cells\n}\n\nexport const useHeatMap = ({\n    data,\n    keys,\n    indexBy,\n    minValue: _minValue = 'auto',\n    maxValue: _maxValue = 'auto',\n    width,\n    height,\n    padding,\n    forceSquare,\n    sizeVariation,\n    colors,\n    nanColor,\n    cellOpacity,\n    cellBorderColor,\n    labelTextColor,\n    hoverTarget,\n    cellHoverOpacity,\n    cellHoverOthersOpacity,\n}) => {\n    const [currentCellId, setCurrentCellId] = useState(null)\n\n    const getIndex = useMemo(() => getAccessorFor(indexBy), [indexBy])\n    const indices = useMemo(() => data.map(getIndex), [data, getIndex])\n\n    const layoutConfig = useMemo(() => {\n        const columns = keys.length\n        const rows = data.length\n\n        let cellWidth = Math.max((width - padding * (columns + 1)) / columns, 0)\n        let cellHeight = Math.max((height - padding * (rows + 1)) / rows, 0)\n\n        let offsetX = 0\n        let offsetY = 0\n        if (forceSquare === true) {\n            const cellSize = Math.min(cellWidth, cellHeight)\n            cellWidth = cellSize\n            cellHeight = cellSize\n\n            offsetX = (width - ((cellWidth + padding) * columns + padding)) / 2\n            offsetY = (height - ((cellHeight + padding) * rows + padding)) / 2\n        }\n\n        return {\n            cellWidth,\n            cellHeight,\n            offsetX,\n            offsetY,\n        }\n    }, [data, keys, width, height, padding, forceSquare])\n\n    const scales = useMemo(() => {\n        return {\n            x: scaleOrdinal(\n                keys.map((key, i) => computeX(i, layoutConfig.cellWidth, padding))\n            ).domain(keys),\n            y: scaleOrdinal(\n                indices.map((d, i) => computeY(i, layoutConfig.cellHeight, padding))\n            ).domain(indices),\n        }\n    }, [indices, keys, layoutConfig, padding])\n\n    const values = useMemo(() => {\n        let minValue = _minValue\n        let maxValue = _maxValue\n        if (minValue === 'auto' || maxValue === 'auto') {\n            const allValues = data.reduce((acc, row) => acc.concat(keys.map(key => row[key])), [])\n\n            if (minValue === 'auto') minValue = Math.min(...allValues)\n            if (maxValue === 'auto') maxValue = Math.max(...allValues)\n        }\n\n        return {\n            min: Math.min(minValue, maxValue),\n            max: Math.max(maxValue, minValue),\n        }\n    }, [data, keys, _minValue, _maxValue])\n\n    const sizeScale = useMemo(() => {\n        if (sizeVariation > 0) {\n            return scaleLinear()\n                .range([1 - sizeVariation, 1])\n                .domain([values.min, values.max])\n        }\n    }, [sizeVariation, values])\n\n    const colorScale = useMemo(\n        () => guessQuantizeColorScale(colors).domain([values.min, values.max]),\n        [colors, values]\n    )\n    const theme = useTheme()\n    const getCellBorderColor = useInheritedColor(cellBorderColor, theme)\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n\n    const cells = useMemo(\n        () =>\n            computeCells({\n                data,\n                keys,\n                getIndex,\n                xScale: scales.x,\n                yScale: scales.y,\n                sizeScale,\n                cellOpacity,\n                cellWidth: layoutConfig.cellWidth,\n                cellHeight: layoutConfig.cellHeight,\n                colorScale,\n                nanColor,\n                getLabelTextColor,\n            }),\n        [\n            data,\n            keys,\n            getIndex,\n            scales,\n            sizeScale,\n            cellOpacity,\n            layoutConfig,\n            colorScale,\n            nanColor,\n            getLabelTextColor,\n        ]\n    )\n\n    const cellsWithCurrent = useMemo(() => {\n        if (currentCellId === null) return cells\n\n        const isHoverTarget = isHoverTargetByType[hoverTarget]\n        const currentCell = cells.find(cell => cell.id === currentCellId)\n\n        return cells.map(cell => {\n            const opacity = isHoverTarget(cell, currentCell)\n                ? cellHoverOpacity\n                : cellHoverOthersOpacity\n\n            if (opacity === cell.opacity) return cell\n\n            return {\n                ...cell,\n                opacity,\n            }\n        })\n    }, [cells, currentCellId, hoverTarget, cellHoverOpacity, cellHoverOthersOpacity])\n\n    return {\n        cells: cellsWithCurrent,\n        getIndex,\n        xScale: scales.x,\n        yScale: scales.y,\n        ...layoutConfig,\n        sizeScale,\n        setCurrentCellId,\n        colorScale,\n        getCellBorderColor,\n        getLabelTextColor,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\n\nconst HeatMapCells = ({\n    cells,\n    cellComponent,\n    cellBorderWidth,\n    getCellBorderColor,\n    enableLabels,\n    getLabelTextColor,\n    handleCellHover,\n    handleCellLeave,\n    onClick,\n}) => {\n    return cells.map(cell =>\n        React.createElement(cellComponent, {\n            key: cell.id,\n            data: cell,\n            value: cell.value,\n            x: cell.x,\n            y: cell.y,\n            width: cell.width,\n            height: cell.height,\n            color: cell.color,\n            opacity: cell.opacity,\n            borderWidth: cellBorderWidth,\n            borderColor: getCellBorderColor(cell),\n            enableLabel: enableLabels,\n            textColor: getLabelTextColor(cell),\n            onHover: handleCellHover ? event => handleCellHover(cell, event) : undefined,\n            onLeave: handleCellLeave,\n            onClick,\n        })\n    )\n}\n\nHeatMapCells.propTypes = {}\n\nexport default HeatMapCells\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig, useTheme } from '@bitbloom/nivo-core'\n\nconst HeatMapCellRect = ({\n    data,\n    value,\n    x,\n    y,\n    width,\n    height,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    enableLabel,\n    textColor,\n    onHover,\n    onLeave,\n    onClick,\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x}, ${y})`,\n        width,\n        height,\n        xOffset: width * -0.5,\n        yOffset: height * -0.5,\n        color,\n        opacity,\n        textColor,\n        borderWidth,\n        borderColor,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g\n            transform={animatedProps.transform}\n            style={{ cursor: 'pointer' }}\n            onMouseEnter={onHover}\n            onMouseMove={onHover}\n            onMouseLeave={onLeave}\n            onClick={onClick ? event => onClick(data, event) : undefined}\n        >\n            <animated.rect\n                x={animatedProps.xOffset}\n                y={animatedProps.yOffset}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                fill={animatedProps.color}\n                fillOpacity={animatedProps.opacity}\n                strokeWidth={animatedProps.borderWidth}\n                stroke={animatedProps.borderColor}\n                strokeOpacity={animatedProps.opacity}\n            />\n            {enableLabel && (\n                <animated.text\n                    dominantBaseline=\"central\"\n                    textAnchor=\"middle\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: animatedProps.textColor,\n                    }}\n                    fillOpacity={animatedProps.opacity}\n                >\n                    {value}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n\nHeatMapCellRect.propTypes = {\n    data: PropTypes.object.isRequired,\n    value: PropTypes.number.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    textColor: PropTypes.string.isRequired,\n    onHover: PropTypes.func,\n    onLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default memo(HeatMapCellRect)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@bitbloom/nivo-core'\n\nconst HeatMapCellCircle = ({\n    data,\n    value,\n    x,\n    y,\n    width,\n    height,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    enableLabel,\n    textColor,\n    onHover,\n    onLeave,\n    onClick,\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x}, ${y})`,\n        radius: Math.min(width, height) / 2,\n        color,\n        opacity,\n        textColor,\n        borderWidth,\n        borderColor,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g\n            transform={animatedProps.transform}\n            style={{ cursor: 'pointer' }}\n            onMouseEnter={onHover}\n            onMouseMove={onHover}\n            onMouseLeave={onLeave}\n            onClick={onClick ? event => onClick(data, event) : undefined}\n        >\n            <animated.circle\n                r={animatedProps.radius}\n                fill={animatedProps.color}\n                fillOpacity={animatedProps.opacity}\n                strokeWidth={animatedProps.borderWidth}\n                stroke={animatedProps.borderColor}\n                strokeOpacity={animatedProps.opacity}\n            />\n            {enableLabel && (\n                <animated.text\n                    dominantBaseline=\"central\"\n                    textAnchor=\"middle\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: animatedProps.textColor,\n                    }}\n                    fillOpacity={animatedProps.opacity}\n                >\n                    {value}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n\nHeatMapCellCircle.propTypes = {\n    data: PropTypes.object.isRequired,\n    value: PropTypes.number.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    textColor: PropTypes.string.isRequired,\n    onHover: PropTypes.func,\n    onLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default memo(HeatMapCellCircle)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@bitbloom/nivo-tooltip'\n\nconst HeatMapCellTooltip = ({ cell, format, tooltip }) => (\n    <BasicTooltip\n        id={`${cell.yKey} - ${cell.xKey}`}\n        value={cell.value}\n        enableChip={true}\n        color={cell.color}\n        format={format}\n        renderContent={typeof tooltip === 'function' ? tooltip.bind(null, { ...cell }) : null}\n    />\n)\n\nHeatMapCellTooltip.propTypes = {\n    cell: PropTypes.shape({\n        xKey: PropTypes.string.isRequired,\n        yKey: PropTypes.string.isRequired,\n        value: PropTypes.number.isRequired,\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n    format: PropTypes.func,\n    tooltip: PropTypes.func,\n}\n\nexport default memo(HeatMapCellTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useCallback } from 'react'\nimport { SvgWrapper, withContainer, useDimensions } from '@bitbloom/nivo-core'\nimport { Axes, Grid } from '@bitbloom/nivo-axes'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\nimport { HeatMapSvgPropTypes, HeatMapSvgDefaultProps } from './props'\nimport { useHeatMap } from './hooks'\nimport HeatMapCells from './HeatMapCells'\nimport HeatMapCellRect from './HeatMapCellRect'\nimport HeatMapCellCircle from './HeatMapCellCircle'\nimport HeatMapCellTooltip from './HeatMapCellTooltip'\n\nconst HeatMap = ({\n    data,\n    keys,\n    indexBy,\n    minValue,\n    maxValue,\n    width,\n    height,\n    margin: partialMargin,\n    forceSquare,\n    padding,\n    sizeVariation,\n    cellShape,\n    cellOpacity,\n    cellBorderWidth,\n    cellBorderColor,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n    enableGridX,\n    enableGridY,\n    enableLabels,\n    labelTextColor,\n    colors,\n    nanColor,\n    isInteractive,\n    onClick,\n    hoverTarget,\n    cellHoverOpacity,\n    cellHoverOthersOpacity,\n    tooltipFormat,\n    tooltip,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        cells,\n        xScale,\n        yScale,\n        offsetX,\n        offsetY,\n        setCurrentCellId,\n        getCellBorderColor,\n        getLabelTextColor,\n    } = useHeatMap({\n        data,\n        keys,\n        indexBy,\n        minValue,\n        maxValue,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        forceSquare,\n        sizeVariation,\n        colors,\n        nanColor,\n        cellOpacity,\n        cellBorderColor,\n        labelTextColor,\n        hoverTarget,\n        cellHoverOpacity,\n        cellHoverOthersOpacity,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleCellHover = useCallback(\n        (cell, event) => {\n            setCurrentCellId(cell.id)\n            showTooltipFromEvent(\n                <HeatMapCellTooltip cell={cell} format={tooltipFormat} tooltip={tooltip} />,\n                event\n            )\n        },\n        [setCurrentCellId, showTooltipFromEvent, tooltipFormat, tooltip]\n    )\n\n    const handleCellLeave = useCallback(() => {\n        setCurrentCellId(null)\n        hideTooltip()\n    }, [setCurrentCellId, hideTooltip])\n\n    let cellComponent\n    if (cellShape === 'rect') {\n        cellComponent = HeatMapCellRect\n    } else if (cellShape === 'circle') {\n        cellComponent = HeatMapCellCircle\n    } else {\n        cellComponent = cellShape\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={Object.assign({}, margin, {\n                top: margin.top + offsetY,\n                left: margin.left + offsetX,\n            })}\n            role={role}\n        >\n            <Grid\n                width={innerWidth - offsetX * 2}\n                height={innerHeight - offsetY * 2}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n            />\n            <Axes\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth - offsetX * 2}\n                height={innerHeight - offsetY * 2}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n            <HeatMapCells\n                cells={cells}\n                cellComponent={cellComponent}\n                cellBorderWidth={cellBorderWidth}\n                getCellBorderColor={getCellBorderColor}\n                enableLabels={enableLabels}\n                getLabelTextColor={getLabelTextColor}\n                handleCellHover={isInteractive ? handleCellHover : undefined}\n                handleCellLeave={isInteractive ? handleCellLeave : undefined}\n                onClick={isInteractive ? onClick : undefined}\n            />\n        </SvgWrapper>\n    )\n}\n\nHeatMap.propTypes = HeatMapSvgPropTypes\n\nconst WrappedHeatMap = withContainer(HeatMap)\nWrappedHeatMap.defaultProps = HeatMapSvgDefaultProps\n\nexport default WrappedHeatMap\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Render heatmap rect cell.\n *\n * @param {Object}  ctx\n * @param {boolean} enableLabels\n * @param {number}  x\n * @param {number}  y\n * @param {number}  width\n * @param {number}  height\n * @param {string}  color\n * @param {number}  opacity\n * @param {string}  labelTextColor\n * @param {number}  value\n */\nexport const renderRect = (\n    ctx,\n    { enableLabels, theme },\n    { x, y, width, height, color, opacity, labelTextColor, value }\n) => {\n    ctx.save()\n    ctx.globalAlpha = opacity\n\n    ctx.fillStyle = color\n    ctx.fillRect(x - width / 2, y - height / 2, width, height)\n\n    if (enableLabels === true) {\n        ctx.fillStyle = labelTextColor\n        ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n        ctx.fillText(value, x, y)\n    }\n\n    ctx.restore()\n}\n\n/**\n * Render heatmap circle cell.\n *\n * @param {Object}  ctx\n * @param {boolean} enableLabels\n * @param {number}  x\n * @param {number}  y\n * @param {number}  width\n * @param {number}  height\n * @param {string}  color\n * @param {number}  opacity\n * @param {string}  labelTextColor\n * @param {number}  value\n */\nexport const renderCircle = (\n    ctx,\n    { enableLabels, theme },\n    { x, y, width, height, color, opacity, labelTextColor, value }\n) => {\n    ctx.save()\n    ctx.globalAlpha = opacity\n\n    const radius = Math.min(width, height) / 2\n\n    ctx.fillStyle = color\n    ctx.beginPath()\n    ctx.arc(x, y, radius, 0, 2 * Math.PI)\n    ctx.fill()\n\n    if (enableLabels === true) {\n        ctx.fillStyle = labelTextColor\n        ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n        ctx.fillText(value, x, y)\n    }\n\n    ctx.restore()\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useEffect, useRef, useCallback } from 'react'\nimport {\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useTheme,\n    withContainer,\n} from '@bitbloom/nivo-core'\nimport { renderAxesToCanvas } from '@bitbloom/nivo-axes'\nimport { useTooltip } from '@bitbloom/nivo-tooltip'\nimport { useHeatMap } from './hooks'\nimport { HeatMapDefaultProps, HeatMapPropTypes } from './props'\nimport { renderRect, renderCircle } from './canvas'\nimport HeatMapCellTooltip from './HeatMapCellTooltip'\n\nconst HeatMapCanvas = ({\n    data,\n    keys,\n    indexBy,\n    minValue,\n    maxValue,\n    width,\n    height,\n    margin: partialMargin,\n    forceSquare,\n    padding,\n    sizeVariation,\n    cellShape,\n    cellOpacity,\n    cellBorderColor,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n    enableLabels,\n    labelTextColor,\n    colors,\n    nanColor,\n    isInteractive,\n    onClick,\n    hoverTarget,\n    cellHoverOpacity,\n    cellHoverOthersOpacity,\n    tooltipFormat,\n    tooltip,\n    pixelRatio,\n}) => {\n    const canvasEl = useRef(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { cells, xScale, yScale, offsetX, offsetY, currentCellId, setCurrentCellId } = useHeatMap(\n        {\n            data,\n            keys,\n            indexBy,\n            minValue,\n            maxValue,\n            width: innerWidth,\n            height: innerHeight,\n            padding,\n            forceSquare,\n            sizeVariation,\n            colors,\n            nanColor,\n            cellOpacity,\n            cellBorderColor,\n            labelTextColor,\n            hoverTarget,\n            cellHoverOpacity,\n            cellHoverOthersOpacity,\n        }\n    )\n\n    const theme = useTheme()\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left + offsetX, margin.top + offsetY)\n\n        renderAxesToCanvas(ctx, {\n            xScale,\n            yScale,\n            width: innerWidth - offsetX * 2,\n            height: innerHeight - offsetY * 2,\n            top: axisTop,\n            right: axisRight,\n            bottom: axisBottom,\n            left: axisLeft,\n            theme,\n        })\n\n        ctx.textAlign = 'center'\n        ctx.textBaseline = 'middle'\n\n        let renderCell\n        if (cellShape === 'rect') {\n            renderCell = renderRect\n        } else {\n            renderCell = renderCircle\n        }\n        cells.forEach(cell => {\n            renderCell(ctx, { enableLabels, theme }, cell)\n        })\n    }, [\n        canvasEl,\n        cells,\n        outerWidth,\n        outerHeight,\n        innerWidth,\n        innerHeight,\n        margin,\n        offsetX,\n        offsetY,\n        cellShape,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        theme,\n        enableLabels,\n        pixelRatio,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n            const cell = cells.find(c =>\n                isCursorInRect(\n                    c.x + margin.left + offsetX - c.width / 2,\n                    c.y + margin.top + offsetY - c.height / 2,\n                    c.width,\n                    c.height,\n                    x,\n                    y\n                )\n            )\n            if (cell !== undefined) {\n                setCurrentCellId(cell.id)\n                showTooltipFromEvent(\n                    <HeatMapCellTooltip cell={cell} tooltip={tooltip} format={tooltipFormat} />,\n                    event\n                )\n            } else {\n                setCurrentCellId(null)\n                hideTooltip()\n            }\n        },\n        [\n            canvasEl,\n            cells,\n            margin,\n            offsetX,\n            offsetY,\n            setCurrentCellId,\n            showTooltipFromEvent,\n            hideTooltip,\n            tooltip,\n        ]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrentCellId(null)\n        hideTooltip()\n    }, [setCurrentCellId, hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            if (currentCellId === null) return\n\n            const currentCell = cells.find(cell => cell.id === currentCellId)\n            currentCell && onClick(currentCell, event)\n        },\n        [cells, currentCellId, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nHeatMapCanvas.propTypes = HeatMapPropTypes\n\nconst WrappedHeatMapCanvas = withContainer(HeatMapCanvas)\nWrappedHeatMapCanvas.defaultProps = HeatMapDefaultProps\n\nexport default WrappedHeatMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport HeatMap from './HeatMap'\n\nconst ResponsiveHeatMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <HeatMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveHeatMap\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@bitbloom/nivo-core'\nimport HeatMapCanvas from './HeatMapCanvas'\n\nconst ResponsiveHeatMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <HeatMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveHeatMapCanvas\n"],"names":["defineProperty","HeatMapPropTypes","data","PropTypes","arrayOf","object","isRequired","indexBy","oneOfType","string","func","keys","minValue","oneOf","number","maxValue","forceSquare","bool","sizeVariation","padding","cellShape","cellOpacity","cellBorderWidth","cellBorderColor","inheritedColorPropType","axisTop","axisPropType","axisRight","axisBottom","axisLeft","enableGridX","enableGridY","enableLabels","labelTextColor","colors","quantizeColorScalePropType","nanColor","isInteractive","onClick","hoverTarget","cellHoverOpacity","cellHoverOthersOpacity","tooltipFormat","tooltip","pixelRatio","HeatMapSvgPropTypes","role","HeatMapDefaultProps","from","modifiers","noop","global","window","devicePixelRatio","HeatMapSvgDefaultProps","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arrayWithHoles","iterableToArrayLimit","nonIterableRest","computeX","column","cellWidth","computeY","row","cellHeight","isHoverTargetByType","cell","current","xKey","yKey","rowColumn","computeCells","getIndex","xScale","yScale","sizeScale","colorScale","getLabelTextColor","cells","forEach","datum","key","value","index","sizeMultiplier","width","height","id","x","y","color","isNaN","opacity","push","useHeatMap","_minValue","_maxValue","useState","currentCellId","setCurrentCellId","useMemo","getAccessorFor","indices","map","layoutConfig","columns","length","rows","Math","max","offsetX","offsetY","cellSize","min","scales","scaleOrdinal","i","domain","d","values","allValues","reduce","acc","concat","scaleLinear","range","guessQuantizeColorScale","theme","useTheme","getCellBorderColor","useInheritedColor","cellsWithCurrent","isHoverTarget","currentCell","find","HeatMapCells","cellComponent","handleCellHover","handleCellLeave","React","createElement","borderWidth","borderColor","enableLabel","textColor","onHover","event","undefined","onLeave","HeatMapCellRect","useMotionConfig","animate","springConfig","config","animatedProps","useSpring","transform","xOffset","yOffset","immediate","animated","cursor","labels","text","fill","memo","HeatMapCellCircle","radius","HeatMapCellTooltip","format","BasicTooltip","bind","HeatMap","partialMargin","margin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","useTooltip","showTooltipFromEvent","hideTooltip","useCallback","SvgWrapper","Object","assign","top","left","Grid","Axes","WrappedHeatMap","withContainer","defaultProps","renderRect","ctx","save","globalAlpha","fillStyle","fillRect","font","fontSize","fontFamily","fillText","restore","renderCircle","beginPath","arc","PI","HeatMapCanvas","canvasEl","useRef","useEffect","getContext","scale","background","translate","renderAxesToCanvas","right","bottom","textAlign","textBaseline","renderCell","handleMouseHover","getRelativeCursor","c","isCursorInRect","handleMouseLeave","handleClick","WrappedHeatMapCanvas","ResponsiveHeatMap","props","ResponsiveWrapper","ResponsiveHeatMapCanvas"],"mappings":"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"}