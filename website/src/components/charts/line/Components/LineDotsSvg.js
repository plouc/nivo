/*
 * This file is part of the nivo project.
 *
 * Copyright 2016-present, RaphaÃ«l Benitte.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
import React, { PureComponent, Fragment } from 'react'
import { LineDotsSvg, LineChartSvg } from '@nivo/line'
import ComponentPropsDocumentation from '../../../properties/ComponentPropsDocumentation'

const defaults = LineDotsSvg.defaultProps

const properties = [
    {
        key: 'data',
        required: true,
        description: (
            <div>
                Line data, which must conform to this structure:
                <pre className="code code-block">
                    {`Array.<{ x: {string|number}, y: {number} }}>`}
                </pre>
            </div>
        ),
    },
    {
        key: 'xScale',
        type: '{Function}',
        required: true,
        description: (
            <Fragment>
                The scale to use to compute dots x position, usually generated by the{' '}
                <code>@nivo/scales</code> package.
            </Fragment>
        ),
    },
    {
        key: 'yScale',
        type: '{Function}',
        required: true,
        description: (
            <Fragment>
                The scale to use to compute dots y position, usually generated the{' '}
                <code>@nivo/scales</code> package.
            </Fragment>
        ),
    },
    {
        key: 'everyNth',
        type: '{number}',
        default: defaults.everyNth,
        required: false,
        description:
            'Allows you to only display every nth dot. May be used when you have a lot of points to improve legibility.',
    },
    {
        key: 'size',
        type: '{number}',
        default: defaults.size,
        required: false,
        description: `Controls the dot's size (px).`,
    },
    {
        key: 'animate',
        type: '{boolean}',
        default: defaults.animate,
        required: false,
        description: 'Enable/disable transitions.',
    },
    {
        key: 'motionDamping',
        type: '{number}',
        default: defaults.motionDamping,
        required: false,
        description: 'Motion damping.',
    },
    {
        key: 'motionStiffness',
        type: '{number}',
        default: defaults.motionStiffness,
        required: false,
        description: 'Motion stiffness.',
    },
]

export default class LineDotsSvgDocumentation extends PureComponent {
    render() {
        const { data } = this.props

        return (
            <div>
                <h2>LineDotsSvg</h2>
                <p className="description">
                    This component is responsible for line dots, given a set of points (an array of
                    objects with x/y props), it will display a dot (or custom symbol) with an
                    optional label for each of them.<br />
                    You can also skip some in order to make it more legible using{' '}
                    <code>everyNth</code> property.
                </p>
                <div
                    style={{
                        display: 'grid',
                        gridTemplateColumns: '1fr 260px',
                        gridColumnGap: '20px',
                    }}
                >
                    <div>
                        <ComponentPropsDocumentation
                            chartClass="LineDotsSvg"
                            properties={properties}
                        />
                    </div>
                    <LineChartSvg
                        data={data}
                        width={260}
                        height={180}
                        yScale={{ type: 'linear', min: 0, max: 30 }}
                        margin={{ top: 4, right: 4, bottom: 4, left: 4 }}
                        enableDots={true}
                        dotSize={8}
                        dotColor={() => '#c6432d'}
                        colors={['#dddddd']}
                    />
                </div>
            </div>
        )
    }
}
